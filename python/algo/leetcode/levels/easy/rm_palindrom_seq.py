"""
You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.

https://leetcode.com/problems/remove-palindromic-subsequences/

11/11/22

"""

#the idea is simple: if the whole string is a palindrome, return 1. Otherwise, two steps will be spent to remove all 'a' and all 'b', all a and all b 
# are palindrome themselves.
#https://leetcode.com/problems/remove-palindromic-subsequences/discuss/2124240/One-Major-Observation-or-JAVA-Explanation
def	rm_palindrom(s)->int:
	return 1 if s==s[::-1] else 2

if __name__ == '__main__':
	s = 'ababa'
	print(rm_palindrom(s))
	s = 'abb'
	print(rm_palindrom(s))
	s = 'baabb'
	print(rm_palindrom(s))
