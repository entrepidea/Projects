<?xml version='1.0' encoding='UTF-8' ?><!ENTITY % MxML_Root                                    "documentProperties?, events?, trades?, packages?, securities?, futures?, issuers?, operations?, notes?, decisionTrees?, bundle?"><!ENTITY % MxML_DocumentProperties                      "producedBy? , systemDate? , accountingDate? , computerDate? , computerTime?"><!ENTITY % MxML_Event                                   "action, subAction?, object"><!ENTITY % MxML_Object                                  "objectNature,objectId"><!ENTITY % MxML_Operation                               "operationId?, operationType?, operationSubType?, operationDate, validationLevel?, comment?, inputConditions?, operationSettlementFlows?, operationSources?, operationDestinations?, userDefinedFields?"><!ENTITY % MxML_Package                                 "packageId?, packageMethod?, packageType?, packageDate?, packageTime?, inputConditions?, packageStatus?, (tradeReferences | trades)?, userDefinedFields?"><!ENTITY % MxML_Note                                    "noteId?, noteTitle?, noteText?"><!ENTITY % MxML_Bundle                                  "bundleId, bundleName, bundleDescription, bundleItems"><!ENTITY % MxML_BundleItem                              "object | bundle"><!ENTITY % MxML_DocumentProperties                      "producedBy? , systemDate? , accountingDate? , computerDate? , computerTime?"><!ENTITY % MxML_TradeInputConditions                    "inputBy? , systemDate?, computerDate? , computerTime?, areaCode?"><!ENTITY % MxML_Trade                                   "parties , portfolios? , tradeHeader? , tradeBody? , settlementInstructions? , operations? , tradeInputConditions? , tradeStatus?"><!ENTITY % MxML_Trades                                  "trade+"><!ENTITY % MxML_TradeReferences                         "tradeReference*"><!ENTITY % MxML_TradeReference                          "tradeId?"><!ENTITY % MxML_PartyConventions                        "paymentNetting? , confirmationExchange? , collateralAgreement? , settlementInstructionsMode?"><!ENTITY % MxML_TradeStatus                             "physicalStatus?, validationLevel? , confirmationStatus?"><!ENTITY % MxML_Party                                   "partyName , partyFullName? , partyCode? , partyCategory? , partyStatus? , partyConventions? , partyUserDefinedFields?"><!ENTITY % MxML_Portfolio                               "portfolioLabel , portfolioUserDefinedFields?"><!ENTITY % MxML_SecurityTrade                           "securityId , securityHolderReference , securityWriterReference , quantity , settlement? , valueDate?, maturity?, clearingHouse?"><!ENTITY % MxML_FutureTrade                             "futureId , futureHolderReference , futureWriterReference , quantity , settlement?"><!ENTITY % MxML_SecurityListedOptionTrade               "option , securityId , optionContract? , callPut , strike , strikeExpression? , exoticClauses? , serieId? , quantity , settlement?"><!ENTITY % MxML_FutureOptionTrade                       "option , futureId , callPut , strike , strikeExpression? , optionContract?, serieId?, quantity , settlement? "><!ENTITY % MxML_FxClause                                "fxRule , fxSpot?"><!ENTITY % MxML_CapClause                               "capped , capValue"><!ENTITY % MxML_ForwardStartClauses                     "forwardStartPayoff,date?"><!ENTITY % MxML_CompoundOptionClauses                   "callPut,strike,date?"><!ENTITY % MxML_TotalReturnClauses                      "totalReturnMode,totalReturnFirstDate"><!ENTITY % MxML_SecurityOptionExoticClauses             "(barrierBlock | fixingBlock | ladderBlock | flex)? , fxClause? , parity? , capClause?, digital? , forwardStart? , compound?, totalReturn?"><!ENTITY % MxML_SecurityOption                          "option , securityId , optionContract? , callPut , strike , strikeExpression? , exercizeConventions? , exoticClauses?"><!ENTITY % MxML_SecurityOptionTrade                     "securityOption , quantity , settlement"><!ENTITY % MxML_PartyReference                          "portfolioReference?"><!ENTITY % MxML_TradeSource                             "operationCode , tradeCreatorId? , tradeOriginId?"><!ENTITY % MxML_TradeLink                               "linkId? , linkMethod? , linkCode? , linkLabel? , linkMainTradeInternalId?"><!ENTITY % MxML_TradeAgreements                         "paymentNetting?"><!ENTITY % MxML_TradeHeader                             "tradeDate , tradeCategory? , tradeSource? , tradeLink? , tradeViews , tradeUserDefinedFields? , tradeFees? , tradeAgreements?"><!ENTITY % MxML_TradeCategory                           "tradeDestination? , tradeFamily , tradeGroup , tradeType?"><!ENTITY % MxML_TradeBody                               "(interestRateSwap | currencySwap | equitySwap | assetSwap | totalReturnSwap | capFloor | swaption | captionFloortion | fra | irg | loanDeposit | callDeposit | bond | bondOption | bondFuture | bondFutureOption | interestRateFuture | interestRateFutureOption | equity | equityOption | equityFuture | equityListedOption | fxSpotForward | forexSwap | fxOption | creditDefaultSwap | firstToDefaultBasket | nthToDefaultBasket | creditDefaultSwaption) , tradeUserDefinedType?"><!ENTITY % MxML_FxOption                                "(fxWarrant | fxVanillaOption | fxDigitalOption | fxBarrierOption | fxTouchRebateOption | fxCompoundOption | fxKikoOption | fxStrategyOption | fxAsianOption | fxLookBackOption | fxAccrualOption | fxTouchRebateStrip | fxBasketOption | fxBestOfOption | fxFlexibleTrade) , settlement?, inputData?"><!ENTITY % MxML_FxOptions                               "fxOption*"><!ENTITY % MxML_SettlementInstructionDescription        "flowOriginCurrency? , flowConversion? , flowSettlementMethod? , nostroReferenceId? , specificNostro? , vostroReferenceId? , specificVostro? , comment?"><!ENTITY % MxML_SettlementInstructionKey                "partyReference , flowSign , flowCurrency"><!ENTITY % MxML_SettlementInstruction                   "settlementInstructionKey , settlementInstructionDescription? , nostroInstructions? , vostroInstructions?"><!ENTITY % MxML_SettlementInstructions                  "settlementInstruction*"><!ENTITY % MxML_CapitalCategory                         "cat_initialPayment | cat_nominal | cat_settlement | cat_marginCall | cat_earlySettlement | cat_adjustment | cat_replacement"><!ENTITY % MxML_NominalCategory                         "cat_initial | cat_return"><!ENTITY % MxML_SettlementCategory                      "cat_start | cat_intermediate | cat_end"><!ENTITY % MxML_CouponCategory                          "cat_fixedRate | cat_floatingRate | cat_netRate"><!ENTITY % MxML_RevenueCategory                         "cat_taxCredit | cat_coupon | cat_initialPayment"><!ENTITY % MxML_FeeCategory                             "cat_brokerageFee | cat_brokerageTax | cat_clearingFee | cat_clearingTax | cat_internalFee"><!ENTITY % MxML_FlowCategory                            "cat_capital | cat_revenue | cat_fee"><!ENTITY % MxML_CategorizedFlow                         "flow , flowCategory?"><!ENTITY % MxML_AdditionalFlows                         "additionalFlow*"><!ENTITY % MxML_TerminalNode                            "emptyNode?"><!ENTITY % MxML_Option                                  "optionForm? , optionStyle? , optionHolderReference* , optionWriterReference* , (optionMaturity | (exercizeSchedule , cutOff?)) , optionExercizeMethod"><!ENTITY % MxML_Payout                                  "option*"><!ENTITY % MxML_Settlement                              "(settlementFlow | settlementSchedule)?"><!ENTITY % MxML_BondPriceData                           "cleanPrice?,dirtyPrice?,accruedCoupon?,yield?"><!ENTITY % MxML_PriceExpression                         "fxPremiumQuotation | bondPriceExpression"><!ENTITY % MxML_Price                                   "priceRate , priceExpression?,bondPriceData?"><!ENTITY % MxML_ConvertedFlow                           "payerPartyReference , receiverPartyReference , date , currency , flowType? , initialAmount , finalAmount , exchangeRate"><!ENTITY % MxML_SettlementFlow                          "(flow | convertedFlow) , price?, salesMargin?"><!ENTITY % MxML_Flex                                    "comment? , flexTemplateLabel? , flexUserDefinedFields? , flexBlocks?"><!ENTITY % MxML_FlexBlocks                              "flexBlock*"><!ENTITY % MxML_FlexBlock                               "comment? , blockUserDefinedFields? , (optionBlock | barrierBlock | fixingBlock | ladderBlock | textBlock | userDefinedBlock)?"><!ENTITY % MxML_DoubleBarrier                           "doubleBarrierType?,doubleBarrierPeriod?,lowerBarrier , upperBarrier"><!ENTITY % MxML_BarrierRate                             "rate , appliesIfEqual?"><!ENTITY % MxML_OptionBlockSpecificCharacteristics      "digital? , rate? , currency? , fxQuotation?"><!ENTITY % MxML_OptionBlock                             "callPut? , optionStyle? , strike? , optionMaturity? , deliveryDate? , optionExercizeMethod? , firstExercizeDate? , contingent? , specificCharacteristics?"><!ENTITY % MxML_BarrierBlock                            "singleBarrier | doubleBarrier"><!ENTITY % MxML_FixingBlock                             "startDate , endDate , scheduleGenerator? , observations? , fixingPayment? , fxRateSource?,fixingType?"><!ENTITY % MxML_LadderBlock                             "stepsStart , stepsNumber , (stepsEnd | stepsIncrement) ,percentage?,incrementType?,paymentAt,ladderType?,observations?"><!ENTITY % MxML_TextBlock                               "textBlockLine+"><!ENTITY % MxML_UserDefinedBlock                        "userDefinedStandardFields? , userDefinedVector?"><!ENTITY % MxML_UserDefinedVector                       "userDefinedVectorLine*"><!ENTITY % MxML_Streams                                 "templateID? , structure? , payout? , settlement? , stream* , customized? , customizations?, additionalFlows? , flex?"><!ENTITY % MxML_StreamsTemplateID                       "templateLabel , templateNumber , templateDescription?"><!ENTITY % MxML_StreamsStructure                        "numberOfPhases , numberOfLegs , schedulesConstraintsAcrossLegs? , amortizingRulesConstraintsAcrossLegs?, stubPeriodPosition? "><!ENTITY % MxML_Stream                                  "streamTemplate , payerPartyReference?, receiverPartyReference?, effectiveDate , maturity , rollDate?, lengths? , capital?, (fixedRateStream | floatingRateStream) , stubPeriods? , range? , creditClause? , customized? , cashFlows?"><!ENTITY % MxML_StreamSchedules                         "calculationSchedule , paymentSchedule , resetSchedule? , capitalCalculationSchedule? , capitalPaymentSchedule?"><!ENTITY % MxML_Flow                                    "payerPartyReference , receiverPartyReference , date , currency , flowType? , amount"><!ENTITY % MxML_DatedCurrencyAmount                     "date , amount , currency"><!ENTITY % MxML_Amount                                  "amount,currency"><!ENTITY % MxML_Flows                                   "flow*"><!ENTITY % MxML_Customization                           "phase,leg,customizedObject,customizationForm?,(calculationStartDate|customizationBackwardOffset)?,customizedValue"><!ENTITY % MxML_Customizations                          "customization*"><!ENTITY % MxML_FxQuotation                             "currency1 , currency2 , fxQuoteBasis , formFactor?"><!ENTITY % MxML_FxFixedRate                             "fxQuotation? , rate"><!ENTITY % MxML_FxRateSource                            "sourceLabel , columnLabel"><!ENTITY % MxML_FxRate                                  "(exchangeRate | fxFixing)"><!ENTITY % MxML_FxRange                                 "startDate , endDate"><!ENTITY % MxML_FxFixing                                "currency1 , currency2 , fxRateSource , date , fxQuoteBasis? , formFactor? , percentageLevel?"><!ENTITY % MxML_FxFixings                               "fxFixing+"><!ENTITY % MxML_FxCashSettlement                        "settlementCurrency , fxFixing+"><!ENTITY % MxML_FxLeg                                   "currency1Flow , currency2Flow , (exchangeRate | fxFixing) , margin? , nonDeliverableForward? , fxRange?, inputData?, forwardDelivery?"><!ENTITY % MxML_FxLegs                                  "fxLeg+"><!ENTITY % MxML_SettlementSchedule                      "payerPartyReference , receiverPartyReference , premiumInBp , currency , paymentPosition? , customized? , periodicSettlementFlows?"><!ENTITY % MxML_Delay                                   "delay? , date"><!ENTITY % MxML_OptionMaturity                          "delay? , date , cutOff?"><!ENTITY % MxML_ExercizeEvent                           "exercizeDate"><!ENTITY % MxML_ExercizeEvents                          "exercizeEvent*"><!ENTITY % MxML_PeriodicSettlementFlows                 "periodicSettlementFlow*"><!ENTITY % MxML_ExercizeScheduleBuilder                 "exercizeStreamSchedule? , exercizeStartDate? , exercizeEndDate? , exercizeLegNature? , exercizeFrequencyRatio?"><!ENTITY % MxML_ExercizeSchedule                        "exercizeScheduleBuilder? , customized? , exercizeEvents?"><!ENTITY % MxML_StreamTemplate                          "phase , leg , payoutType? , paymentCurrency , startDateShifter? , paymentBusinessCenters , streamSchedules , floatingRateStreamTemplate? , paymentPosition , rateConvention , rateConversion? , interestFlowsRoundingRule? , discounting? , capitalExchanges? , compounding?"><!ENTITY % MxML_BusinessCenters                         "businessCenterLabel?,businessCenter+"><!ENTITY % MxML_Parties                                 "party+"><!ENTITY % MxML_Portfolios                              "portfolio+"><!ENTITY % MxML_TradeId                                 "tradeInternalId? , tradeExternalId? , tradeGlobalId?"><!ENTITY % MxML_TradeView                               "partyReference , userName? , strategy? , accountingSection? , tradeId? , comments?"><!ENTITY % MxML_UserDefinedField                        "fieldLabel? , fieldId? , fieldIndex? , fieldValue? , fieldType?"><!ENTITY % MxML_TradeFee                                "payerPartyReference , receiverPartyReference , feeType? , feeCode? , feeCurrency , feeAmount"><!ENTITY % MxML_TradeViews                              "tradeView+"><!ENTITY % MxML_UserDefinedFields                       "userDefinedField+"><!ENTITY % MxML_TradeFees                               "tradeFee+"><!ENTITY % MxML_Comments                                "comment+"><!ENTITY % MxML_StreamLengths                           "startDelayLength? , tradeLength? , totalLength?"><!ENTITY % MxML_StreamSchedule                          "(scheduleGenerator , frequency?) | (underlyingSchedule , shifter?)"><!ENTITY % MxML_DateShifter                             "dateShifterLabel , shift , endOfMonthTreatment? , businessDaysSource? , businessCenters? , businessDayConvention?, adjustmentBeforeShift? , adjustmentAfterShift?"><!ENTITY % MxML_DateAdjustmentRule                      "adjustmentRuleLabel , (conditionalAdjustmentRule | unconditionalAdjustmentRule) , businessDayConvention?"><!ENTITY % MxML_AdjustmentPeriod                        "periodType? , periodPosition , periodDefinition? , adjustmentSubPeriod?"><!ENTITY % MxML_Repayment                               "repaymentAmount | repaymentFactor"><!ENTITY % MxML_RangeSchedule                           "rangeScheduleNature? , businessCenters? , firstDayExcluded? , lastDayExcluded?"><!ENTITY % MxML_RangePoint                              "date , rate"><!ENTITY % MxML_RangeLineEquation                       "rangePoint1 , rangePoint2"><!ENTITY % MxML_RangePeriodRate                         "rateFactor? , spread?"><!ENTITY % MxML_RangeFrontier                           "strictCondition , (rate | rangePeriodRate | rangeLineEquation)"><!ENTITY % MxML_Range                                   "index , indexWeight? , rangeSchedule , rangeLowFrontier? , rangeHighFrontier?"><!ENTITY % MxML_StreamCashFlows                         "interestFlows , capitalFlows?"><!ENTITY % MxML_InterestFlows                           "(interestPaymentPeriod*)?"><!ENTITY % MxML_PaymentPeriod                           "paymentDate , calculationPeriod* , (interestFlow | estimatedInterestFlow | accruedInterestFlow | marginFlow)?"><!ENTITY % MxML_FixedRatePeriod                         "fixedRate , applicableRate?"><!ENTITY % MxML_ObservationFrontier                     "rate , strictCondition"><!ENTITY % MxML_Observation                             "indexReference? , observationFormula? , observationDate , (observedRate | estimatedRate | accruedRate)? , observationWeight? , observationLowFrontier? , observationHighFrontier? , timeSerieStartDate? , timeSerieEndDate? , contributingObservations?"><!ENTITY % MxML_Observations                            "observation*"><!ENTITY % MxML_FloatingRatePeriod                      "observations , margin? , strikes?"><!ENTITY % MxML_CalculationPeriod                       "notionalAmount , calculationStartDate , calculationEndDate , unadjustedStartDate? , unadjustedEndDate? , (fixedRatePeriod | floatingRatePeriod?)"><!ENTITY % MxML_AmortizingRule                          "(linearAmortizing | constantAnnuities | interestReinvestment)"><!ENTITY % MxML_AveragedIndex                           "averageUnderlyingIndex , averagingMethod , firstDayExcluded? , lastDayExcluded? , weightingScheduleGenerator? , averagingTimeSerie"><!ENTITY % MxML_Rebate                                  "rebatePayment , rebateAmount , rebateCurrency?"><!ENTITY % MxML_BarrierPayoff                           "barrierType?, barrierScope? , barrierRate , barrierStartDate? , barrierEndDate? , rebate?"><!ENTITY % MxML_BasketIndex                             "basketFormula , basketElement* , additiveConstant?"><!ENTITY % MxML_CapitalExchanges                        "initialCapitalExchange , finalCapitalExchange , intermediateCapitalExchange"><!ENTITY % MxML_CliquetPayoff                           "cliquetStrikes , appliesIfEqual"><!ENTITY % MxML_CompoundedIndex                         "compoundingUnderlyingIndex , underlyingRateConvention , resultRateConvention , compoundingTimeSerie,resetPosition?"><!ENTITY % MxML_Compounding                             "compoundingFormula , (compoundingScope | compoundingFrequencyRatio)"><!ENTITY % MxML_DateTreatment                           "dateTreatment , (dateShifter | dateAdjustmentRule)?"><!ENTITY % MxML_DayCountFraction                        "dayCountFractionLabel , numeratorConvention , denominatorConvention , methodReferenceSource? , dayCountUnit? , dayCountBusinessCenters? , dayCountBoundaries? , cappedDayCount? , dayCountStandardDenomination? , fullPeriods? , periodsBreakdown?"><!ENTITY % MxML_DigitalPayoff                           "digitalType , digitalRate , appliesIfEqual"><!ENTITY % MxML_Discounting                             "discountingRate , (discountingLeg | discountingIndex)?"><!ENTITY % MxML_FixedRateStream                         "fixedRate"><!ENTITY % MxML_FlexiblePayoff                          "flexibleExercizeRule , numberOfAllowedExercizes"><!ENTITY % MxML_FloatingRateStream                      "streamPayout? , indexWeight? , margin? , firstFixing? , ignoreFirstPeriod? , (streamStrikes , digitalPayoff? , barrierPayoff? , flexiblePayoff? , cliquetPayoff? , ratchetPayoff?)?"><!ENTITY % MxML_ExternalFlows                           "paymentWeight? , reinvestmentWeight? , consideredFlows? , paymentDateRule? , shifter?"><!ENTITY % MxML_FloatingRateStreamTemplate              "index , resetBusinessCenters , resetPosition? , (dividends | coupons)? , taxCredit?"><!ENTITY % MxML_Index                                   "indexLabel? , indexCode? , (interestRateIndex | equityIndex | bondIndex | inflationIndex) , resetMode? , indexFormula? , officialReset? , indexUserDefinedFields?"><!ENTITY % MxML_IndexFormula                            "indexFormulaType , (basketIndex | averagedIndex | compoundedIndex) , rateConversion? , roundingRule?"><!ENTITY % MxML_InflationIndex                          "rebaseSchedule? , defaultGrowthRate"><!ENTITY % MxML_Period                                  "periodUnit , periodMultiplier"><!ENTITY % MxML_InterestRateIndex                       "tenor , (currency | swapTemplate)"><!ENTITY % MxML_RatchetPayoff                           "ratchetType"><!ENTITY % MxML_RateConvention                          "rateConventionLabel , dayCountFraction , computingMode? , rateExpression? , rateQuotation? , rateConversion?"><!ENTITY % MxML_RateConversion                          "convertFromRateConvention , convertToRateConvention , conversionPeriod"><!ENTITY % MxML_RoundingRule                            "roundingDirection , roundingPrecision"><!ENTITY % MxML_ScheduleGenerator                       "scheduleGeneratorLabel , (shiftedScheduleGenerator | standardScheduleGenerator)"><!ENTITY % MxML_SecurityIndex                           "securityLabel , securityMarket"><!ENTITY % MxML_StreamBuySellStrikes                    "buyStrike , sellStrike"><!ENTITY % MxML_StreamCapFloorStrikes                   "capStrike , floorStrike"><!ENTITY % MxML_StreamCapital                           "amortizingRule? , ((initialCapitalAmount , initialCapitalCurrency) | (numberOfShares)) , repayment?"><!ENTITY % MxML_StreamStrikes                           "(strike | collarStrikes | strangleStrikes | capSpreadStrikes | floorSpreadStrikes)"><!ENTITY % MxML_StreamsTemplate                         "templateID , structure , streamTemplate*"><!ENTITY % MxML_StubPeriod                              "index*"><!ENTITY % MxML_StubPeriods                             "initialStub? , finalStub?"><!ENTITY % MxML_TimeSerie                               "scheduleGenerator , firstDateTreatment? , firstDateRelativeTo? , lastDateTreatment? , lastDateRelativeTo? , stubPeriodPosition?"><!ENTITY % MxML_FxOptionConditions                      "option , callCurrency , putCurrency , fxStrike"><!ENTITY % MxML_FxVanillaOption                         "option , callCurrencyAmount , putCurrencyAmount , fxStrike , quantoConversionRate? , fxCashSettlementConditions?"><!ENTITY % MxML_FxVanillaOptions                        "fxVanillaOption+"><!ENTITY % MxML_FxDigitalOptions                        "fxDigitalOption+"><!ENTITY % MxML_FxDigitalOptionPaymentExpression        "percentage , faceAmount , faceAmountCurrency"><!ENTITY % MxML_FxDigitalOption                         "fxOptionConditions , digitalPaymentAmount , fxDigitalOptionPaymentExpression? , quantoConversionRate?"><!ENTITY % MxML_FxTouchRebateOption                     "optionHolderReference , optionWriterReference , currency1 , currency2 , fxQuotation , touchRebateType , (barrierRate | (upperBarrierRate , lowerBarrierRate)) , barrierStartDate? , barrierEndDate? , optionMaturity , digitalPaymentAmount , quantoConversionRate?"><!ENTITY % MxML_FxTouchRebateStrip                      "fxTouchRebateOption , fixingBlock"><!ENTITY % MxML_FxCompoundOption                        "option , callPut , strike , fxPremiumQuotation , underlyingFxOption"><!ENTITY % MxML_FxStrategyOption                        "option , callPut , strike , fxPremiumQuotation , faceAmountCurrency , underlyingFxOptions"><!ENTITY % MxML_FxBasketOption                          "option , commonCurrency , currencyFlows , fxCashSettlementConditions? , basketLabel?"><!ENTITY % MxML_FxBestOfOption                          "option , bestOfPayout ,callPut, commonCurrencyAmount,underlyingVanillaOptions , limitRate? , basketLabel?"><!ENTITY % MxML_FxBarrierOption                         "fxOption , barrierBlock"><!ENTITY % MxML_FxKikoOption                            "barrierBlock , (underlyingFxOption | (underlyingFxUpperBarrierOption , underlyingFxLowerBarrierOption)) , faceAmountCurrency"><!ENTITY % MxML_FxFixedStrikeOption                     "fxOptionConditions , faceAmount , faceAmountCurrency , fixingBlock , payoutCurrency , deliveryDate"><!ENTITY % MxML_FxFloatingStrikeOption                  "option , callCurrency , putCurrency , faceAmountCurrency , faceAmount ,fxQuotation, fixingBlock , deliveryDate , fxCashSettlementConditions?"><!ENTITY % MxML_FxAsianOption                           "(fxFloatingStrikeOption | fxFixedStrikeOption) , averageFormulaNature"><!ENTITY % MxML_FxLookBackOption                        "(fxFloatingStrikeOption | fxFixedStrikeOption) , capFloorFxStrike?"><!ENTITY % MxML_FxAccrualFractions                      "aboveFraction? , belowFraction? , insideFraction?"><!ENTITY % MxML_FxAccrualVanillaOption                  "fxVanillaOptions ,faceAmountCurrency , accrualType , fixingBlock , customizedBarrier"><!ENTITY % MxML_FxAccrualDigitalOption                  "fxDigitalOptions ,faceAmountCurrency , accrualType , fixingBlock , upperBarrierRate? , lowerBarrierRate? , fxAccrualFractions? , customizedBarrier"><!ENTITY % MxML_FxAccrualOption                         "(fxAccrualVanillaOption | fxAccrualDigitalOption)"><!ENTITY % MxML_FxGenericOption                         "fxOptionConditions , currencyFlows , fxCashSettlementConditions?"><!ENTITY % MxML_FxWarrant                               "fxWarrantLabel , quantity, fxOption"><!ENTITY % MxML_FxRiskInstrument                        "currency1 , currency2 , fxQuotation? , quantity"><!ENTITY % MxML_FxRiskInstruments                       "fxRiskInstrument*"><!ENTITY % MxML_FxFlexibleTrade                         "flex , flexFormula , plInstrument , faceAmount , (faceAmountCurrency | faceAmountUnit) , maturity , fxRiskInstruments"><!ENTITY % MxML_AnnuityBasedAmortization                "annuity? , amortizingFrequency? , amortizingRate?"><!ENTITY % MxML_LinearAmortization                      "amortizingFrequency? , (amortizingRate | amortizingAmount | endCapital) , calculationRelativeTo"><!ENTITY % MxML_InterestReinvestment                    "reinvestmentLeg , interestReinvestmentFraction?"><!ENTITY % MxML_BasketIndexElement                      "index , indexWeight"><!ENTITY % MxML_ConditionalAdjustmentRule               "conditionExpressionDateTreatment , conditionSatisfiedDateTreatment , conditionNotSatisfiedDateTreatment"><!ENTITY % MxML_UnconditionalAdjustmentRule             "adjustmentPeriod"><!ENTITY % MxML_PeriodPosition                          "relativePosition | absolutePosition"><!ENTITY % MxML_PeriodDefinition                        "periodWeekDay | periodMonthDay"><!ENTITY % MxML_WeekDay                                 "weekDay | weekDayPosition"><!ENTITY % MxML_MonthDay                                "monthDay | monthDayPosition"><!ENTITY % MxML_FullPeriods                             "extractFullPeriods , fullPeriodInterpretation"><!ENTITY % MxML_PeriodsBreakdown                        "periodsDetermination , endOfMonthTreatment? , dayCountPeriodicity"><!ENTITY % MxML_RebaseSchedule                          "rebaseEvent+"><!ENTITY % MxML_RebaseEvent                             "date? , factor"><!ENTITY % MxML_ConversionPeriod                        "conversionPeriodType , numberOfDays?"><!ENTITY % MxML_ShiftedScheduleGenerator                "underlyingScheduleGenerator , shiftDefinition"><!ENTITY % MxML_StandardScheduleGenerator               "defaultFrequency , endOfMonthTreatment? , businessDaysSource? , businessCenters? , businessDayConvention?, adjustmentRule? , generationMode? , startDateTreatment?"><!ENTITY % MxML_SettlementFlows                         "settlementFlow*"><!ENTITY % MxML_OperationSources                        "operationSource+"><!ENTITY % MxML_OperationSource                         "sourceObject, operationQuantity, operationInitialQuantity, partyReference"><!ENTITY % MxML_OperationDestinations                   "operationDestination*"><!ENTITY % MxML_OperationDestination                    "destinationObject"><!ENTITY % MxML_Packages                                "package*"><!ENTITY % MxML_PackageId                               "internalId, externalId, creatorId"><!ENTITY % MxML_PackageStatus                           "validationLevel, cancelled, creationType"><!ENTITY % MxML_TradesIds                               "tradeId*"><!ENTITY % MxML_PartyUser                               "partyName , user"><!ENTITY % MxML_Events                                  "mainEvent, secondaryEvent*"><!ENTITY % MxML_Operations                              "operation*"><!ENTITY % MxML_Notes                                   "note*"><!ENTITY % MxML_BundleItems                             "bundleItem*"><!ENTITY % MxML_PartyGroupUser                          "userName, group?, partyReference?"><!ENTITY % MxML_User                                    "name , group , desk"><!ENTITY % MxML_IssuingConditions                       "(issuingParty|issuer)?,leadManager?,issueDate?,numberIssued?,numberOutstanding?"><!ENTITY % MxML_ExDividendRule                          "shifter?,exDividendShiftReference?"><!ENTITY % MxML_Market                                  "marketLabel?,marketNature?,marketBusinessCenters?,marketCountry?,marketCurrency?"><!ENTITY % MxML_SecurityForwardSettlement               "maturitySet | forwardSettlementRule"><!ENTITY % MxML_SecuritySettlementLags                  "settlementLagsLabel,paymentDateShifter,couponDividendDateShifter,dayCountBoundaries?"><!ENTITY % MxML_SecuritySettlementConditions            "settlementConditionsLabel,settlementLags?,exDividendRule?,clearingHouse?,lotSize?,nominalAmount?,forwardSettlement?,margining?"><!ENTITY % MxML_SecurityPriceQuotation                  "securityPriceNature"><!ENTITY % MxML_SecurityYieldQuotation                  "securityYieldNature"><!ENTITY % MxML_SecurityQuotation                       "(securityPriceQuotation | securityYieldQuotation),notation?,roundingRule?"><!ENTITY % MxML_SecurityQuotations                      "quotationsLabel,mainQuotation,secondaryQuotation?,priceFactor?,tickSize?,priceTolerance?,priceIsAPercentage?"><!ENTITY % MxML_SecurityTradingClauses                  "tradingClausesLabel,currency?,quotations?,settlementConditions?"><!ENTITY % MxML_SecurityTradingConventions              "tradingClauses,currency?,quotations?,settlementConditions?,lotSize,firstSettlementDate?,archivingGroup?"><!ENTITY % MxML_SecurityCode                            "securityExternalCode?,securityInternalCode?,securityISINCode?"><!ENTITY % MxML_SecurityID                              "securityCode?,(securityLabel,securityMarket)"><!ENTITY % MxML_FutureID                                "(futureLabel , futureMarket , (expiryDate , expiryMonth))"><!ENTITY % MxML_Issuers                                 "issuer*"><!ENTITY % MxML_Issuer                                  "issuerName,issuerFullName?,issuerSector?,issuerCountry?,issuerCategory?"><!ENTITY % MxML_Securities                              "security*"><!ENTITY % MxML_MaturitySet                             "maturitySetLabel"><!ENTITY % MxML_InterestRateFutureDefinition            "index,scheduleGenerator,rateConvention"><!ENTITY % MxML_EquityFutureDefinition                  "securityId"><!ENTITY % MxML_BondFutureDefinition                    "templateID,rate,tenor,settlementMethod?"><!ENTITY % MxML_Future                                  "futureLabel,futureMarket,(equityFutureDefinition | interestRateFutureDefinition | bondFutureDefinition),nominalAmount,currency,maturitySet?,quotations,margining?,marginingMaturitySet?,marginingFormula?,clearingHouse?"><!ENTITY % MxML_Futures                                 "future*"><!ENTITY % MxML_SecurityRics                            "ric*"><!ENTITY % MxML_Classifications                         "classification*"><!ENTITY % MxML_EquityIndex                             "securityBasketId?,dividendsTreatment?,indexPriceFactor?"><!ENTITY % MxML_SecurityBasketPriceComponents           "initialPrice?,initialCapitalization?,adjustmentFactor?"><!ENTITY % MxML_SecurityBasketComponent                 "securityId,(numberOfShares | (nominalAmount,price))?,adjustmentFactor?"><!ENTITY % MxML_SecurityBasketComponents                "securityBasketComponent*"><!ENTITY % MxML_SecurityBasket                          "securityBasketNature?,securityBasketElementsNature?,securityBasketPriceFormula?,securityBasketPriceComponents?,theoreticalValuation?,fxRule?,securityBasketVolatilityNature?,adjustmentCoefficientBySecurity?,securityBasketComponents"><!ENTITY % MxML_Adr                                     "securityId,adrFormula?,weight,fxRule?,repaidDividendProportion?,publicationStyle?"><!ENTITY % MxML_SecurityCoupleComponent                 "securityId,weight,strike?"><!ENTITY % MxML_SecurityCouple                          "securityCoupleFormula,securityCoupleElementsNature?,securityCoupleComponent1,securityCoupleComponent2"><!ENTITY % MxML_SecurityFinancialDefinition             "bondDefinition | equityDefinition | equityIndexDefinition | equityFundDefinition | securityBasketDefinition | securityCoupleDefinition | adrDefinition | warrantDefinition" ><!ENTITY % MxML_Security                                "securityId,fullName,financialDefinition?,tradingConventions,issuingConditions?,comments?,rics?,classifications?,userDefinedFields?"><!ENTITY % MxML_BondOptionClause                        "(optionDate | (optionStartDate,optionEndDate)),strikeExpression?,(strike | (strike1,strike2)), (barrierRate |(barrierRate1,barrierRate2))?,gracePeriod?,accretion?"><!ENTITY % MxML_BondOptionClauses                       "bondOptionClause*,couponPaymentOnExercizeDate?"><!ENTITY % MxML_Bond                                    "streams,callable?,puttable?,convertible?,securityIndexed?"><!ENTITY % MxML_SecurityIndexed                         "securityId,callPut,strike,participation?,exoticClauses?"><!ENTITY % MxML_ConversionClauses                       "conversionClause*,referenceNominal,couponPaymentOnConversionDate?,preferred?,rhoDate?"><!ENTITY % MxML_ConversionClause                        "securityId,(date | (startDate,endDate)),mandatoryConversion?,newIssues?,outstandingIssues?,deliveryConditions?"><!ENTITY % MxML_DeliverableQuantity                     "(numberOfShares | (spot,exchangeRate))?"><!ENTITY % MxML_InterpolatedDeliverableQuantity         "spot1,spot2,quantityAtStartDateSpot1,quantityAtEndDateSpot1,quantityAtEndDateSpot2"><!ENTITY % MxML_DeliverableIssues                       "deliverableQuantity | interpolatedDeliverableQuantity"><!ENTITY % MxML_ConversionDeliveryConditions            "bondDelivery?,firstFeeRate?,secondFeeRate?"><!ENTITY % MxML_Fund                                    "underlyingPortfolio,unitNumber,theoreticalValuation"><!ENTITY % MxML_Equity                                  "comingSoon?"><!ENTITY % MxML_Warrant                                 "securityOption"><!ENTITY % MxML_CreditClause                            "generalTerms,creditTerms,settlementTerms,referenceObligations,deliverableObligations,userDefinedFields?"><!ENTITY % MxML_CalculationAgent                        "agentName,agentCity"><!ENTITY % MxML_GeneralTerms                            "referenceEntities,otherReferenceBonds?,payoutUponDefault,calculationAgent?,comments?"><!ENTITY % MxML_SecurityIDs                             "securityId*"><!ENTITY % MxML_CreditEntity                            "securityId | (issuerId,seniority)"><!ENTITY % MxML_CreditEntities                          "creditEntity+"><!ENTITY % MxML_PayoutUponDefault                       "protectionForm,(referencePrice | digitalRate | digitalAmount),protectionPaymentUponDefault,premiumPaymentUponDefault"><!ENTITY % MxML_CreditEventNotice                       "notifyingParty"><!ENTITY % MxML_ConditionsToPayment                     "creditEventNotice?,noticeOfIntendedPhysicalSettlement?,noticeOfPubliclyAvailableInfo?"><!ENTITY % MxML_PublicSources                           "publicSource*">                       <!ENTITY % MxML_NoticeOfPublicInfo                      "publicSources,specifiedNumber"><!ENTITY % MxML_RestructuringSupplement                 "maturityLimitation,maturityLabel"><!ENTITY % MxML_Restructuring                           "restructuringSupplement?"><!ENTITY % MxML_FailureToPay                            "paymentRequirement?,gracePeriodExtension?"><!ENTITY % MxML_UserDefinedCreditEvent                  "creditEventLabel"><!ENTITY % MxML_Downgrade                               "ratingAgency,rating"><!ENTITY % MxML_CreditEvent                             "bankruptcy | failureToPay | obligationDefault | obligationAcceleration | repudiationOrMoratorium | restructuring | downgrade | userDefinedCreditEvent"><!ENTITY % MxML_CreditEvents                            "creditEvent*,defaultRequirement?"><!ENTITY % MxML_CreditTerms                             "creditEvents,conditionsToPayment?"><!ENTITY % MxML_SettlementTerms                         "protectionSettlementMode,cashSettlementTerms?,physicalSettlementTerms?"><!ENTITY % MxML_ValuationDate                           "valuationLag?,valuationStep?,numberOfValuationDates?"><!ENTITY % MxML_Dealers                                 "dealer*"><!ENTITY % MxML_BondValuation                           "valuationDate?,valuationTime?,valuationCity?,quotationMethod?,quotationAmount?,minimumQuotationAmount?,dealers?,excludeAccruedInterest?,valuationMethod?"><!ENTITY % MxML_CashSettlementTerms                     "bondValuation?,protectionSettlementCurrency?,settlementLag?"><!ENTITY % MxML_PhysicalSettlementTerms                 "settlementLag?,customaryS8_5?,cappedSettlementLag?,excludeAccruedInterest?"><!ENTITY % MxML_ReferenceObligationsCharacteristics     "pariPassuRanking?,(standardSpecifiedCurrencies | specifiedCurrencies)?,notSovereignLender?,notDomesticCurrency?,domesticCurrency?,notDomesticLaw?,listed?,notContingent?,notDomesticIssuance?"><!ENTITY % MxML_Currencies                              "currency*"><!ENTITY % MxML_DeliverableObligationsCharacteristics   "pariPassuRanking?,(standardSpecifiedCurrencies | specifiedCurrencies)?,notSovereignLender?,notDomesticCurrency?,domesticCurrency?,notDomesticLaw?,listed?,notContingent?,notDomesticIssuance?,notContingentSupplement?,assignableLoan?,consentRequirementLoan?,directLoanParticipation?,indirectLoanParticipation?,qualifyingParticipationSeller?,transferable?,maximumMaturity?,maturityLabel?,acceleratedOrMatured?,notBearer?"><!ENTITY % MxML_SpecifiedObligations                    "otherObligations?,excludedObligations?,otherObligationsRelatedComment?,excludedObligationsRelatedComment?"><!ENTITY % MxML_ReferenceObligations                    "referenceObligationsCategory?,referenceObligationsCharacteristics?,specifiedObligations?"><!ENTITY % MxML_DeliverableObligations                  "deliverableObligationsCategory?,deliverableObligationsCharacteristics?,specifiedObligations?,partialSettlementOfLoans?,partialSettlementOfAssignableLoans?,partialSettlementOfParticipations?,escrow?,disputeResolution?"><!ENTITY % MxML_DecisionTrees                           "decisionTree*"><!ENTITY % MxML_DecisionTree                            "(treeStructureLabel | treeStructureId),treeLabel,date?,desk?,rules*"><!ENTITY % MxML_Rules                                   "rule*"><!ENTITY % MxML_Rule                                    "criterias,(results | decisionTree)"><!ENTITY % MxML_Criterias                               "criteria*"><!ENTITY % MxML_Results                                 "result*"><!ENTITY % MxML_InputDataValue                          "date?, (rate | exchangeRate)"><!ENTITY % MxML_InputDataItem                           "inputDataLabel, inputDataKey?, inputDataValue"><!ENTITY % MxML_InputData                               "inputDataItem*">  <!ELEMENT MxML                                (%MxML_Root;)>                            <!ATTLIST MxML  version  (1-1 )  #REQUIRED><!-- Represents the description of a linear Amortizing rule. --><!ELEMENT linearAmortizing                    (%MxML_LinearAmortization;)>              <!ATTLIST linearAmortizing          type NMTOKEN  #FIXED 'linearAmortization'><!-- Represents the amount value of the linear amortizing rule. --><!ELEMENT amortizingAmount                    (#PCDATA)>                                <!ATTLIST amortizingAmount          type NMTOKEN  #FIXED 'decimal' ><!-- Represents the end capital of the linear amortizing rule. --><!ELEMENT endCapital                          (#PCDATA)>                                <!ATTLIST endCapital                type NMTOKEN  #FIXED 'decimal' ><!-- Represents the capital for which the  amortizing calculation is done. --><!ELEMENT calculationRelativeTo               (#PCDATA)>                                <!ATTLIST calculationRelativeTo     type NMTOKEN  #FIXED 'string' calculationRelativeToScheme CDATA    #IMPLIED ><!-- Represents a description of the constant annuities amortizing rule. --><!ELEMENT constantAnnuities                   (%MxML_AnnuityBasedAmortization;)>        <!ATTLIST constantAnnuities         type NMTOKEN  #FIXED 'annuityBasedAmortization'><!-- Represents the annuity (constant amount to be discounted from the initial capital at each period) of the constant annuities amortizing rule. --><!ELEMENT annuity                             (#PCDATA)>                                <!ATTLIST annuity                   type NMTOKEN  #FIXED 'decimal' ><!-- Represents the rate of the constant annuities and linear amortizing rules. --><!ELEMENT amortizingRate                      (#PCDATA)>                                <!ATTLIST amortizingRate            type NMTOKEN  #FIXED 'decimal' ><!ELEMENT limitRate                           (#PCDATA)>                                <!ATTLIST limitRate                 type NMTOKEN  #FIXED 'decimal' ><!-- Represents the frequency of the constant annuities and linear amortizing rules. --><!ELEMENT amortizingFrequency                 (%MxML_Period;)>                          <!ATTLIST amortizingFrequency       type NMTOKEN  #FIXED 'period' ><!-- Represents the characteristics of the interestReinvestment amortizing rules (for exemple:constant number of shares,dividends reinvestment ). --><!ELEMENT interestReinvestment                (%MxML_InterestReinvestment;)>            <!ATTLIST interestReinvestment      type NMTOKEN  #FIXED 'interestReinvestment' ><!-- Represents the leg number for which the reinvestment amortizing rule is applied. --><!ELEMENT reinvestmentLeg                     (#PCDATA)>                                <!ATTLIST reinvestmentLeg           type NMTOKEN  #FIXED 'integer' ><!ELEMENT interestReinvestmentFraction        (#PCDATA)>                                <!ATTLIST interestReinvestmentFraction  type NMTOKEN  #FIXED 'decimal' ><!-- represents the description of the average underlying index. --><!ELEMENT averageUnderlyingIndex              (%MxML_Index;)>                           <!ATTLIST averageUnderlyingIndex  type NMTOKEN  #FIXED 'index' ><!-- represents the index averaging method (unweighted, for example). --><!ELEMENT averagingMethod                     (#PCDATA)>                                <!ATTLIST averagingMethod  type NMTOKEN  #FIXED 'string' averagingMethodScheme CDATA  #IMPLIED ><!-- represents the initial flat amount of a payment (a premium in general) before conversion. --><!ELEMENT initialAmount                       (#PCDATA)>                                <!ATTLIST initialAmount  type NMTOKEN  #FIXED 'decimal' ><!-- represents the final flat amount of a payment (a premium in general) after conversion. --><!ELEMENT finalAmount                         (#PCDATA)>                                <!ATTLIST finalAmount  type NMTOKEN  #FIXED 'decimal' ><!-- tells whether the first day is excluded or not (true or false). --><!ELEMENT firstDayExcluded                    (#PCDATA)>                                <!ATTLIST firstDayExcluded  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED > <!-- tells whether the last day is excluded or not (true or false). --><!ELEMENT lastDayExcluded                     (#PCDATA)>                                <!ATTLIST lastDayExcluded  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!ELEMENT weightingScheduleGenerator          (%MxML_ScheduleGenerator;)>               <!ATTLIST weightingScheduleGenerator  type NMTOKEN  #FIXED 'scheduleGenerator' ><!-- represents the description of the index averaging time serie. --><!ELEMENT averagingTimeSerie                  (%MxML_TimeSerie;)>                       <!ATTLIST averagingTimeSerie  type NMTOKEN  #FIXED 'timeSerie' ><!-- represents the type of a barrier for barrier options: Up&In, Up&Out,... --><!ELEMENT barrierType                         (#PCDATA)>                                <!ATTLIST barrierType  type NMTOKEN  #FIXED 'string' barrierTypesScheme CDATA    #IMPLIED ><!-- represents the double barrier type for double barrier options. --><!ELEMENT doubleBarrierType                   (#PCDATA)>                                <!ATTLIST doubleBarrierType  type NMTOKEN  #FIXED 'string' doubleBarrierTypesScheme CDATA #IMPLIED ><!-- represents the period where the barrier of a floating rate stream is checked. For example, it's equal to "capletMaturity". --><!ELEMENT barrierScope                        (#PCDATA)>                                <!ATTLIST barrierScope  type NMTOKEN  #FIXED 'string' barrierScopesScheme CDATA    #IMPLIED ><!-- represents the barrier value for barrier options --><!ELEMENT barrierValue                        (#PCDATA)>                                <!ATTLIST barrierValue  type NMTOKEN  #FIXED 'decimal' ><!-- represents the basket formula of a basket index (weightedAverage, for example). --><!ELEMENT basketFormula                       (#PCDATA)>                                <!ATTLIST basketFormula  type NMTOKEN  #FIXED 'string' basketIndexFormulasScheme CDATA    #IMPLIED ><!-- represents the description of each basket component of a basket index. --><!ELEMENT basketElement                       (%MxML_BasketIndexElement;)>              <!ATTLIST basketElement  type NMTOKEN  #FIXED 'basketIndexElement' ><!-- represents the weight of an index. --><!ELEMENT indexWeight                         (#PCDATA)>                                <!ATTLIST indexWeight  type NMTOKEN  #FIXED 'decimal' ><!-- represents the weight of a rate in a schedule. It is the weight of the fixing price for average options, for example. --><!ELEMENT observationWeight                   (#PCDATA)>                                <!ATTLIST observationWeight  type NMTOKEN  #FIXED 'decimal' ><!-- represents the additive constant of a basket index with a "sum" formula. --><!ELEMENT additiveConstant                    (#PCDATA)>                                <!ATTLIST additiveConstant  type NMTOKEN  #FIXED 'decimal' ><!-- represents the business central component of a businessCenterLabel. In fact, a businessCenterLabel can be the union of many businesscenter. --><!ELEMENT businessCenter                      (#PCDATA)>                                <!ATTLIST businessCenter  type NMTOKEN  #FIXED 'string' ><!-- represents the business center identification label. --><!ELEMENT businessCenterLabel                 (#PCDATA)>                                <!ATTLIST businessCenterLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the business centers components. --><!ELEMENT businessCenters                     (%MxML_BusinessCenters;)>                 <!ATTLIST businessCenters  type NMTOKEN  #FIXED 'BusinessCenters' ><!-- tells whether the initial capital is exchanged or not (True/False). --><!ELEMENT initialCapitalExchange              (#PCDATA)>                                <!ATTLIST initialCapitalExchange  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED ><!-- tells whether the final capital is exchanged or not (True/False). --><!ELEMENT finalCapitalExchange                (#PCDATA)>                                <!ATTLIST finalCapitalExchange  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- tells whether the intermediate capital is exchanged or not (True/False). --><!ELEMENT intermediateCapitalExchange         (#PCDATA)>                                <!ATTLIST intermediateCapitalExchange  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the description strikes of the floating rate stream cliquet payoff. --><!ELEMENT cliquetStrikes                      (%MxML_StreamStrikes;)>                   <!ATTLIST cliquetStrikes  type NMTOKEN  #FIXED 'streamStrikes' ><!-- represents the description of the compounding underlying index. --><!ELEMENT compoundingUnderlyingIndex          (%MxML_Index;)>                           <!ATTLIST compoundingUnderlyingIndex  type NMTOKEN  #FIXED 'index' ><!-- represents the description of the rate convention of the compounding underlying index. --><!ELEMENT underlyingRateConvention            (%MxML_RateConvention;)>                  <!ATTLIST underlyingRateConvention  type NMTOKEN  #FIXED 'rateConvention' ><!-- represents the description of the convention of the compounding implied rate. --><!ELEMENT resultRateConvention                (%MxML_RateConvention;)>                  <!ATTLIST resultRateConvention  type NMTOKEN  #FIXED 'rateConvention' ><!-- represents the description of the index compounding time serie. --><!ELEMENT compoundingTimeSerie                (%MxML_TimeSerie;)>                       <!ATTLIST compoundingTimeSerie  type NMTOKEN  #FIXED 'timeSerie' ><!-- represents the setting that makes use of the compounding. --><!ELEMENT compoundingScope                    (#PCDATA)>                                <!ATTLIST compoundingScope  type NMTOKEN  #FIXED 'string' compoundingScopeScheme CDATA    #IMPLIED ><!-- represents the compounding frequency ratio of the stream. --><!ELEMENT compoundingFrequencyRatio           (#PCDATA)>                                <!ATTLIST compoundingFrequencyRatio  type NMTOKEN  #FIXED 'integer' ><!-- represents the compounding formula of the stream. --><!ELEMENT compoundingFormula                  (#PCDATA)>                                <!ATTLIST compoundingFormula  type  NMTOKEN  #FIXED 'string' compoundingFormulasScheme CDATA    #IMPLIED ><!-- represents the identification of the adjustment rule. --><!ELEMENT adjustmentRuleLabel                 (#PCDATA)>                                <!ATTLIST adjustmentRuleLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the condition dependent flag of the adjustment rule. It appears in case the adjustment rule is based on a condition expression. --><!ELEMENT conditionalAdjustmentRule           (%MxML_ConditionalAdjustmentRule;)><!--represents the condition expression (formula) in a conditional adjustment rule. --><!ELEMENT conditionExpressionDateTreatment    (%MxML_DateTreatment;)>                   <!ATTLIST conditionExpressionDateTreatment  type NMTOKEN  #FIXED 'dateTreatment' ><!--represents the result of the conditional adjustment rule, in case the condition expression (formula) is true or satisfied. --><!ELEMENT conditionSatisfiedDateTreatment     (%MxML_DateTreatment;)>                   <!ATTLIST conditionSatisfiedDateTreatment  type NMTOKEN  #FIXED 'dateTreatment' ><!--represents the result of the conditional adjustment rule, in case the condition expression (formula) is false or not verified. --><!ELEMENT conditionNotSatisfiedDateTreatment  (%MxML_DateTreatment;)>                   <!ATTLIST conditionNotSatisfiedDateTreatment  type NMTOKEN  #FIXED 'dateTreatment' ><!-- represents the uncondition dependent flag of the adjustment rule. It appears in case the adjustment rule is not based on a condition expression. --><!ELEMENT unconditionalAdjustmentRule         (%MxML_UnconditionalAdjustmentRule;)> <!-- represents the adjustment period definition of the adjustment rule. --><!ELEMENT adjustmentPeriod                    (%MxML_AdjustmentPeriod;)>                <!ATTLIST adjustmentPeriod  type NMTOKEN  #FIXED 'adjustmentPeriod' ><!-- represents a time period type: day, month, quarter, year, etc. --><!ELEMENT periodType                          (#PCDATA)>                                <!ATTLIST periodType  type NMTOKEN  #FIXED 'string' periodTypesScheme CDATA #IMPLIED ><!-- represents the position definition corresponding to a specified time period, for example the adjustment period. Period position could be absolute or relative or relative to another one. --><!ELEMENT periodPosition                      (%MxML_PeriodPosition;)><!-- represents the value of a relative period position: current, previous, next, last, etc.--><!ELEMENT relativePosition                    (#PCDATA)>                                <!ATTLIST relativePosition  type NMTOKEN  #FIXED 'string' periodPositionsScheme CDATA    #IMPLIED ><!-- represents the value of an absolute period position. --><!ELEMENT absolutePosition                    (#PCDATA)>                                <!ATTLIST absolutePosition  type NMTOKEN  #FIXED 'string' ><!-- represents a specific time period definition. It could be a specific day of the week or a specific day of the month. --><!ELEMENT periodDefinition                    (%MxML_PeriodDefinition;)><!-- represents the determination of a specific day of the week as a period definition. --><!ELEMENT periodWeekDay                       (%MxML_WeekDay;)><!-- represents the name of a day of the week. --><!ELEMENT weekDay                             (#PCDATA)>                                <!ATTLIST weekDay  type NMTOKEN  #FIXED 'string' weekDaysScheme CDATA    #IMPLIED ><!ELEMENT weekDayPosition                     (#PCDATA)>                                <!ATTLIST weekDayPosition  type NMTOKEN  #FIXED 'string' weekDaysPositionsScheme CDATA    #IMPLIED ><!-- represents the determination of a specific day of the month as a period definition. --><!ELEMENT periodMonthDay                      (%MxML_MonthDay;)><!-- represents the selection of a day of the month: dor example before last monday. --><!ELEMENT monthDay                            (#PCDATA)>                                <!ATTLIST monthDay  type NMTOKEN  #FIXED 'integer' ><!ELEMENT monthDayPosition                    (#PCDATA)>                                <!ATTLIST monthDayPosition  type NMTOKEN  #FIXED 'string' monthDaysPositionsScheme CDATA    #IMPLIED ><!-- represents the definition of a sub period of the adjustment period definition. --><!ELEMENT adjustmentSubPeriod                 (%MxML_AdjustmentPeriod;)>                <!ATTLIST adjustmentSubPeriod  type NMTOKEN  #FIXED 'adjustmentPeriod' ><!-- represents the date shifter rule identification. --><!ELEMENT dateShifterLabel                    (#PCDATA)>                                <!ATTLIST dateShifterLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the date shift definition in the date shifter rule. --><!ELEMENT shift                               (%MxML_Period;)>                          <!ATTLIST shift  type NMTOKEN  #FIXED 'Period' ><!-- represents the schedule generator business day convention, in case the date calculated coincides with a holiday, the date generated follows the business day convention rule: previous day, next day, indifferent, etc. --><!ELEMENT businessDayConvention               (#PCDATA)>                                <!ATTLIST businessDayConvention  type NMTOKEN  #FIXED 'string' businessDayConventionScheme CDATA    #IMPLIED ><!-- represents the flag of the date adjustement before the date shift in a schedule generator definition. --><!ELEMENT adjustmentBeforeShift               (%MxML_DateAdjustmentRule;)>              <!ATTLIST adjustmentBeforeShift  type NMTOKEN  #FIXED 'DateAdjustmentRule' ><!-- represents the flag of the date adjustement after the date shift in a schedule generator definition. --><!ELEMENT adjustmentAfterShift                (%MxML_DateAdjustmentRule;)>              <!ATTLIST adjustmentAfterShift  type NMTOKEN  #FIXED 'DateAdjustmentRule' ><!-- represents the date treatement flag. It is equal to "adjusted" when an adjustment is to be applied to the date. --><!ELEMENT dateTreatment                       (#PCDATA)>                                <!ATTLIST dateTreatment  type NMTOKEN  #FIXED 'string' dateTreatmentsScheme CDATA    #IMPLIED ><!-- represents the schedule generator date shifter definition. --><!ELEMENT dateShifter                         (%MxML_DateShifter;)>                     <!ATTLIST dateShifter  type NMTOKEN  #FIXED 'dateShifter' ><!ELEMENT dateAdjustmentRule                  (%MxML_DateAdjustmentRule;)>              <!ATTLIST dateAdjustmentRule  type NMTOKEN  #FIXED 'dateAdjustmentRule' > <!-- represents the label of the rate convention basis (ACT/360, for example). --><!ELEMENT dayCountFractionLabel               (#PCDATA)>                                <!ATTLIST dayCountFractionLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the numerator of the rate convention basis (ACT, for example). --><!ELEMENT numeratorConvention                 (#PCDATA)>                                <!ATTLIST numeratorConvention  type NMTOKEN  #FIXED 'string'  dayCountConventionScheme CDATA    #IMPLIED ><!-- represents the denominator of the rate convention basis (360, for example). --><!ELEMENT denominatorConvention               (#PCDATA)>                                <!ATTLIST denominatorConvention  type NMTOKEN  #FIXED 'string' dayCountConventionScheme CDATA    #IMPLIED ><!ELEMENT methodReferenceSource               (#PCDATA)>                                <!ATTLIST methodReferenceSource  type NMTOKEN  #FIXED 'string' numeratorMethodScheme CDATA    #IMPLIED ><!ELEMENT dayCountUnit                        (#PCDATA)>                                <!ATTLIST dayCountUnit  type NMTOKEN  #FIXED 'string' dayCountUnitScheme CDATA    #IMPLIED ><!ELEMENT dayCountBusinessCenters             (%MxML_BusinessCenters;)>                 <!ATTLIST dayCountBusinessCenters  type NMTOKEN  #FIXED 'BusinessCenters' ><!ELEMENT dayCountBoundaries                  (#PCDATA)>                                <!ATTLIST dayCountBoundaries  type NMTOKEN  #FIXED 'string' dayCountBoundariesScheme CDATA    #IMPLIED ><!ELEMENT cappedDayCount                      (#PCDATA)>                                <!ATTLIST cappedDayCount type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the standard denomination of the rate convention basis (ACT/365.FIXED, for example). --><!ELEMENT dayCountStandardDenomination        (#PCDATA)>                                <!ATTLIST dayCountStandardDenomination  type NMTOKEN  #FIXED 'string' dayCountStandardDenominationScheme CDATA    #IMPLIED ><!ELEMENT fullPeriods                         (%MxML_FullPeriods;)><!ELEMENT extractFullPeriods                  (#PCDATA)>                                <!ATTLIST extractFullPeriods  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!ELEMENT fullPeriodInterpretation            (#PCDATA)>                                <!ATTLIST fullPeriodInterpretation  type NMTOKEN  #FIXED 'string' fullPeriodsInterpretationScheme CDATA    #IMPLIED ><!ELEMENT periodsBreakdown                    (%MxML_PeriodsBreakdown;)><!ELEMENT periodsDetermination                (#PCDATA)>                                <!ATTLIST periodsDetermination  type NMTOKEN  #FIXED 'string' periodsDeterminationScheme CDATA    #IMPLIED ><!-- represents the flag that activates the end of month date calculation in case the schedule is greater that one month. If this flag is activated, the calculated period is adjusted to the "real" end of month date. --><!ELEMENT endOfMonthTreatment                 (#PCDATA)>                                <!ATTLIST endOfMonthTreatment  type NMTOKEN  #FIXED 'string' endOfMonthTreatmentScheme CDATA    #IMPLIED ><!ELEMENT dayCountPeriodicity                 (#PCDATA)>                                <!ATTLIST dayCountPeriodicity  type NMTOKEN  #FIXED 'string' dayCountPeriodicityScheme CDATA    #IMPLIED ><!ELEMENT digitalType                         (#PCDATA)>                                <!ATTLIST digitalType  type NMTOKEN  #FIXED 'string' digitalPayoutsScheme CDATA    #IMPLIED ><!-- represents the digital rate of a floating rate stream. --><!ELEMENT digitalRate                         (#PCDATA)>                                <!ATTLIST digitalRate  type NMTOKEN  #FIXED 'decimal' > <!-- could represent a flag that activates a barrier. It could be the high or the low barrier in barrier options. It is always set to true in this case. It can also be related to digital options: For example, it's equal to false for a digital cap with a payout form "Digital >". When the digital form is "Digital >=", it's equal to true. --><!ELEMENT appliesIfEqual                      (#PCDATA)>                                <!ATTLIST appliesIfEqual  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the discounting rate of the stream. --><!ELEMENT discountingRate                     (#PCDATA)>                                <!ATTLIST discountingRate  type NMTOKEN  #FIXED 'string' discountingRatesScheme CDATA    #IMPLIED ><!-- represents the discounting leg of the stream. --><!ELEMENT discountingLeg                      (#PCDATA)>                                <!ATTLIST discountingLeg  type NMTOKEN  #FIXED 'integer' ><!-- represents the discounting index of the stream. --><!ELEMENT discountingIndex                    (%MxML_Index;)>                           <!ATTLIST discountingIndex  type NMTOKEN  #FIXED 'index' ><!-- represents the fixed rate. --><!ELEMENT fixedRate                           (#PCDATA)>                                <!ATTLIST fixedRate  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT applicableRate                      (#PCDATA)>                                <!ATTLIST applicableRate  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT flexibleExercizeRule                (#PCDATA)>                                <!ATTLIST flexibleExercizeRule  type  NMTOKEN  #FIXED 'string' exercizeRulesScheme CDATA    #IMPLIED ><!ELEMENT numberOfAllowedExercizes            (#PCDATA)>                                <!ATTLIST numberOfAllowedExercizes  type NMTOKEN  #FIXED 'integer' ><!-- represents the payout style of a floating rate stream (cap, floor, ...). --><!ELEMENT streamPayout                        (#PCDATA)>                                <!ATTLIST streamPayout  type NMTOKEN  #FIXED 'string' streamPayoutsScheme CDATA    #IMPLIED ><!-- represents a value to be added to the price of the deal. --><!ELEMENT margin                              (#PCDATA)>                                <!ATTLIST margin  type NMTOKEN  #FIXED 'decimal' ><!-- represents the first fixing of a floating rate stream. --><!ELEMENT firstFixing                         (#PCDATA)>                                <!ATTLIST firstFixing  type NMTOKEN  #FIXED 'decimal' ><!-- tells whether the first period of a floating rate stream is ignored or not (True, False). --><!ELEMENT ignoreFirstPeriod                   (#PCDATA)>                                <!ATTLIST ignoreFirstPeriod  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the information related to a floating rate stream strike. --><!ELEMENT streamStrikes                       (%MxML_StreamStrikes;)>                   <!ATTLIST streamStrikes  type NMTOKEN  #FIXED 'streamStrikes' ><!-- represents the description of the floating rate stream digital payoff. --><!ELEMENT digitalPayoff                       (%MxML_DigitalPayoff;)>                   <!ATTLIST digitalPayoff  type NMTOKEN  #FIXED 'digitalPayoff' ><!-- represents the description of the floating rate stream barrier payoff. --><!ELEMENT barrierPayoff                       (%MxML_BarrierPayoff;)>                   <!ATTLIST barrierPayoff  type NMTOKEN  #FIXED 'barrierPayoff' ><!ELEMENT flexiblePayoff                      (%MxML_FlexiblePayoff;)>                  <!ATTLIST flexiblePayoff  type NMTOKEN  #FIXED 'flexiblePayoff' ><!-- represents the description of the floating rate stream cliquet payoff. --><!ELEMENT cliquetPayoff                       (%MxML_CliquetPayoff;)>                   <!ATTLIST cliquetPayoff  type NMTOKEN  #FIXED 'cliquetPayoff' ><!-- represents the description of the floating rate stream ratchet payoff. --><!ELEMENT ratchetPayoff                       (%MxML_RatchetPayoff;)>                   <!ATTLIST ratchetPayoff  type NMTOKEN  #FIXED 'ratchetPayoff' ><!-- represents the index description. --><!ELEMENT index                               (%MxML_Index;)>                           <!ATTLIST index  type NMTOKEN  #FIXED 'index' ><!-- represents the index archiving group calendar description. --><!ELEMENT resetBusinessCenters                (%MxML_BusinessCenters;)>                 <!ATTLIST resetBusinessCenters  type NMTOKEN  #FIXED 'businessCenters' ><!-- represents the description of the stream fixing schedule. --><!ELEMENT resetSchedule                       (%MxML_StreamSchedule;)>                  <!ATTLIST resetSchedule  type NMTOKEN  #FIXED 'streamSchedule' ><!-- represents the fixing mode of the interest rate generator (Up front, for example). --><!ELEMENT resetPosition                       (#PCDATA)>                                <!ATTLIST resetPosition  type NMTOKEN  #FIXED 'string' resetPositionsScheme CDATA    #IMPLIED ><!-- represents the index label. --><!ELEMENT indexLabel                          (#PCDATA)>                                <!ATTLIST indexLabel  type NMTOKEN  #FIXED 'string' ><!ELEMENT indexCode                           (#PCDATA)>                                <!ATTLIST indexCode  type NMTOKEN  #FIXED 'string' ><!-- represents the interest rate index description. --><!ELEMENT interestRateIndex                   (%MxML_InterestRateIndex;)>               <!ATTLIST interestRateIndex  type NMTOKEN  #FIXED 'InterestRateIndex' ><!-- Represents the equity index definition. --><!ELEMENT equityIndex                         (%MxML_SecurityIndex;)>                   <!ATTLIST equityIndex  type NMTOKEN  #FIXED 'SecurityIndex' ><!ELEMENT bondIndex                           (%MxML_SecurityIndex;)>                   <!ATTLIST bondIndex  type NMTOKEN  #FIXED 'SecurityIndex' ><!ELEMENT inflationIndex                      (%MxML_InflationIndex;)>                  <!ATTLIST inflationIndex  type NMTOKEN  #FIXED 'InflationIndex' ><!-- represents the fixings formula (Published, for instance). --><!ELEMENT resetMode                           (#PCDATA)>                                <!ATTLIST resetMode  type NMTOKEN  #FIXED 'string' resetModeScheme CDATA    #IMPLIED ><!-- represents the description of an index formula. --><!ELEMENT indexFormula                        (%MxML_IndexFormula;)>                    <!ATTLIST indexFormula  type NMTOKEN  #FIXED 'IndexFormula' ><!-- tells whether there is an official reset for an average, compounded or basket index or not (true or false). --><!ELEMENT officialReset                       (#PCDATA)>                                <!ATTLIST officialReset  type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the index formula type (average, for instance). --><!ELEMENT indexFormulaType                    (#PCDATA)>                                <!ATTLIST indexFormulaType  type NMTOKEN  #FIXED 'string' indexFormulasScheme CDATA    #IMPLIED ><!-- represents the description of the basket index. --><!ELEMENT basketIndex                         (%MxML_BasketIndex;)>                     <!ATTLIST basketIndex  type NMTOKEN  #FIXED 'BasketIndex' > <!-- represents the description of the averaged index. --><!ELEMENT averagedIndex                       (%MxML_AveragedIndex;)>                   <!ATTLIST averagedIndex  type NMTOKEN  #FIXED 'AveragedIndex' ><!-- represents the description of the compounded index. --><!ELEMENT compoundedIndex                     (%MxML_CompoundedIndex;)>                 <!ATTLIST compoundedIndex  type NMTOKEN  #FIXED 'CompoundedIndex' ><!-- represents the description of the rate conversion from a convention to another. --><!ELEMENT rateConversion                      (%MxML_RateConversion;)>                  <!ATTLIST rateConversion  type NMTOKEN  #FIXED 'RateConversion' ><!-- represents the description of an index formula rounding rule. --><!ELEMENT roundingRule                        (%MxML_RoundingRule;)>                    <!ATTLIST roundingRule  type NMTOKEN  #FIXED 'RoundingRule' ><!ELEMENT rebaseSchedule                      (%MxML_RebaseSchedule;)> <!ELEMENT rebaseEvent                         (%MxML_RebaseEvent;)><!-- represents a date information --><!ELEMENT date                                (#PCDATA)>                                <!ATTLIST date  type NMTOKEN  #FIXED 'date' ><!ELEMENT factor                              (#PCDATA)>                                <!ATTLIST factor  type NMTOKEN  #FIXED 'string' ><!ELEMENT defaultGrowthRate                   (#PCDATA)>                                <!ATTLIST defaultGrowthRate  type NMTOKEN  #FIXED 'string' ><!-- represents the description of the swap template of an interest rate index. --><!ELEMENT swapTemplate                        (%MxML_StreamsTemplate;)>                 <!ATTLIST swapTemplate  type NMTOKEN  #FIXED 'streamsTemplate' ><!-- represents the currency of a certain amount. --><!ELEMENT currency                            (#PCDATA)>                                <!ATTLIST currency  type NMTOKEN  #FIXED 'string' ><!-- represents the schedule generator quick description of an interest rate index. --><!ELEMENT tenor                               (%MxML_Period;)>                          <!ATTLIST tenor  type NMTOKEN  #FIXED 'Period' ><!-- represents time period unit of the schedule generator frequency (or shifter): day, week, month, quarter, year, etc. --><!ELEMENT periodUnit                          (#PCDATA)>                                <!ATTLIST periodUnit  type NMTOKEN  #FIXED 'string' periodUnitScheme CDATA    #IMPLIED ><!-- represents the period unit multiplier (number of period units) for the schedule generator frequency (or shifter). In other terms the period between two consecutive dates generated by the schedule generator (or shifter). --><!ELEMENT periodMultiplier                    (#PCDATA)>                                <!ATTLIST periodMultiplier  type NMTOKEN  #FIXED 'string' ><!-- represents the type of the floating rate stream ratchet payoff. --><!ELEMENT ratchetType                         (#PCDATA)>                                <!ATTLIST ratchetType  type NMTOKEN  #FIXED 'string' ratchetTypesScheme CDATA    #IMPLIED ><!-- represents the rate convention label. --><!ELEMENT rateConventionLabel                 (#PCDATA)>                                <!ATTLIST rateConventionLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the rate convention basis description. --><!ELEMENT dayCountFraction                    (%MxML_DayCountFraction;)>                <!ATTLIST dayCountFraction  type NMTOKEN  #FIXED 'DayCountFraction' ><!ELEMENT computingMode                       (#PCDATA)>                                <!ATTLIST computingMode  type NMTOKEN  #FIXED 'string' computingModeScheme CDATA    #IMPLIED ><!ELEMENT rateExpression                      (#PCDATA)>                                <!ATTLIST rateExpression  type NMTOKEN  #FIXED 'string' rateExpressionScheme CDATA    #IMPLIED ><!ELEMENT rateQuotation                       (#PCDATA)>                                <!ATTLIST rateQuotation  type NMTOKEN  #FIXED 'string' rateQuotationScheme CDATA    #IMPLIED ><!ELEMENT MxML_RateConvention                 (%MxML_RateConvention;)>                  <!ATTLIST MxML_RateConvention  type NMTOKEN  #FIXED 'RateConvention' ><!-- represents the description of a rate convention to be converted. --><!ELEMENT convertFromRateConvention           (%MxML_RateConvention;)>                  <!ATTLIST convertFromRateConvention  type NMTOKEN  #FIXED 'RateConvention' ><!-- represents the description of a rate convention to be converted to. --><!ELEMENT convertToRateConvention             (%MxML_RateConvention;)>                  <!ATTLIST convertToRateConvention  type NMTOKEN  #FIXED 'RateConvention' ><!-- represents the description of a rate conversion period from one convention to another. --><!ELEMENT conversionPeriod                    (%MxML_ConversionPeriod;)>  <!-- represents the rate conversion period type from one convention to another. --><!ELEMENT conversionPeriodType                (#PCDATA)>                                <!ATTLIST conversionPeriodType  type NMTOKEN  #FIXED 'string' conversionPeriodScheme CDATA    #IMPLIED ><!ELEMENT numberOfDays                        (#PCDATA)>                                <!ATTLIST numberOfDays  type NMTOKEN  #FIXED 'integer' ><!-- represents the direction of an index formula rounding rule (nearest, for instance). --><!ELEMENT roundingDirection                   (#PCDATA)>                                <!ATTLIST roundingDirection  type NMTOKEN  #FIXED 'string' roundingDirectionScheme CDATA    #IMPLIED ><!-- represents the precision (or number of decimals) of an index formula rounding rule. --><!ELEMENT roundingPrecision                   (#PCDATA)>                                <!ATTLIST roundingPrecision  type NMTOKEN  #FIXED 'integer' ><!-- represents the time schedule generator label (identifier) as defined in Murex. --><!ELEMENT scheduleGeneratorLabel              (#PCDATA)>                                <!ATTLIST scheduleGeneratorLabel  type NMTOKEN  #FIXED 'string' > <!ELEMENT shiftedScheduleGenerator            (%MxML_ShiftedScheduleGenerator;)><!ELEMENT underlyingScheduleGenerator         (%MxML_ScheduleGenerator;)>               <!ATTLIST underlyingScheduleGenerator  type NMTOKEN  #FIXED 'ScheduleGenerator' ><!ELEMENT shiftDefinition                     (%MxML_DateShifter;)>                     <!ATTLIST shiftDefinition  type NMTOKEN  #FIXED 'DateShifter' ><!-- represents a time schedule generator definition: 1Month, 3Month, 1Year, etc. --><!ELEMENT standardScheduleGenerator           (%MxML_StandardScheduleGenerator;)><!-- represents the schedule generator default frequency description. --><!ELEMENT defaultFrequency                    (%MxML_Period;)>                          <!ATTLIST defaultFrequency  type NMTOKEN  #FIXED 'Period' ><!ELEMENT frequency                           (%MxML_Period;)>                          <!ATTLIST frequency  type NMTOKEN  #FIXED 'Period' ><!-- represents the calendar checking rule of the starting schedule shifter. The calendar checking rule could be internal, external,or week-end. --><!ELEMENT businessDaysSource                  (#PCDATA)>                                <!ATTLIST businessDaysSource  type NMTOKEN  #FIXED 'string' businessDaysSourceScheme CDATA    #IMPLIED ><!-- represents the description of the schedule generator adjustment rule. --><!ELEMENT adjustmentRule                      (%MxML_DateAdjustmentRule;)>              <!ATTLIST adjustmentRule  type NMTOKEN  #FIXED 'DateAdjustmentRule' ><!ELEMENT generationMode                      (#PCDATA)>                                <!ATTLIST generationMode  type NMTOKEN  #FIXED 'string' generationModeScheme CDATA    #IMPLIED ><!-- represents the special date treatement rule at the start of a time period or at the start of a time schedule, for example apply a shift of 1 day at the start of the schedule period.  --><!ELEMENT startDateTreatment                  (%MxML_DateTreatment;)>                   <!ATTLIST startDateTreatment  type NMTOKEN  #FIXED 'DateTreatment' ><!-- represents the label of the security instrument. --><!ELEMENT securityLabel                       (#PCDATA)>                                <!ATTLIST securityLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the market of the security instrument. --><!ELEMENT securityMarket                      (#PCDATA)>                                <!ATTLIST securityMarket  type NMTOKEN  #FIXED 'string' ><!-- represents the buy strike of a floating stream. --><!ELEMENT buyStrike                           (#PCDATA)>                                <!ATTLIST buyStrike  type NMTOKEN  #FIXED 'decimal' ><!-- represents the sell strike of a floating stream. --><!ELEMENT sellStrike                          (#PCDATA)>                                <!ATTLIST sellStrike  type NMTOKEN  #FIXED 'decimal' ><!-- represents the cap strike of a Cap/Floor. --><!ELEMENT capStrike                           (#PCDATA)>                                <!ATTLIST capStrike  type NMTOKEN  #FIXED 'decimal' ><!-- represents the floor strike of a Cap/Floor. --><!ELEMENT floorStrike                         (#PCDATA)>                                <!ATTLIST floorStrike  type NMTOKEN  #FIXED 'decimal' ><!-- Represents a description of the amortizing rule. --><!ELEMENT amortizingRule                      (%MxML_AmortizingRule;)>                  <!ATTLIST amortizingRule  type NMTOKEN  #FIXED 'amortizingRule' ><!-- Represents the number of shares defining the Nominal. --><!ELEMENT numberOfShares                      (#PCDATA)>                                <!ATTLIST numberOfShares  type NMTOKEN  #FIXED 'string' ><!-- represents the stream initial capital amount. --><!ELEMENT initialCapitalAmount                (#PCDATA)>                                <!ATTLIST initialCapitalAmount  type NMTOKEN  #FIXED 'decimal' ><!-- represents the stream initial capital amount currency. --><!ELEMENT initialCapitalCurrency              (#PCDATA)>                                <!ATTLIST initialCapitalCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the strike. --><!ELEMENT strike                              (#PCDATA)>                                <!ATTLIST strike  type NMTOKEN  #FIXED 'decimal' ><!-- represents the description of collar strikes. --><!ELEMENT collarStrikes                       (%MxML_StreamCapFloorStrikes;)>           <!ATTLIST collarStrikes  type NMTOKEN  #FIXED 'streamCapFloorStrikes' ><!-- represents the description of strangle strikes. --><!ELEMENT strangleStrikes                     (%MxML_StreamCapFloorStrikes;)>           <!ATTLIST strangleStrikes  type NMTOKEN  #FIXED 'streamCapFloorStrikes' ><!-- represents the description of cap spread strikes. --><!ELEMENT capSpreadStrikes                    (%MxML_StreamBuySellStrikes;)>            <!ATTLIST capSpreadStrikes  type NMTOKEN  #FIXED 'streamBuySellStrikes' ><!-- represents the description of floor spread strikes. --><!ELEMENT floorSpreadStrikes                  (%MxML_StreamBuySellStrikes;)>            <!ATTLIST floorSpreadStrikes  type NMTOKEN  #FIXED 'streamBuySellStrikes' ><!-- represents the phase number of an Interest Rate deal (it's equal to 1 for a Loan/Deposit, for instance). --><!ELEMENT phase                               (#PCDATA)>                                <!ATTLIST phase  type NMTOKEN  #FIXED 'integer' ><!-- represents the leg number of an Interest rate deal (it's equal to 1 for a Loan/Deposit, for instance). --><!ELEMENT leg                                 (#PCDATA)>                                <!ATTLIST leg  type NMTOKEN  #FIXED 'integer' ><!-- represents the Interest rate deal nature (it's equal to "floatingRate" for a Loan/Deposit, for instance). --><!ELEMENT payoutType                          (#PCDATA)>                                <!ATTLIST payoutType  type NMTOKEN  #FIXED 'integer' payoutTypesScheme CDATA    #IMPLIED ><!-- represents the generator currency of an Interest rate deal (It's equal to the index currency of a floating rate loan, for instance. --><!ELEMENT paymentCurrency                     (#PCDATA)>                                <!ATTLIST paymentCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the start delay description of an Interest rate deal generator. --><!ELEMENT startDateShifter                    (%MxML_DateShifter;)>                     <!ATTLIST startDateShifter  type NMTOKEN  #FIXED 'dateShifter' ><!-- represents the payment calendar of an Interest rate deal generator. --><!ELEMENT paymentBusinessCenters              (%MxML_BusinessCenters;)>                 <!ATTLIST paymentBusinessCenters  type NMTOKEN  #FIXED 'businessCenters' ><!-- represents the description of the stream schedules. --><!ELEMENT streamSchedules                     (%MxML_StreamSchedules;)>                 <!ATTLIST streamSchedules  type NMTOKEN  #FIXED 'streamSchedules' ><!-- represents the description of the stream calculation schedule. --><!ELEMENT calculationSchedule                 (%MxML_StreamSchedule;)>                  <!ATTLIST calculationSchedule  type NMTOKEN  #FIXED 'streamSchedule' ><!-- represents the description of the stream payment schedule. --><!ELEMENT paymentSchedule                     (%MxML_StreamSchedule;)>                  <!ATTLIST paymentSchedule  type NMTOKEN  #FIXED 'streamSchedule' ><!ELEMENT capitalCalculationSchedule          (%MxML_StreamSchedule;)>                  <!ATTLIST capitalCalculationSchedule  type NMTOKEN  #FIXED 'streamSchedule' ><!ELEMENT capitalPaymentSchedule              (%MxML_StreamSchedule;)>                  <!ATTLIST capitalPaymentSchedule  type NMTOKEN  #FIXED 'streamSchedule' ><!-- represents the description of the stream floating rate. --><!ELEMENT floatingRateStreamTemplate          (%MxML_FloatingRateStreamTemplate;)>      <!ATTLIST floatingRateStreamTemplate  type NMTOKEN  #FIXED 'floatingRateStreamTemplate' ><!-- represents the payment mode (In arrears, for example. --><!ELEMENT paymentPosition                     (#PCDATA)>                                <!ATTLIST paymentPosition  type NMTOKEN  #FIXED 'string'  paymentPositionsScheme CDATA    #IMPLIED ><!-- represents the rate convention description. --><!ELEMENT rateConvention                      (%MxML_RateConvention;)>                  <!ATTLIST rateConvention  type NMTOKEN  #FIXED 'rateConvention' ><!ELEMENT interestFlowsRoundingRule           (%MxML_RoundingRule;)>                    <!ATTLIST interestFlowsRoundingRule  type NMTOKEN  #FIXED 'roundingRule' ><!-- represents the discounting description of a stream. --><!ELEMENT discounting                         (%MxML_Discounting;)>                     <!ATTLIST discounting  type NMTOKEN  #FIXED 'discounting' ><!-- represents the information regarding capital exchanges. --><!ELEMENT capitalExchanges                    (%MxML_CapitalExchanges;)>                <!ATTLIST capitalExchanges  type NMTOKEN  #FIXED 'capitalExchanges' ><!-- represents the description of the stream compounding. --><!ELEMENT compounding                         (%MxML_Compounding;)>                     <!ATTLIST compounding  type NMTOKEN  #FIXED 'compounding' ><!-- represents the number of phases of a stream structure. --><!ELEMENT numberOfPhases                      (#PCDATA)>                                <!ATTLIST numberOfPhases  type NMTOKEN  #FIXED 'integer' ><!-- represents the number of legs of a stream structure. --><!ELEMENT numberOfLegs                        (#PCDATA)>                                <!ATTLIST numberOfLegs  type NMTOKEN  #FIXED 'integer' ><!-- tells whether the schedules used by the legs are the same in a stream structure. This tag doen't appear when the schedules are independent. --><!ELEMENT schedulesConstraintsAcrossLegs      (#PCDATA)>                                <!ATTLIST schedulesConstraintsAcrossLegs  type NMTOKEN  #FIXED 'string' schedulesConstraintsScheme CDATA    #IMPLIED ><!-- tells whether the amortizing rules used by the legs are the same in a stream structure. This tag doen't appear when the amortising rules are independent. --><!ELEMENT amortizingRulesConstraintsAcrossLegs (#PCDATA)>                               <!ATTLIST amortizingRulesConstraintsAcrossLegs  type NMTOKEN  #FIXED 'string' amortizingRulesConstraintsScheme CDATA    #IMPLIED ><!-- represents the generator of a stream. --><!ELEMENT templateID                          (%MxML_StreamsTemplateID;)>               <!ATTLIST templateID  type NMTOKEN  #FIXED 'streamsTemplateID' ><!-- represents the structure of a Interest Rate deal when it has more than 1 leg (number of phases, number of legs, ...). --><!ELEMENT structure                           (%MxML_StreamsStructure;)>                <!ATTLIST structure  type NMTOKEN  #FIXED 'streamsStructure' ><!-- represents the generator label of a stream. --><!ELEMENT templateLabel                       (#PCDATA)>                                <!ATTLIST templateLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the generator number (stored in generator tables) of a stream. --><!ELEMENT templateNumber                      (#PCDATA)>                                <!ATTLIST templateNumber  type NMTOKEN  #FIXED 'decimal' ><!-- represents the generator description of a stream. --><!ELEMENT templateDescription                 (#PCDATA)>                                <!ATTLIST templateDescription  type NMTOKEN  #FIXED 'string' ><!-- represents the descriprion of the initial stub period (Up front). --><!ELEMENT initialStub                         (%MxML_StubPeriod;)>                      <!ATTLIST initialStub  type NMTOKEN  #FIXED 'stubPeriod' ><!-- represents the descriprion of the final stub period (In arrears). --><!ELEMENT finalStub                           (%MxML_StubPeriod;)>                      <!ATTLIST finalStub  type NMTOKEN  #FIXED 'stubPeriod' ><!-- represents the description of the first date treatment of a time serie. --><!ELEMENT firstDateTreatment                  (%MxML_DateTreatment;)>                   <!ATTLIST firstDateTreatment  type NMTOKEN  #FIXED 'dateTreatment' ><!ELEMENT firstDateRelativeTo                 (#PCDATA)>                                <!ATTLIST firstDateRelativeTo  type NMTOKEN  #FIXED 'string' dateRelativeToScheme CDATA    #IMPLIED ><!-- represents the description of the last date treatment of a time serie. --><!ELEMENT lastDateTreatment                   (%MxML_DateTreatment;)>                   <!ATTLIST lastDateTreatment  type NMTOKEN  #FIXED 'dateTreatment' ><!ELEMENT lastDateRelativeTo                  (#PCDATA)>                                <!ATTLIST lastDateRelativeTo  type  NMTOKEN  #FIXED 'string' dateRelativeToScheme CDATA    #IMPLIED ><!-- represents the stub period position of a time serie (inArrears, for instance). --><!ELEMENT stubPeriodPosition                  (#PCDATA)>                                <!ATTLIST stubPeriodPosition  type  NMTOKEN  #FIXED 'string' stubPeriodPositionScheme CDATA    #IMPLIED ><!-- MxML document specifications, document emitting party, user, as well as system information. --><!ELEMENT documentProperties                  (%MxML_DocumentProperties;)>              <!ATTLIST documentProperties  type NMTOKEN  #FIXED 'documentProperties' > <!-- represents the description of conditions at trade input. It includes Murex system date, the machine (environment) date and time at the moment the trade was booked in the system.  --><!ELEMENT tradeInputConditions                (%MxML_TradeInputConditions;)>            <!ATTLIST tradeInputConditions  type NMTOKEN  #FIXED 'TradeInputConditions' ><!-- represents the date and the time of the system when the operation occurs. --><!ELEMENT inputConditions                     (%MxML_TradeInputConditions;)>  <!-- represents the trade definition: it includes information about trade parties, portfolios, a trade header, a trade body, trade settlement instructions, trade input conditions, and trade input conditions. --> <!ELEMENT trade                               (%MxML_Trade;)>                           <!ATTLIST trade  type NMTOKEN  #FIXED 'trade' id   ID #IMPLIED><!-- represents the trade finacial information, specific to each type of product. --><!ELEMENT tradeBody                           (%MxML_TradeBody;)>                       <!ATTLIST tradeBody  type NMTOKEN  #FIXED 'tradeBody' ><!-- represents the trade non-finacial information, common to all products. It mainly includes trade identifiers and agreeemnts. --><!ELEMENT tradeHeader                         (%MxML_TradeHeader;)>                     <!ATTLIST tradeHeader  type NMTOKEN  #FIXED 'tradeHeader' ><!-- represents the Interest Rate Swap definition. --><!ELEMENT interestRateSwap                    (%MxML_Streams;)>                         <!ATTLIST interestRateSwap  type NMTOKEN  #FIXED 'streams' ><!-- represents the Currency Swap definition. --><!ELEMENT currencySwap                        (%MxML_Streams;)>                         <!ATTLIST currencySwap  type NMTOKEN  #FIXED 'streams' ><!-- Represents a description of the streams of an equity swap deal. --><!ELEMENT equitySwap                          (%MxML_Streams;)>                         <!ATTLIST equitySwap  type NMTOKEN  #FIXED 'streams' ><!ELEMENT assetSwap                           (%MxML_Streams;)>                         <!ATTLIST assetSwap  type NMTOKEN  #FIXED 'streams' ><!ELEMENT totalReturnSwap                     (%MxML_Streams;)>                         <!ATTLIST totalReturnSwap  type NMTOKEN  #FIXED 'streams' ><!ELEMENT creditDefaultSwap                   (%MxML_Streams;)>                         <!ATTLIST creditDefaultSwap  type NMTOKEN  #FIXED 'streams' ><!ELEMENT firstToDefaultBasket                (%MxML_Streams;)>                         <!ATTLIST firstToDefaultBasket type NMTOKEN  #FIXED 'streams' ><!ELEMENT nthToDefaultBasket                  (%MxML_Streams;)>                         <!ATTLIST nthToDefaultBasket type NMTOKEN  #FIXED 'streams' ><!ELEMENT creditDefaultSwaption               (%MxML_Streams;)>                         <!ATTLIST creditDefaultSwaption  type NMTOKEN  #FIXED 'streams' ><!-- represents the FRA definition. --><!ELEMENT fra                                 (%MxML_Streams;)>                         <!ATTLIST fra  type NMTOKEN  #FIXED 'streams' ><!ELEMENT irg                                 (%MxML_Streams;)>                         <!ATTLIST irg  type NMTOKEN  #FIXED 'streams' ><!-- represents the Cap/Floor definition. --><!ELEMENT capFloor                            (%MxML_Streams;)>                         <!ATTLIST capFloor  type NMTOKEN  #FIXED 'streams' ><!ELEMENT captionFloortion                    (%MxML_Streams;)>                         <!ATTLIST captionFloortion  type NMTOKEN  #FIXED 'streams' ><!-- represents the Loan/Deposit deal definition. --><!ELEMENT loanDeposit                         (%MxML_Streams;)>                         <!ATTLIST loanDeposit  type NMTOKEN  #FIXED 'streams' ><!-- represents the Swaption definition. --><!ELEMENT swaption                            (%MxML_Streams;)>                         <!ATTLIST swaption  type NMTOKEN  #FIXED 'streams' ><!ELEMENT callDeposit                         (%MxML_Streams;)>                         <!ATTLIST callDeposit  type NMTOKEN  #FIXED 'streams' ><!-- represents the Bond definition. --><!ELEMENT bond                                (%MxML_SecurityTrade;)>                   <!ATTLIST bond  type NMTOKEN  #FIXED 'securityTrade' ><!-- represents the Bond Option definition. --><!ELEMENT bondOption                          (%MxML_SecurityOptionTrade;)>             <!ATTLIST bondOption  type NMTOKEN  #FIXED 'securityOptionTrade' ><!-- represents the Bond Future (Long future) definition. --><!ELEMENT bondFuture                          (%MxML_FutureTrade;)>                     <!ATTLIST bondFuture  type NMTOKEN  #FIXED 'futureTrade' ><!ELEMENT bondFutureOption                    (%MxML_FutureOptionTrade;)>               <!ATTLIST bondFutureOption  type NMTOKEN  #FIXED 'futureOptionTrade' ><!-- represents the Interest Rate Future (Short future) definition. --><!ELEMENT interestRateFuture                  (%MxML_FutureTrade;)>                     <!ATTLIST interestRateFuture  type NMTOKEN  #FIXED 'futureTrade' ><!ELEMENT interestRateFutureOption            (%MxML_FutureOptionTrade;)>               <!ATTLIST interestRateFutureOption  type NMTOKEN  #FIXED 'futureOptionTrade' ><!-- Represents the basic characteristics of an equity  trade. --><!ELEMENT equity                              (%MxML_SecurityTrade;)>                   <!ATTLIST equity  type NMTOKEN  #FIXED 'securityTrade' ><!--  Represents the description of an equity option trade. --><!ELEMENT equityOption                        (%MxML_SecurityOptionTrade;)>             <!ATTLIST equityOption  type NMTOKEN  #FIXED 'securityOptionTrade' ><!-- Represents the description of a future trade. --><!ELEMENT equityFuture                        (%MxML_FutureTrade;)>                     <!ATTLIST equityFuture  type NMTOKEN  #FIXED 'futureTrade' ><!ELEMENT equityListedOption                 (%MxML_SecurityListedOptionTrade;)>        <!ATTLIST equityListedOption  type NMTOKEN  #FIXED 'securityListedOptionTrade' ><!-- represents the description of the stream payout. --><!ELEMENT payout                              (%MxML_Payout;)>                          <!ATTLIST payout  type NMTOKEN  #FIXED 'payout' ><!-- represents the basic characteristics of an option: Style, holder, portfolio, couterparty, maturity, and exercize method. --><!ELEMENT option                              (%MxML_Option;)>                          <!ATTLIST option  type NMTOKEN  #FIXED 'option' ><!-- represents the description of the stream range schedule. --><!ELEMENT rangeSchedule                       (%MxML_RangeSchedule;)>                   <!ATTLIST rangeSchedule  type NMTOKEN  #FIXED 'rangeSchedule' ><!-- represents the stream description. A stream is a Loan/Deposit (One leg and one Phase). --><!ELEMENT stream                              (%MxML_Stream;)>                          <!ATTLIST stream  type NMTOKEN  #FIXED 'stream' ><!-- represents the pay flow party reference identifier. --><!ELEMENT payerPartyReference                 (%MxML_PartyReference;)>                  <!ATTLIST payerPartyReference  href CDATA  #IMPLIED ><!-- represents the receive flow party reference identifier. --><!ELEMENT receiverPartyReference              (%MxML_PartyReference;)>                  <!ATTLIST receiverPartyReference  href CDATA  #IMPLIED ><!-- represents the option holder reference identifier. --><!ELEMENT optionHolderReference               (%MxML_PartyReference;)>                  <!ATTLIST optionHolderReference  href CDATA  #IMPLIED ><!-- represents the option writer reference identifier. --><!ELEMENT optionWriterReference               (%MxML_PartyReference;)>                  <!ATTLIST optionWriterReference  href CDATA  #IMPLIED ><!-- represents the security holder reference identifier. --><!ELEMENT securityHolderReference             (%MxML_PartyReference;)>                  <!ATTLIST securityHolderReference  href CDATA  #IMPLIED ><!-- represents the security writer reference identifier. --><!ELEMENT securityWriterReference             (%MxML_PartyReference;)>                  <!ATTLIST securityWriterReference  href CDATA  #IMPLIED ><!-- represents the future holder reference identifier. --><!ELEMENT futureHolderReference               (%MxML_PartyReference;)>                  <!ATTLIST futureHolderReference  href CDATA  #IMPLIED ><!-- represents the future writer reference identifier. --><!ELEMENT futureWriterReference               (%MxML_PartyReference;)>                  <!ATTLIST futureWriterReference  href CDATA  #IMPLIED ><!-- represents the party identification, as defined in the Murex application. --><!ELEMENT partyReference                      (%MxML_PartyReference;)>                  <!ATTLIST partyReference  href CDATA  #IMPLIED ><!-- represents a Murex portfolio (book) identifier reference. --><!ELEMENT portfolioReference                  EMPTY>                                    <!ATTLIST portfolioReference  href CDATA  #IMPLIED ><!-- represents a trade transaction number in a package of trade. --><!ELEMENT tradeReference                      (%MxML_TradeReference;)>                  <!ATTLIST tradeReference  href CDATA  #IMPLIED ><!-- represents the main characteristics of a stream (Nature (Fixed, Floating, ...), Generator and Index details, ...). --><!ELEMENT streamTemplate                      (%MxML_StreamTemplate;)>                  <!ATTLIST streamTemplate  type NMTOKEN  #FIXED 'streamTemplate' ><!-- represents the start date and maturity labels component of the stream. --><!ELEMENT lengths                             (%MxML_StreamLengths;)>                   <!ATTLIST lengths  type NMTOKEN  #FIXED 'streamLengths' ><!-- represents the stream start date. --><!ELEMENT effectiveDate                       (#PCDATA)>                                <!ATTLIST effectiveDate  type NMTOKEN  #FIXED 'date' ><!-- represents the maturity. --><!ELEMENT maturity                            (#PCDATA)>                                <!ATTLIST maturity  type NMTOKEN  #FIXED 'date' ><!-- represents the roll date of the stream: it's the date that determines the periods when there are stub period at both ends. --><!ELEMENT rollDate                            (#PCDATA)>                                <!ATTLIST rollDate  type NMTOKEN  #FIXED 'date' ><!-- represents the description of the stream capital component. --><!ELEMENT capital                             (%MxML_StreamCapital;)>                   <!ATTLIST capital  type NMTOKEN  #FIXED 'streamCapital' ><!-- represents the start date label of the stream (3d, for example). --><!ELEMENT startDelayLength                    (#PCDATA)>                                <!ATTLIST startDelayLength  type NMTOKEN  #FIXED 'string' ><!-- represents the length between the stream start date and end date (or maturity) (18m, for example). --><!ELEMENT tradeLength                         (#PCDATA)>                                <!ATTLIST tradeLength  type NMTOKEN  #FIXED 'string' ><!-- represents the end date label of the stream (3d, for example). --><!ELEMENT totalLength                         (#PCDATA)>                                <!ATTLIST totalLength  type NMTOKEN  #FIXED 'string' ><!-- represents the maturity label of an option (1y, for example). --><!ELEMENT delay                               (#PCDATA)>                                <!ATTLIST delay  type NMTOKEN  #FIXED 'string' ><!-- represents the stream fixed rate description. --><!ELEMENT fixedRateStream                     (%MxML_FixedRateStream;)>                 <!ATTLIST fixedRateStream  type NMTOKEN  #FIXED 'fixedRateStream' ><!-- represents the stream floating rate description. --><!ELEMENT floatingRateStream                  (%MxML_FloatingRateStream;)>              <!ATTLIST floatingRateStream  type NMTOKEN  #FIXED 'floatingRateStream' ><!ELEMENT repayment                           (%MxML_Repayment;)>                       <!ATTLIST repayment  type NMTOKEN  #FIXED 'repayment' ><!-- represents the stream stub periods description (the indexes used in the stub periods). --><!ELEMENT stubPeriods                         (%MxML_StubPeriods;)>                     <!ATTLIST stubPeriods  type NMTOKEN  #FIXED 'stubPeriods' ><!-- represents the stream range description. --><!ELEMENT range                               (%MxML_Range;)>                           <!ATTLIST range  type NMTOKEN  #FIXED 'range' ><!-- tells whether there are customizations or not (true/false). --><!ELEMENT customized                          (#PCDATA)>                                <!ATTLIST customized  type            NMTOKEN  #FIXED 'string'                         trueFalseScheme CDATA    #IMPLIED ><!-- represents the description of the cash flows. --><!ELEMENT cashFlows                           (%MxML_StreamCashFlows;)>                 <!ATTLIST cashFlows  type NMTOKEN  #FIXED 'streamCashFlows' ><!-- represents the schedule from which the concerned schedule is deduced (For example, if the payment schedule is equal to the calculation one, the underlying schedule will be equal to "calculationSchedule"). --><!ELEMENT underlyingSchedule                  (#PCDATA)>                                <!ATTLIST underlyingSchedule  type            NMTOKEN  #FIXED 'string'                                 schedulesScheme CDATA    #IMPLIED > <!-- Represents the shifter definition. --><!ELEMENT shifter                             (%MxML_DateShifter;)>                     <!ATTLIST shifter  type NMTOKEN  #FIXED 'shifter' ><!-- represents the schedule generator component definition. --><!ELEMENT scheduleGenerator                   (%MxML_ScheduleGenerator;)>               <!ATTLIST scheduleGenerator  type NMTOKEN  #FIXED 'scheduleGenerator' ><!ELEMENT tradeUserDefinedType                (#PCDATA)>                                <!ATTLIST tradeUserDefinedType  type NMTOKEN  #FIXED 'string' ><!-- represents a Murex identification for the type or the category of the financial product: FX vanilla option, FX spot forward, IR swap, etc. --><!ELEMENT tradeCategory                       (%MxML_TradeCategory;)>                   <!ATTLIST tradeCategory  type NMTOKEN  #FIXED 'tradeCategory' ><!ELEMENT yieldCalculation                    (#PCDATA)>                                <!ATTLIST yieldCalculation  type NMTOKEN  #FIXED 'string' ><!ELEMENT accrual                             (#PCDATA)>                                <!ATTLIST accrual  type NMTOKEN  #FIXED 'string' ><!-- represents the party SWIFT identification code. --><!ELEMENT partyCode                           (#PCDATA)>                                <!ATTLIST partyCode  type NMTOKEN  #FIXED 'string' ><!-- represents the identification of the party involved in the trade. --><!ELEMENT partyName                           (#PCDATA)>                                <!ATTLIST partyName  type NMTOKEN  #FIXED 'string' ><!-- represents the party component full name or description. --><!ELEMENT partyFullName                       (#PCDATA)>                                <!ATTLIST partyFullName  type NMTOKEN  #FIXED 'string' ><!-- represents the party component information.  It could be the party producing the MxML document, or each of the trade parties, symmetrically. The role of each party is represented in the trade settlement component. --><!ELEMENT party                               (%MxML_Party;)>                           <!ATTLIST party  type NMTOKEN  #FIXED 'Party'                   id   ID       #REQUIRED > <!-- represents the individual portfolio component information, as defined in Murex application. --><!ELEMENT portfolio                           (%MxML_Portfolio;)>                       <!ATTLIST portfolio  type NMTOKEN  #FIXED 'Portfolio'                       id   ID       #REQUIRED ><!ELEMENT parties                             (%MxML_Parties;)>                         <!ATTLIST parties  type NMTOKEN  #FIXED 'Parties' ><!-- represents the portfolios component. --><!ELEMENT portfolios                          (%MxML_Portfolios;)>                      <!ATTLIST portfolios  type NMTOKEN  #FIXED 'Portfolios' ><!-- represents the trade view component. --><!ELEMENT tradeViews                          (%MxML_TradeViews;)>                      <!ATTLIST tradeViews  type NMTOKEN  #FIXED 'TradeViews' ><!-- represents a list of trade numbers to which the deal refer. --><!ELEMENT tradeId                             (%MxML_TradeId;)>                         <!ATTLIST tradeId  type NMTOKEN  #FIXED 'TradeId' ><!-- represents the component that gathers the different types of trade brokerage fees. --><!ELEMENT tradeFees                           (%MxML_TradeFees;)>                       <!ATTLIST tradeFees  type NMTOKEN  #FIXED 'TradeFees' ><!--represents the component that gathers all user defined fields at trade level. --><!ELEMENT tradeUserDefinedFields              (%MxML_UserDefinedFields;)>               <!ATTLIST tradeUserDefinedFields  type NMTOKEN  #FIXED 'UserDefinedFields' ><!--represents the component that gathers all user defined fields at portfolio level.  --><!ELEMENT portfolioUserDefinedFields          (%MxML_UserDefinedFields;)>               <!ATTLIST portfolioUserDefinedFields  type NMTOKEN  #FIXED 'UserDefinedFields' ><!--represents the component that gathers all user defined fields at trade party level.  --><!ELEMENT partyUserDefinedFields              (%MxML_UserDefinedFields;)>               <!ATTLIST partyUserDefinedFields  type NMTOKEN  #FIXED 'UserDefinedFields' ><!ELEMENT indexUserDefinedFields              (%MxML_UserDefinedFields;)>               <!ATTLIST indexUserDefinedFields  type NMTOKEN  #FIXED 'UserDefinedFields' ><!-- represents a user defined data.  --><!ELEMENT userDefinedField                    (%MxML_UserDefinedField;)>                <!ATTLIST userDefinedField  type NMTOKEN  #FIXED 'UserDefinedField' ><!-- represents the trade specific information related to source and destination parties. It includes party back office descriptions such as the  trader identification, the strategy label, and the accounting section reference. --><!ELEMENT tradeView                           (%MxML_TradeView;)>                       <!ATTLIST tradeView  type NMTOKEN  #FIXED 'TradeView' ><!-- represents the trade fees exchanged at trade booking, whether it is a brokerage, a clearer fee, a broker tax, or a clearer tax. --><!ELEMENT tradeFee                            (%MxML_TradeFee;)>                        <!ATTLIST tradeFee  type NMTOKEN  #FIXED 'TradeFee' ><!-- represents the tarde status information component. It includes the trade physical status, validation level, and confirmation status. --><!ELEMENT tradeStatus                         (%MxML_TradeStatus;)>                     <!ATTLIST tradeStatus  type NMTOKEN  #FIXED 'tradeStatus' ><!-- represents the trade date. --><!ELEMENT tradeDate                           (#PCDATA)>                                <!ATTLIST tradeDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT tradeTime                           (#PCDATA)>                                <!ATTLIST tradeTime  type NMTOKEN  #FIXED 'time' ><!-- represents the package date. --><!ELEMENT packageDate                         (#PCDATA)>                                <!ATTLIST packageDate  type NMTOKEN  #FIXED 'date' ><!-- represents the package time. --><!ELEMENT packageTime                         (#PCDATA)>                                <!ATTLIST packageTime  type NMTOKEN  #FIXED 'time' ><!-- represents the basic description of an event: nature and Id. --><!ELEMENT object                              (%MxML_Object;)>                          <!ATTLIST object  href CDATA  #IMPLIED > <!-- represents the operation specific information related to the source object. It includes the nature of the object on which the operation occured and its reference number.  --><!ELEMENT sourceObject                        (%MxML_Object;)>                          <!ATTLIST sourceObject  href CDATA  #IMPLIED > <!-- represents the operation specific information related to the destination object. It includes the nature of the object resulting from the operation and its reference number.  --><!ELEMENT destinationObject                   (%MxML_Object;)>                          <!ATTLIST destinationObject  href CDATA  #IMPLIED > <!-- represents the nature of the event: is the action done on a trade or on an operation ? --><!ELEMENT objectNature                        (#PCDATA)>                                <!ATTLIST objectNature  type NMTOKEN  #FIXED 'string' objectNaturesScheme CDATA    #IMPLIED ><!-- represents the identification of the object: the transaction number or the market operation number. --><!ELEMENT objectId                            (#PCDATA)><!ELEMENT producedBy                          (%MxML_PartyUser;)> <!-- represents the events block component: insertion, expiry, etc.  --><!ELEMENT events                              (%MxML_Events;)> <!-- represents the main operation done on the trade.  --><!ELEMENT mainEvent                           (%MxML_Event;)><!-- represents the events resulted from the main event: for instance, an exercise: main event produces an insertion of a FXD: secondary event. --><!ELEMENT secondaryEvent                      (%MxML_Event;)> <!-- represents the action performed on the trade, such as a market operation, an insertion, a trade modification, or a trade cancellation. --><!ELEMENT action                              (#PCDATA)><!-- represents the trade validation sub action identification as defined in Murex. --><!ELEMENT subAction                           (#PCDATA)> <!-- represents the list of operations component. --><!ELEMENT operations                          (%MxML_Operations;)><!-- represents the description of the operation done on a trade. It corresponds to the market operation operation done ona a trade and includes operation reference, operation type, and operation date. --><!ELEMENT operation                           (%MxML_Operation;)>                       <!ATTLIST operation type NMTOKEN  #FIXED 'operation' id   ID #IMPLIED><!-- represents the market operation settlement flows component. --><!ELEMENT operationSettlementFlows            (%MxML_SettlementFlows;)><!-- represents the market operation sources component. --><!ELEMENT operationSources                    (%MxML_OperationSources;)><!-- represents the market operation source object information:the nature of the object and its reference number.  --><!ELEMENT operationSource                     (%MxML_OperationSource;)><!-- represents the market operation quantity: for example the exercised quantity of an option trade. --><!ELEMENT operationQuantity                   (#PCDATA)><!-- represents the trade initial quantity, before any market operation was executed. --><!ELEMENT operationInitialQuantity            (#PCDATA)><!ELEMENT operationSettlementPrice            (#PCDATA)><!-- represents the market operation destinations component. --><!ELEMENT operationDestinations               (%MxML_OperationDestinations;)><!-- represents the market operation destination object information:the nature of the object and its reference number.  --><!ELEMENT operationDestination                (%MxML_OperationDestination;)><!-- represents the type of the operation such as market operation type : execrise (EXR), expiry (EXP), cancel and reissue, etc.  --><!ELEMENT operationType                       (#PCDATA)><!ELEMENT operationSubType                    (#PCDATA)><!-- repesents the begining of packages description. --><!ELEMENT packages                            (%MxML_Packages;)><!-- represents a description of the package referenced by its internal number. --><!ELEMENT package                             (%MxML_Package;)>                         <!ATTLIST package type NMTOKEN  #FIXED 'package' id   ID #IMPLIED><!-- represents the definition of the package's ID's. --><!ELEMENT packageId                           (%MxML_PackageId;)><!-- represents the Internal number of the package, usually filled by Murex in an incremental way. --><!ELEMENT internalId                          (#PCDATA)><!-- represents the External number of the package. --><!ELEMENT externalId                          (#PCDATA)><!-- represents the transaction number of the trade that has generated the package, following a cancel&reissue for instance. --><!ELEMENT creatorId                           (#PCDATA)><!-- represents the Method of the package. When you try to insert a linked trade, you select one of the methods that appear in the list. --><!ELEMENT packageMethod                       (#PCDATA)><!-- represents the package type. A type is a subdivision of the method. --><!ELEMENT packageType                         (#PCDATA)><!-- represents the definition of the status of the deal including its validation level, whether it is cancelled or not and how it was created. --><!ELEMENT packageStatus                       (%MxML_PackageStatus;)><!-- represents the status of the deal. This field is either set to False or Right. --><!ELEMENT cancelled                           (#PCDATA)><!-- represents the description of the way the trade was created: manual or automatic. --><!ELEMENT creationType                        (#PCDATA)><!-- represents the list of the trades included in the package. --><!ELEMENT tradeReferences                     (%MxML_TradeReferences;)><!ELEMENT securities                          (%MxML_Securities;)><!ELEMENT issuers                             (%MxML_Issuers;)><!ELEMENT security                            (%MxML_Security;)>                        <!ATTLIST security type NMTOKEN  #FIXED 'security' id   ID #IMPLIED><!ELEMENT issuer                              (%MxML_Issuer;)>                          <!ATTLIST issuer type NMTOKEN  #FIXED 'issuer' id   ID #IMPLIED><!ELEMENT issuerName                          (#PCDATA)><!ELEMENT issuerFullName                      (#PCDATA)><!ELEMENT issuerSector                        (#PCDATA)><!ELEMENT issuerCountry                       (#PCDATA)><!ELEMENT issuerCategory                      (#PCDATA)><!ELEMENT notes                               (%MxML_Notes;)><!ELEMENT note                                (%MxML_Note;)>                            <!ATTLIST note type NMTOKEN  #FIXED 'note' id   ID #IMPLIED><!ELEMENT noteId                              (#PCDATA)><!ELEMENT noteTitle                           (#PCDATA)><!ELEMENT noteText                            (#PCDATA)><!ELEMENT bundle                              (%MxML_Bundle;)>                          <!ATTLIST bundle type NMTOKEN  #FIXED 'bundle' id   ID #IMPLIED><!ELEMENT bundleItems                         (%MxML_BundleItems;)><!ELEMENT bundleItem                          (%MxML_BundleItem;)><!ELEMENT bundleId                            (#PCDATA)><!ELEMENT bundleName                          (#PCDATA)><!ELEMENT bundleDescription                   (#PCDATA)><!-- represents the description of the user side which implemented the information into Murex application. --><!ELEMENT inputBy                             (%MxML_PartyGroupUser;)>                              <!--  represents the Murex area code of the group to which the Murex application user belongs. --><!ELEMENT areaCode                            (#PCDATA)>                                <!ATTLIST areaCode  type NMTOKEN  #FIXED 'decimal' ><!-- represents the component for the Murex application user that emitted the MxML document or message. --><!ELEMENT user                                (%MxML_User;)> <!-- represents the name of the user as defined in the Murex application. --><!ELEMENT name                                (#PCDATA)>                                <!ATTLIST name  type NMTOKEN  #FIXED 'string' > <!-- represents the group label defined in the Murex application, and to which the user belongs. --><!ELEMENT group                               (#PCDATA)>                                <!ATTLIST group  type NMTOKEN  #FIXED 'string' ><!-- represents the activity desk label defined in the Murex application, and to which the user belongs. --><!ELEMENT desk                                (#PCDATA)>                                <!ATTLIST desk  type NMTOKEN  #FIXED 'string' ><!-- represents the Murex application trading date. --><!ELEMENT systemDate                          (#PCDATA)>                                <!ATTLIST systemDate  type NMTOKEN  #FIXED 'date' ><!-- represents the Murex application accounting date. It corresponds to the entry date of the generated accounting entries. --><!ELEMENT accountingDate                      (#PCDATA)>                                <!ATTLIST accountingDate type NMTOKEN  #FIXED 'date' ><!-- represents the Murex application machine date at which the MxML message is produced, or the trade booking date, depending on the context where these dates are used. --><!ELEMENT computerDate                        (#PCDATA)>                                <!ATTLIST computerDate  type NMTOKEN  #FIXED 'date' ><!-- represents the Murex application machine time when the MxML message is produced. --><!ELEMENT computerTime                        (#PCDATA)>                                <!ATTLIST computerTime  type NMTOKEN  #FIXED 'time' ><!ELEMENT partyTradeCharacteristics           (#PCDATA)>                                <!ATTLIST partyTradeCharacteristics  type NMTOKEN  #FIXED 'string' ><!ELEMENT repaymentAmount                     (#PCDATA)>                                <!ATTLIST repaymentAmount  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT repaymentFactor                     (#PCDATA)>                                <!ATTLIST repaymentFactor  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT scheduleType                        (#PCDATA)>                                <!ATTLIST scheduleType  type NMTOKEN  #FIXED 'string' ><!-- represents the description of the stream flows. --><!ELEMENT interestFlows                       (%MxML_InterestFlows;)>                   <!ATTLIST interestFlows  type NMTOKEN  #FIXED 'interestFlows' ><!-- represents the description of a stream payment period. --><!ELEMENT interestPaymentPeriod               (%MxML_PaymentPeriod;)>                   <!ATTLIST interestPaymentPeriod  type NMTOKEN  #FIXED 'paymentPeriod' ><!-- represents the payment date of a flow. --><!ELEMENT paymentDate                         (#PCDATA)>                                <!ATTLIST paymentDate  type NMTOKEN  #FIXED 'date' ><!-- represents a date in a schedule or a set of dates. It could be for instance, a date in the fixing schedule of an average option. --><!ELEMENT observationDate                     (#PCDATA)>                                <!ATTLIST observationDate  type NMTOKEN  #FIXED 'date' ><!-- represents the start date in an observation time serie. --><!ELEMENT timeSerieStartDate                  (#PCDATA)>                                <!ATTLIST timeSerieStartDate  type NMTOKEN  #FIXED 'date' ><!-- represents the end date in an observation time serie. --><!ELEMENT timeSerieEndDate                    (#PCDATA)>                                <!ATTLIST timeSerieEndDate  type NMTOKEN  #FIXED 'date' ><!-- represents the start date of the Barrier's window. --><!ELEMENT barrierStartDate                    (#PCDATA)>                                <!ATTLIST barrierStartDate  type NMTOKEN  #FIXED 'date' ><!-- represents the last date in a period of time. In this case it is the End date of the Barrier's window. --><!ELEMENT barrierEndDate                      (#PCDATA)>                                <!ATTLIST barrierEndDate  type NMTOKEN  #FIXED 'date' ><!-- represents the description of a calculation period. --><!ELEMENT calculationPeriod                   (%MxML_CalculationPeriod;)>               <!ATTLIST calculationPeriod  type NMTOKEN  #FIXED 'calculationPeriod' ><!-- represents the notional amount of a calculation period. --><!ELEMENT notionalAmount                      (#PCDATA)>                                <!ATTLIST notionalAmount  type NMTOKEN  #FIXED 'decimal' ><!-- represents the calculation start date. --><!ELEMENT calculationStartDate                (#PCDATA)>                                <!ATTLIST calculationStartDate  type NMTOKEN  #FIXED 'date' ><!-- represents the calculation end date of a calculation period. --><!ELEMENT calculationEndDate                  (#PCDATA)>                                <!ATTLIST calculationEndDate  type NMTOKEN  #FIXED 'date' ><!-- represents the unadjusted start date of a calculation period (the business convention is not taken into account). --><!ELEMENT unadjustedStartDate                 (#PCDATA)>                                <!ATTLIST unadjustedStartDate  type NMTOKEN  #FIXED 'date' ><!-- represents the unadjusted end date of a calculation period (the business convention is not taken into account). --><!ELEMENT unadjustedEndDate                   (#PCDATA)>                                <!ATTLIST unadjustedEndDate  type NMTOKEN  #FIXED 'date' ><!-- represents the description of the fixed rate in a calculation period. --><!ELEMENT fixedRatePeriod                     (%MxML_FixedRatePeriod;)>                 <!ATTLIST fixedRatePeriod  type NMTOKEN  #FIXED 'fixedRatePeriod' ><!-- represents the floating rate characteristics in a calculation period. --><!ELEMENT floatingRatePeriod                  (%MxML_FloatingRatePeriod;)>              <!ATTLIST floatingRatePeriod  type NMTOKEN  #FIXED 'floatingRatePeriod' ><!-- represents the interest flow. --><!ELEMENT interestFlow                        (#PCDATA)>                                <!ATTLIST interestFlow  type NMTOKEN  #FIXED 'decimal' ><!-- represents the estimated interest flow in a payment period. --><!ELEMENT estimatedInterestFlow               (#PCDATA)>                                <!ATTLIST estimatedInterestFlow  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT accruedInterestFlow                 (#PCDATA)>                                <!ATTLIST accruedInterestFlow  type NMTOKEN  #FIXED 'decimal' ><!-- represents the flow due the margin in a payment period. --><!ELEMENT marginFlow                          (#PCDATA)>                                <!ATTLIST marginFlow  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT capitalFlows                        (#PCDATA)>                                <!ATTLIST capitalFlows  type NMTOKEN  #FIXED 'string' ><!ELEMENT additionalFlows                     (%MxML_AdditionalFlows;)>                 <!ATTLIST additionalFlows  type NMTOKEN  #FIXED 'additionalFlows' ><!ELEMENT flowCategory                        (%MxML_FlowCategory;)>                    <!ATTLIST flowCategory  type NMTOKEN  #FIXED 'FlowCategory' ><!ELEMENT additionalFlow                      (%MxML_CategorizedFlow;)>                 <!ATTLIST additionalFlow  type NMTOKEN  #FIXED 'categorizedFlow' ><!-- represents the party user identification as defined in Murex application. --><!ELEMENT userName                            (#PCDATA)>                                <!ATTLIST userName  type NMTOKEN  #FIXED 'string' ><!-- represents the party startegy reference as defined in the Murex application. --><!ELEMENT strategy                            (#PCDATA)>                                <!ATTLIST strategy  type NMTOKEN  #FIXED 'string' ><!-- represents the party accounting section reference  as defined in the Murex application. For accounting purposes, accounting rules are defined by sections. --><!ELEMENT accountingSection                   (#PCDATA)>                                <!ATTLIST accountingSection  type NMTOKEN  #FIXED 'string' ><!-- represents a trade internal reference identifier, automatically allocated by Murex application. --><!ELEMENT tradeInternalId                     (#PCDATA)>                                <!ATTLIST tradeInternalId  type NMTOKEN  #FIXED 'string' ><!ELEMENT tradeExternalId                     (#PCDATA)>                                <!ATTLIST tradeExternalId  type NMTOKEN  #FIXED 'decimal' ><!-- represents the trade global OLK reference. It is automatically allocated by Murex OLK module when a trade exported. --><!ELEMENT tradeGlobalId                       (#PCDATA)>                                <!ATTLIST tradeGlobalId  type NMTOKEN  #FIXED 'string' ><!-- represents the creator trade reference number, in case the trade results from the execution of a market operation such as the exercise of an option or the cancel and reissue of a trade. --><!ELEMENT tradeCreatorId                      (#PCDATA)>                                <!ATTLIST tradeCreatorId  type NMTOKEN  #FIXED 'decimal' ><!-- represents reference of the origine number that generated the current trade, after a market operation such as the origin trade of a cancel and reissue, or the origin trade of an exercised option.  --><!ELEMENT tradeOriginId                       (#PCDATA)>                                <!ATTLIST tradeOriginId  type NMTOKEN  #FIXED 'decimal' ><!-- represents the ID reference of the linked trade. --><!ELEMENT linkId                              (#PCDATA)>                                <!ATTLIST linkId  type NMTOKEN  #FIXED 'decimal' ><!-- represents the Method of the linked trade. --><!ELEMENT linkMethod                          (#PCDATA)>                                <!ATTLIST linkMethod  type NMTOKEN  #FIXED 'string' ><!-- represents the code of the type of the linked trade. --><!ELEMENT linkCode                            (#PCDATA)>                                <!ATTLIST linkCode  type NMTOKEN  #FIXED 'string' ><!-- represents the type of the linked trade. --><!ELEMENT linkLabel                           (#PCDATA)>                                <!ATTLIST linkLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the internal Id of the main trade. --><!ELEMENT linkMainTradeInternalId             (#PCDATA)>                                <!ATTLIST linkMainTradeInternalId  type NMTOKEN  #FIXED 'decimal' ><!-- Represents the value of the serie number. --><!ELEMENT serieId                             (#PCDATA)>                                <!ATTLIST serieId  type NMTOKEN  #FIXED 'decimal' ><!-- represents a comment  or  description information. --><!ELEMENT comment                             (#PCDATA)>                                <!ATTLIST comment  type NMTOKEN  #FIXED 'string' ><!-- represents the comments list component. --><!ELEMENT comments                            (%MxML_Comments;)>                        <!ATTLIST comments  type NMTOKEN  #FIXED 'Comments' > <!-- represents the type of the fee to be paid between two parties. Example: broker fee, clearer fee. --><!ELEMENT feeType                             (#PCDATA)>                                <!ATTLIST feeType  type          NMTOKEN  #FIXED 'string' feeTypeScheme CDATA    #IMPLIED > <!-- represents the Murex identifier code of the fee to be paid between two parties. --><!ELEMENT feeCode                             (#PCDATA)>                                <!ATTLIST feeCode  type NMTOKEN  #FIXED 'string' > <!-- represents the currency of the fee to be paid between two parties. --><!ELEMENT feeCurrency                         (#PCDATA)>                                <!ATTLIST feeCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the amount of the fee to be paid between two parties. --><!ELEMENT feeAmount                           (#PCDATA)>                                <!ATTLIST feeAmount  type NMTOKEN  #FIXED 'decimal' ><!-- represents a quantity to be paid or received. --><!ELEMENT amount                              (#PCDATA)>                                <!ATTLIST amount  type NMTOKEN  #FIXED 'decimal' ><!-- represents the spot rate of a contract or the barrier/frontier rate. --><!ELEMENT rate                                (#PCDATA)>                                <!ATTLIST rate  type NMTOKEN  #FIXED 'decimal' ><!--represents the Murex field label of the Murex user defined field component. --><!ELEMENT fieldLabel                          (#PCDATA)>                                <!ATTLIST fieldLabel  type NMTOKEN  #FIXED 'string' ><!--represents the user defined field reference number as generated by Murex. --><!ELEMENT fieldId                             (#PCDATA)>                                <!ATTLIST fieldId  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT fieldIndex                          (#PCDATA)>                                <!ATTLIST fieldIndex  type NMTOKEN  #FIXED 'decimal' ><!--represents the field type of the Murex user defined field component. --><!ELEMENT fieldType                           (#PCDATA)>                                <!ATTLIST fieldType  type            NMTOKEN  #FIXED 'string' fieldTypeScheme CDATA    #IMPLIED ><!--represents the field value of the Murex user defined field component. --><!ELEMENT fieldValue                          (#PCDATA)>                                <!ATTLIST fieldValue  type NMTOKEN  #FIXED 'string' > <!--represents the value of an item after customization. --><!ELEMENT customizedValue                     (#PCDATA)>                                <!ATTLIST customizedValue  type NMTOKEN  #FIXED 'string' > <!ELEMENT currentStatus                       (#PCDATA)>                                <!ATTLIST currentStatus  type NMTOKEN  #FIXED 'string' ><!-- represents the portfolio (book) identification label as defined in Murex application. --><!ELEMENT portfolioLabel                      (#PCDATA)>                                <!ATTLIST portfolioLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the details of a fixing schedule. --><!ELEMENT observations                        (%MxML_Observations;)>                    <!ATTLIST observations  type NMTOKEN  #FIXED 'observations' ><!-- represents the description line of a fixing schedule: date, rate, weight. --><!ELEMENT observation                         (%MxML_Observation;)>                     <!ATTLIST observation  type NMTOKEN  #FIXED 'observation' ><!ELEMENT observationLowFrontier              (%MxML_ObservationFrontier;)>             <!ATTLIST observationLowFrontier  type NMTOKEN  #FIXED 'observationFrontier' ><!ELEMENT observationHighFrontier             (%MxML_ObservationFrontier;)>             <!ATTLIST observationHighFrontier  type NMTOKEN  #FIXED 'observationFrontier' ><!-- represents the description of the strike in a floating rate period. --><!ELEMENT strikes                             (%MxML_StreamStrikes;)>                   <!ATTLIST strikes  type NMTOKEN  #FIXED 'streamStrikes' ><!-- represents the description of settlement flows. --><!ELEMENT settlement                          (%MxML_Settlement;)>                      <!ATTLIST settlement  type NMTOKEN  #FIXED 'settlement' ><!-- represents a price and is described by the value and the quotation mode. --><!ELEMENT price                               (%MxML_Price;)>                           <!ATTLIST price  type NMTOKEN  #FIXED 'price' ><!-- represents the unit price of a deal. --><!ELEMENT priceRate                           (#PCDATA)>                                <!ATTLIST priceRate  type NMTOKEN  #FIXED 'decimal' ><!-- represents the unit of the unitary price and is described by a quotation mode. --><!ELEMENT priceExpression                     (%MxML_PriceExpression;)>                 <!ATTLIST priceExpression  type NMTOKEN  #FIXED 'priceExpression' ><!-- represents the description of a flow: flow parties, flow date, currency, and the flat amount. --><!ELEMENT flow                                (%MxML_Flow;)>                            <!ATTLIST flow  type NMTOKEN  #FIXED 'flow' ><!ELEMENT currencyFlows                       (%MxML_Flows;)>                           <!ATTLIST currencyFlows  type NMTOKEN  #FIXED 'flows' ><!-- represents the general description of a flow described by the initial and the final amounts, the currency, the date, the parties, ... --><!ELEMENT settlementFlow                      (%MxML_SettlementFlow;)>                  <!ATTLIST settlementFlow  type NMTOKEN  #FIXED 'settlementFlow' ><!ELEMENT settlementSchedule                  (%MxML_SettlementSchedule;)>              <!ATTLIST settlementSchedule  type NMTOKEN  #FIXED 'settlementSchedule' ><!ELEMENT periodicSettlementFlows             (%MxML_PeriodicSettlementFlows;)>         <!ATTLIST periodicSettlementFlows  type NMTOKEN  #FIXED 'periodicSettlementFlows' ><!ELEMENT periodicSettlementFlow              (%MxML_PaymentPeriod;)>                   <!ATTLIST periodicSettlementFlow  type NMTOKEN  #FIXED 'paymentPeriod' ><!-- represents the periodic premium or the premium in basis points of a settlement. --><!ELEMENT premiumInBp                         (#PCDATA)>                                <!ATTLIST premiumInBp  type NMTOKEN  #FIXED 'decimal' ><!-- represents the nature of an option: "optionToEnter" for a Swaption, "optionToCancel" for a Cancellable Swap. --><!ELEMENT optionForm                          (#PCDATA)>                                <!ATTLIST optionForm  type  NMTOKEN  #FIXED 'string'                        optionFormScheme CDATA    #IMPLIED >  <!-- represents the style of an option: European or American. --><!ELEMENT optionStyle                         (#PCDATA)>                                <!ATTLIST optionStyle  type              NMTOKEN  #FIXED 'string'                         optionStyleScheme CDATA    #IMPLIED ><!-- represents the exercize method of the option: delivery or cash settlement. --><!ELEMENT optionExercizeMethod                (#PCDATA)>                                <!ATTLIST optionExercizeMethod  type                       NMTOKEN  #FIXED 'string' optionExercizeMethodScheme CDATA    #IMPLIED ><!-- represents the stream range schedule nature (days, for example). --><!ELEMENT rangeScheduleNature                 (#PCDATA)>                                <!ATTLIST rangeScheduleNature  type                      NMTOKEN  #FIXED 'string'                                 rangeScheduleNatureScheme CDATA    #IMPLIED ><!-- represents the stream range low frontier description. --><!ELEMENT rangeLowFrontier                    (%MxML_RangeFrontier;)>                   <!ATTLIST rangeLowFrontier  type NMTOKEN  #FIXED 'rangeFrontier' ><!-- represents the stream range high frontier description. --><!ELEMENT rangeHighFrontier                   (%MxML_RangeFrontier;)>                   <!ATTLIST rangeHighFrontier  type NMTOKEN  #FIXED 'rangeFrontier' ><!-- represents the maturity of the option, described by the date and the Cut off. --><!ELEMENT optionMaturity                      (%MxML_OptionMaturity;)>                  <!ATTLIST optionMaturity  type NMTOKEN  #FIXED 'optionMaturity' ><!-- represents the description of the option exercize schedule. --><!ELEMENT exercizeSchedule                    (%MxML_ExercizeSchedule;)>                <!ATTLIST exercizeSchedule  type NMTOKEN  #FIXED 'exercizeSchedule' ><!-- represents the method used to compute the flows for each period (For example: return, average, interpolation, ...). --><!ELEMENT observationFormula                  (#PCDATA)>                                <!ATTLIST observationFormula  type                     NMTOKEN  #FIXED 'string' observationFormulaScheme CDATA    #IMPLIED ><!ELEMENT flowType                            (#PCDATA)>                                <!ATTLIST flowType  type           NMTOKEN  #FIXED 'string'                      flowTypeScheme CDATA    #IMPLIED ><!-- tells whether the condition is strict or not (true for >, false for >=, for example). --><!ELEMENT strictCondition                     (#PCDATA)>                                <!ATTLIST strictCondition  type            NMTOKEN  #FIXED 'string'                             trueFalseScheme CDATA    #IMPLIED > <!-- represents the description of the stream range period rate. --><!ELEMENT rangePeriodRate                     (%MxML_RangePeriodRate;)>                 <!ATTLIST rangePeriodRate  type NMTOKEN  #FIXED 'rangePeriodRate' ><!-- represents the description of the stream range line equation. --><!ELEMENT rangeLineEquation                   (%MxML_RangeLineEquation;)>               <!ATTLIST rangeLineEquation  type NMTOKEN  #FIXED 'rangeLineEquation' ><!-- represents the rate factor of the stream range period rate. --><!ELEMENT rateFactor                          (#PCDATA)>                                <!ATTLIST rateFactor  type NMTOKEN  #FIXED 'decimal' ><!-- represents the spread of a stream range period rate. --><!ELEMENT spread                              (#PCDATA)>                                <!ATTLIST spread  type NMTOKEN  #FIXED 'decimal' ><!-- represents one rate in the fixing schedule. --><!ELEMENT observedRate                        (#PCDATA)>                                <!ATTLIST observedRate  type NMTOKEN  #FIXED 'decimal' ><!-- represents the estimated rate not yet fixed. --><!ELEMENT estimatedRate                       (#PCDATA)>                                <!ATTLIST estimatedRate  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT accruedRate                         (#PCDATA)>                                <!ATTLIST accruedRate  type NMTOKEN  #FIXED 'decimal' ><!-- represents the description of the stream range first point of the line equation. --><!ELEMENT rangePoint1                         (%MxML_RangePoint;)>                      <!ATTLIST rangePoint1  type NMTOKEN  #FIXED 'rangePoint' ><!-- represents the description of the stream range second point of the line equation. --><!ELEMENT rangePoint2                         (%MxML_RangePoint;)>                      <!ATTLIST rangePoint2  type NMTOKEN  #FIXED 'rangePoint' ><!-- represents the description of the option exercize schedule builder. --><!ELEMENT exercizeScheduleBuilder             (%MxML_ExercizeScheduleBuilder;)>         <!ATTLIST exercizeScheduleBuilder  type NMTOKEN  #FIXED 'exercizeScheduleBuilder' ><!-- represents the description of the observations at each period. --><!ELEMENT contributingObservations            (%MxML_Observations;)>                    <!ATTLIST contributingObservations  type NMTOKEN  #FIXED 'observations' ><!-- represents the description of the option exercize dates. --><!ELEMENT exercizeEvents                      (%MxML_ExercizeEvents;)>                  <!ATTLIST exercizeEvents  type NMTOKEN  #FIXED 'exercizeEvents' ><!-- represents the option exercize schedule. --><!ELEMENT exercizeStreamSchedule              (%MxML_StreamSchedule;)>                  <!ATTLIST exercizeStreamSchedule  type NMTOKEN  #FIXED 'streamSchedule' ><!-- represents the option exercize start date. --><!ELEMENT exercizeStartDate                   (#PCDATA)>                                <!ATTLIST exercizeStartDate  type NMTOKEN  #FIXED 'date' ><!-- represents the option exercize end date. --><!ELEMENT exercizeEndDate                     (#PCDATA)>                                <!ATTLIST exercizeEndDate  type NMTOKEN  #FIXED 'date' ><!-- represents the description of the option exercize date. --><!ELEMENT exercizeEvent                       (%MxML_ExercizeEvent;)>                   <!ATTLIST exercizeEvent  type NMTOKEN  #FIXED 'exercizeEvent' ><!-- represents the option exercize date. --><!ELEMENT exercizeDate                        (#PCDATA)>                                <!ATTLIST exercizeDate  type NMTOKEN  #FIXED 'date' ><!-- represents the frequency ratio of the option exercize schedule. --><!ELEMENT exercizeFrequencyRatio              (#PCDATA)>                                <!ATTLIST exercizeFrequencyRatio  type NMTOKEN  #FIXED 'integer' ><!-- represents the Leg nature (fixed or floating) used for the option exercize schedule. --><!ELEMENT exercizeLegNature                   (#PCDATA)>                                <!ATTLIST exercizeLegNature  type NMTOKEN  #FIXED 'string'                              exercizeLegNatureScheme CDATA    #IMPLIED ><!-- represents the destination of the trade, whether the destination party is a book (or portfolio), in which case it is considered as an internal deal, or the destination party is a counterparty, in which case it is considered as external. --><!ELEMENT tradeDestination                    (#PCDATA)>                                <!ATTLIST tradeDestination  type                   NMTOKEN  #FIXED 'string'                              tradeDestinationScheme CDATA    #IMPLIED ><!-- represents a Murex abstract category for the financial products classification.  Trade family is the main characteristic of the trade; for example CURR for fx trades, IRD for interest rates derivatives, EQD for equity derivatives,etc. --><!ELEMENT tradeFamily                         (#PCDATA)>                                <!ATTLIST tradeFamily  type              NMTOKEN  #FIXED 'string'                         tradeFamilyScheme CDATA    #IMPLIED ><!-- represents a Murex abstract category for the financial products classification. Trade group is the second level characteristic of the trade; for example OPT for options , FUT for futures,  EQS for equity swaps, etc. --><!ELEMENT tradeGroup                          (#PCDATA)>                                <!ATTLIST tradeGroup  type             NMTOKEN  #FIXED 'string' tradeGroupScheme CDATA    #IMPLIED ><!-- represents a Murex abstract category for the financial products classification. Trade type is the third level characteristic of the trade; for example it's equal to BAr for barrier options, LST for listed option, ASN for Asian options, etc. --><!ELEMENT tradeType                           (#PCDATA)>                                <!ATTLIST tradeType  type            NMTOKEN  #FIXED 'string' tradeTypeScheme CDATA    #IMPLIED ><!-- represents the index reference of an observation. --><!ELEMENT indexReference                      (#PCDATA)>                                <!ATTLIST indexReference  type NMTOKEN  #FIXED 'string' ><!-- represents the Murex party category or type. Since the party component could be a principal party or a third party, category is equal to bank, or broker, or clearer, etc. --><!ELEMENT partyCategory                       (#PCDATA)>                                <!ATTLIST partyCategory  type                NMTOKEN  #FIXED 'string' partyCategoryScheme CDATA    #IMPLIED ><!-- represents the party status (live, suspend, od dead) at the date MxML message is produced. --><!ELEMENT partyStatus                         (#PCDATA)>                                <!ATTLIST partyStatus  type              NMTOKEN  #FIXED 'string' partyStatusScheme CDATA    #IMPLIED ><!-- represents the logical flag to activate the contribution of trade flows to the netting of the payment flows. --><!ELEMENT paymentNetting                      (#PCDATA)>                                <!ATTLIST paymentNetting  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the logical flag that activates the sending of confirmation message to the concerned party of the trade. It also expects the return of aknowledgment receipt. --><!ELEMENT confirmationExchange                (#PCDATA)>                                <!ATTLIST confirmationExchange  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the logical flag that drives the modification of the settlement instructions at trade level. Settlement instructions modification could be forbidden, fully customized, or predefined. --><!ELEMENT settlementInstructionsMode          (#PCDATA)>                                <!ATTLIST settlementInstructionsMode  type                             NMTOKEN  #FIXED 'string' settlementInstructionsModeScheme CDATA    #IMPLIED ><!-- represents a flag that informs about possible mortgage agreement with the counterparty. --><!ELEMENT collateralAgreement                 (#PCDATA)>                                <!ATTLIST collateralAgreement  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the market operation code corresponding to the market operation type: exercise, expiry, restructure, cancel and reissue, etc. --><!ELEMENT operationCode                       (#PCDATA)>                                <!ATTLIST operationCode  type                NMTOKEN  #FIXED 'string' operationCodeScheme CDATA    #IMPLIED ><!-- represents the operation date: the date at which the market operation is executed. --><!ELEMENT operationDate                       (#PCDATA)>                                <!ATTLIST operationDate  type NMTOKEN  #FIXED 'date' > <!-- represents the reference of the operation: market operation number. --><!ELEMENT operationId                         (#PCDATA)>                                <!ATTLIST operationId  type NMTOKEN  #FIXED 'decimal' ><!-- represents the trade source information in case the trade was generated by a specific market operation. --><!ELEMENT tradeSource                         (%MxML_TradeSource;)>                     <!ATTLIST tradeSource  type NMTOKEN  #FIXED 'tradeSource' ><!-- represents the data related to the linked trades definition: link Ids, link method, link code.  --><!ELEMENT tradeLink                           (%MxML_TradeLink;)>                       <!ATTLIST tradeLink  type NMTOKEN  #FIXED 'tradeLink' ><!-- represents the payment agreements with the party at the level of the trade. Tough the party conventions depend of each party definition, it is also possible to re-define individual conventions at the level of  each trade.  --><!ELEMENT tradeAgreements                     (%MxML_TradeAgreements;)>                 <!ATTLIST tradeAgreements  type NMTOKEN  #FIXED 'tradeAgreements' ><!-- represents the payment agreements with the party. They are inherited from the party definition, at the level of trade definition. --><!ELEMENT partyConventions                    (%MxML_PartyConventions;)>                <!ATTLIST partyConventions  type NMTOKEN  #FIXED 'partyConventions' ><!-- represents the trade physical status: LIVE, DEAD, or MKT_OP. --><!ELEMENT physicalStatus                      (#PCDATA)>                                <!ATTLIST physicalStatus  type                 NMTOKEN  #FIXED 'string'                            physicalStatusScheme CDATA    #IMPLIED ><!-- represents the flag of  the validation level reached by the trade, through the Murex STP validation tool. It indicates the transfer of the trade from FO to BO desk as well as the signature status at the level of each desk. These valiadtions are fully user definable in Murex application. --><!ELEMENT validationLevel                     (#PCDATA)>                                <!ATTLIST validationLevel  type NMTOKEN  #FIXED 'string' ><!-- represents the flag of the trade confirmation status. --><!ELEMENT confirmationStatus                  (#PCDATA)>                                <!ATTLIST confirmationStatus  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_initialPayment                  (%MxML_TerminalNode;)>                    <!ATTLIST cat_initialPayment  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_nominal                         (%MxML_NominalCategory;)>                 <!ATTLIST cat_nominal  type NMTOKEN  #FIXED 'nominalCategory' ><!ELEMENT cat_settlement                      (%MxML_SettlementCategory;)>              <!ATTLIST cat_settlement  type NMTOKEN  #FIXED 'settlementCategory' ><!ELEMENT cat_marginCall                      (%MxML_TerminalNode;)>                    <!ATTLIST cat_marginCall  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_earlySettlement                 (%MxML_TerminalNode;)>                    <!ATTLIST cat_earlySettlement  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_adjustment                      (%MxML_TerminalNode;)>                    <!ATTLIST cat_adjustment  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_replacement                     (%MxML_TerminalNode;)>                    <!ATTLIST cat_replacement  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_initial                         (%MxML_TerminalNode;)>                    <!ATTLIST cat_initial  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_return                          (%MxML_TerminalNode;)>                    <!ATTLIST cat_return  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_start                           (%MxML_TerminalNode;)>                    <!ATTLIST cat_start  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_intermediate                    (%MxML_TerminalNode;)>                    <!ATTLIST cat_intermediate  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_end                             (%MxML_TerminalNode;)>                    <!ATTLIST cat_end  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_fixedRate                       (%MxML_TerminalNode;)>                    <!ATTLIST cat_fixedRate  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_floatingRate                    (%MxML_TerminalNode;)>                    <!ATTLIST cat_floatingRate  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_netRate                         (%MxML_TerminalNode;)>                    <!ATTLIST cat_netRate  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_taxCredit                       (%MxML_TerminalNode;)>                    <!ATTLIST cat_taxCredit  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_coupon                          (%MxML_CouponCategory;)>                  <!ATTLIST cat_coupon  type NMTOKEN  #FIXED 'couponCategory' ><!ELEMENT cat_brokerageFee                    (%MxML_TerminalNode;)>                    <!ATTLIST cat_brokerageFee  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_brokerageTax                    (%MxML_TerminalNode;)>                    <!ATTLIST cat_brokerageTax  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_clearingFee                     (%MxML_TerminalNode;)>                    <!ATTLIST cat_clearingFee  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_clearingTax                     (%MxML_TerminalNode;)>                    <!ATTLIST cat_clearingTax  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_internalFee                     (%MxML_TerminalNode;)>                    <!ATTLIST cat_internalFee  type NMTOKEN  #FIXED 'string' ><!ELEMENT cat_capital                         (%MxML_CapitalCategory;)>                 <!ATTLIST cat_capital  type NMTOKEN  #FIXED 'capitalCategory' ><!ELEMENT cat_revenue                         (%MxML_RevenueCategory;)>                 <!ATTLIST cat_revenue  type NMTOKEN  #FIXED 'revenueCategory' ><!ELEMENT cat_fee                             (%MxML_FeeCategory;)>                     <!ATTLIST cat_fee  type NMTOKEN  #FIXED 'feeCategory' ><!-- represents the definition of the rebate in a barrier block: amount, currency and date. --><!ELEMENT rebate                              (%MxML_Rebate;)>                          <!ATTLIST rebate  type NMTOKEN  #FIXED 'rebate' ><!-- represents the description of a single barrier: the type, the barrier rate, the dates, and the rebate. --><!ELEMENT singleBarrier                       (%MxML_BarrierPayoff;)>                   <!ATTLIST singleBarrier  type NMTOKEN  #FIXED 'barrierPayoff' ><!-- represents the description of a double barrier: the type, the barrier rates, the dates, and the rebates. --><!ELEMENT doubleBarrier                       (%MxML_DoubleBarrier;)>                   <!ATTLIST doubleBarrier  type NMTOKEN  #FIXED 'doubleBarrier' ><!-- represents all the data related to the lower barrier: the lower rate, the window dates, and the rebate. --><!ELEMENT lowerBarrier                        (%MxML_BarrierPayoff;)>                   <!ATTLIST lowerBarrier  type NMTOKEN  #FIXED 'barrierPayoff' ><!-- represents all the data related to the upper barrier: the upper rate, the window dates and the rebate. --><!ELEMENT upperBarrier                        (%MxML_BarrierPayoff;)>                   <!ATTLIST upperBarrier  type NMTOKEN  #FIXED 'barrierPayoff' ><!ELEMENT flex                                (%MxML_Flex;)>                            <!ATTLIST flex  type NMTOKEN  #FIXED 'flex' ><!ELEMENT flexBlocks                          (%MxML_FlexBlocks;)>                     <!ATTLIST flexBlocks  type NMTOKEN  #FIXED 'flexBlocks' ><!ELEMENT flexBlock                           (%MxML_FlexBlock;)>                       <!ATTLIST flexBlock  type NMTOKEN  #FIXED 'flexBlock' ><!ELEMENT optionBlock                         (%MxML_OptionBlock;)>                     <!ATTLIST optionBlock  type NMTOKEN  #FIXED 'optionBlock' ><!-- represents the description of a single barrier or a double barrier. --><!ELEMENT barrierBlock                        (%MxML_BarrierBlock;)>                    <!ATTLIST barrierBlock  type NMTOKEN  #FIXED 'barrierBlock' ><!-- represents the description of the fixing block of an average option. --><!ELEMENT fixingBlock                         (%MxML_FixingBlock;)>                     <!ATTLIST fixingBlock  type NMTOKEN  #FIXED 'fixingBlock' ><!ELEMENT incrementType                       (#PCDATA)>                                <!ATTLIST incrementType type NMTOKEN  #FIXED 'string' incrementTypeScheme CDATA #IMPLIED > <!ELEMENT paymentAt                           (#PCDATA)>                                <!ATTLIST paymentAt type NMTOKEN  #FIXED 'string' paymentAtScheme CDATA #IMPLIED > <!-- represents the description of the ladder block of a ladder option. --><!ELEMENT ladderBlock                         (%MxML_LadderBlock;)>                     <!ATTLIST ladderBlock  type NMTOKEN  #FIXED 'ladderBlock' ><!ELEMENT textBlock                           (%MxML_TextBlock;)>                       <!ATTLIST textBlock  type NMTOKEN  #FIXED 'textBlock' ><!ELEMENT userDefinedBlock                    (%MxML_UserDefinedBlock;)>                <!ATTLIST userDefinedBlock  type NMTOKEN  #FIXED 'userDefinedBlock' ><!ELEMENT flexTemplateLabel                   (#PCDATA)>                                <!ATTLIST flexTemplateLabel  type NMTOKEN  #FIXED 'string' ><!ELEMENT flexUserDefinedFields               (%MxML_UserDefinedFields;)>               <!ATTLIST flexUserDefinedFields  type NMTOKEN  #FIXED 'userDefinedFields' ><!ELEMENT blockUserDefinedFields              (%MxML_UserDefinedFields;)>               <!ATTLIST blockUserDefinedFields  type NMTOKEN  #FIXED 'userDefinedFields' ><!ELEMENT userDefinedStandardFields           (%MxML_UserDefinedFields;)>               <!ATTLIST userDefinedStandardFields  type NMTOKEN  #FIXED 'userDefinedFields' ><!ELEMENT userDefinedVector                   (%MxML_UserDefinedVector;)>               <!ATTLIST userDefinedVector  type NMTOKEN  #FIXED 'userDefinedVector' ><!ELEMENT userDefinedVectorLine               (%MxML_UserDefinedFields;)>               <!ATTLIST userDefinedVectorLine  type NMTOKEN  #FIXED 'userDefinedFields' ><!ELEMENT emptyNode                           (#PCDATA)>                                <!ATTLIST emptyNode  type NMTOKEN  #FIXED 'string' ><!ELEMENT coupons                             (%MxML_ExternalFlows;)>                   <!ATTLIST coupons  type NMTOKEN  #FIXED 'externallows' ><!-- Rrepresents a description of the contribution of tax credit in the flow. --><!ELEMENT taxCredit                           (%MxML_ExternalFlows;)>                   <!ATTLIST taxCredit  type NMTOKEN  #FIXED 'externalFlows' ><!-- Represents a description of the contribution of dividends in the flow. --><!ELEMENT dividends                           (%MxML_ExternalFlows;)>                   <!ATTLIST dividends  type NMTOKEN  #FIXED 'externalFlows' ><!-- Represents the percentage of dividends/tax credit to be repaid at each period.it is a number between 0 and 1. --><!ELEMENT paymentWeight                       (#PCDATA)>                                <!ATTLIST paymentWeight  type NMTOKEN  #FIXED 'decimal' ><!-- Represents the percentage of dividends/tax credit to be reinvested in each period. It's a number between 0 and 1. --><!ELEMENT reinvestmentWeight                  (#PCDATA)>                                <!ATTLIST reinvestmentWeight  type NMTOKEN  #FIXED 'decimal' ><!-- Represents the convention used to define which dividends/tax credit to take in each period (For exemple:"with payment date within period"). --><!ELEMENT consideredFlows                     (#PCDATA)>                                <!ATTLIST consideredFlows  type                  NMTOKEN  #FIXED 'string' consideredFlowsScheme CDATA    #IMPLIED > <!-- Represents the payment date rule of the dividends/tax credit Ex:"On interest payment date". --><!ELEMENT paymentDateRule                     (#PCDATA)>                                <!ATTLIST paymentDateRule  type                  NMTOKEN  #FIXED 'string' paymentDateRuleScheme CDATA    #IMPLIED ><!-- represents the description of the security instrument. --><!ELEMENT securityId                          (%MxML_SecurityID;)>                      <!ATTLIST securityId  type NMTOKEN  #FIXED 'securityID' ><!-- represents the description of the future instrument. --><!ELEMENT futureId                            (%MxML_FutureID;)>                        <!ATTLIST futureId  type NMTOKEN  #FIXED 'futureID' ><!ELEMENT issuerId                            (#PCDATA)>                                <!ATTLIST issuerId  type NMTOKEN  #FIXED 'string' ><!-- represents a quantity.  --><!ELEMENT quantity                            (#PCDATA)>                                <!ATTLIST quantity  type NMTOKEN  #FIXED 'decimal' ><!-- represents the value date of a security deal. --><!ELEMENT valueDate                           (#PCDATA)>                                <!ATTLIST valueDate  type NMTOKEN  #FIXED 'date' ><!-- represents the delivery date of an option. --><!ELEMENT deliveryDate                        (#PCDATA)>                                <!ATTLIST deliveryDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT firstExercizeDate                   (#PCDATA)>                                <!ATTLIST firstExercizeDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT clearingHouse                       (#PCDATA)>                                <!ATTLIST clearingHouse  type NMTOKEN  #FIXED 'string' ><!-- represents the description of a security option. --><!ELEMENT securityOption                      (%MxML_SecurityOption;)>                  <!ATTLIST securityOption  type NMTOKEN  #FIXED 'securityOption' ><!-- tells whether an option is a call or a put. --><!ELEMENT callPut                             (#PCDATA)>                                <!ATTLIST callPut  type          NMTOKEN  #FIXED 'string' callPutScheme CDATA    #IMPLIED > <!ELEMENT securityPriceExpression             (#PCDATA)>                                <!ATTLIST securityPriceExpression  type                          NMTOKEN  #FIXED 'string' securityPriceExpressionScheme CDATA    #IMPLIED ><!ELEMENT strikeExpression                    (#PCDATA)>                                <!ATTLIST strikeExpression  type                          NMTOKEN  #FIXED 'string' securityPriceExpressionScheme CDATA    #IMPLIED ><!-- represents the contract of a future or security option. --><!ELEMENT optionContract                      (#PCDATA)>                                <!ATTLIST optionContract  type NMTOKEN  #FIXED 'string' ><!ELEMENT exercizeConventions                 (#PCDATA)>                                <!ATTLIST exercizeConventions  type NMTOKEN  #FIXED 'string' > <!-- represents the definition of the rebate payment of a barrier block: at maturity or at knock time. --><!ELEMENT rebatePayment                       (#PCDATA)>                                <!ATTLIST rebatePayment  type                NMTOKEN  #FIXED 'string' rebatePaymentScheme CDATA    #IMPLIED > <!-- represents the unitary amount of the rebate of a barrier block. --><!ELEMENT rebateAmount                        (#PCDATA)>                                <!ATTLIST rebateAmount  type NMTOKEN  #FIXED 'decimal' ><!-- represents the definition of the currency of the rebate amount. --> <!ELEMENT rebateCurrency                      (#PCDATA)>                                <!ATTLIST rebateCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the start date of a schedule.  --><!ELEMENT startDate                           (#PCDATA)>                                <!ATTLIST startDate  type NMTOKEN  #FIXED 'date' ><!-- represents the end date of a schedule. --><!ELEMENT endDate                             (#PCDATA)>                                <!ATTLIST endDate  type NMTOKEN  #FIXED 'date' ><!-- represents the type of payment of the fixing: maturity for instance. --><!ELEMENT fixingPayment                       (#PCDATA)>                                <!ATTLIST fixingPayment  type                NMTOKEN  #FIXED 'string' fixingPaymentScheme CDATA    #IMPLIED ><!ELEMENT fixingType                          (#PCDATA)>                                <!ATTLIST fixingType     type                NMTOKEN  #FIXED 'string' fixingTypeScheme    CDATA    #IMPLIED ><!ELEMENT ladderType                          (#PCDATA)>                                <!ATTLIST ladderType     type                NMTOKEN  #FIXED 'string' ladderTypeScheme    CDATA    #IMPLIED ><!ELEMENT securityCode                        (#PCDATA)>                                <!ATTLIST securityCode  type NMTOKEN  #FIXED 'string' ><!-- represents the label of the future instrument. --><!ELEMENT futureLabel                         (#PCDATA)>                                <!ATTLIST futureLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the market of the future instrument. --><!ELEMENT futureMarket                        (#PCDATA)>                                <!ATTLIST futureMarket  type NMTOKEN  #FIXED 'string' ><!-- represents the expiry date of the future instrument. --><!ELEMENT expiryDate                          (#PCDATA)>                                <!ATTLIST expiryDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT expiryMonth                         (#PCDATA)>                                <!ATTLIST expiryMonth  type              NMTOKEN  #FIXED 'string'                         expiryMonthScheme CDATA    #IMPLIED > <!-- represents the description of the security option exotic part. --><!ELEMENT exoticClauses                       (%MxML_SecurityOptionExoticClauses;)>     <!ATTLIST exoticClauses  type NMTOKEN  #FIXED 'securityOptionExoticClauses' ><!-- represents the form factor of the quotation mode. --><!ELEMENT formFactor                          (#PCDATA)>                                <!ATTLIST formFactor  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT forwardStartPayoff                  (#PCDATA)>                                <!ATTLIST forwardStartPayoff type NMTOKEN  #FIXED 'string' forwardStartPayoffScheme CDATA #IMPLIED><!ELEMENT forwardStart                        (%MxML_ForwardStartClauses;)>             <!ATTLIST forwardStart type NMTOKEN  #FIXED 'forwardStartClauses'><!ELEMENT compound                            (%MxML_CompoundOptionClauses;)>           <!ATTLIST compound type NMTOKEN  #FIXED 'compoundOptionClauses'><!ELEMENT totalReturnFirstDate                (#PCDATA)>                                <!ATTLIST totalReturnFirstDate  type NMTOKEN  #FIXED 'date'><!ELEMENT totalReturnMode                     (#PCDATA)>                                <!ATTLIST totalReturnMode type NMTOKEN  #FIXED 'string' totalReturnScheme CDATA #IMPLIED><!ELEMENT totalReturn                         (%MxML_TotalReturnClauses;)>              <!ATTLIST totalReturn type NMTOKEN  #FIXED 'totalReturnClauses'><!-- represents the quotation of the contract, whether it is currency1 per currency 2 or vice versa. --><!ELEMENT fxQuoteBasis                        (#PCDATA)>                                <!ATTLIST fxQuoteBasis  type  NMTOKEN  #FIXED 'string' fxQuoteBasisScheme CDATA    #IMPLIED > <!-- represents the quotation mode of the contract: the quote basis, the currencies, and the form factor. --><!ELEMENT fxQuotation                         (%MxML_FxQuotation;)>                     <!ATTLIST fxQuotation  type NMTOKEN  #FIXED 'fxQuotation' ><!-- represents the quotation mode of the premium: the quote basis, the currencies, and the form factor. --><!ELEMENT fxPremiumQuotation                  (%MxML_FxQuotation;)>                     <!ATTLIST fxPremiumQuotation  type NMTOKEN  #FIXED 'fxQuotation' ><!-- represents the label of the historical file that contains fixing values. --><!ELEMENT sourceLabel                         (#PCDATA)>                                <!ATTLIST sourceLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the label of the column of the historical file of fixings. The value of this column is used in the trade. --><!ELEMENT columnLabel                         (#PCDATA)>                                <!ATTLIST columnLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the description of the historical file used in the FX trade to get fixing values. --><!ELEMENT fxRateSource                        (%MxML_FxRateSource;)>                    <!ATTLIST fxRateSource  type NMTOKEN  #FIXED 'fxRateSource' ><!-- represents the first exchanged currency in a currency pair. --><!ELEMENT currency1                           (#PCDATA)>                                <!ATTLIST currency1  type NMTOKEN  #FIXED 'string' ><!-- represents the second exchanged currency in a currency pair. --><!ELEMENT currency2                           (#PCDATA)>                                <!ATTLIST currency2  type NMTOKEN  #FIXED 'string' ><!-- represents the currency of the payout at delivery date. --><!ELEMENT settlementCurrency                  (#PCDATA)>                                <!ATTLIST settlementCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the definition of a range of dates. --><!ELEMENT fxRange                             (%MxML_FxRange;)>                         <!ATTLIST fxRange  type NMTOKEN  #FIXED 'fxRange' ><!-- represents the description of all data related to non deliverable FX deals. --><!ELEMENT nonDeliverableForward               (%MxML_FxCashSettlement;)>                <!ATTLIST nonDeliverableForward  type NMTOKEN  #FIXED 'fxCashSettlement' ><!-- represents the settlement conditions of an fx option: currencies, fixing, date. --><!ELEMENT fxCashSettlementConditions          (%MxML_FxCashSettlement;)>                <!ATTLIST fxCashSettlementConditions  type NMTOKEN  #FIXED 'fxCashSettlement' ><!-- represents the description of the fixing block for Fx trades. --><!ELEMENT fxFixing                            (%MxML_FxFixing;)>                        <!ATTLIST fxFixing  type NMTOKEN  #FIXED 'fxFixing' ><!-- represents the rate used to convert a payment to a final currency and is described by the quotation mode of the price and the value. --><!ELEMENT exchangeRate                        (%MxML_FxFixedRate;)>                     <!ATTLIST exchangeRate  type NMTOKEN  #FIXED 'fxRate' ><!-- represents the description of the first currency flow of a trade: portfolio, currency, amount, date of payment. --><!ELEMENT currency1Flow                       (%MxML_Flow;)>                            <!ATTLIST currency1Flow  type NMTOKEN  #FIXED 'flow' ><!-- represents the description of the second currency flow of a tradel: Portfolio, currency, amount, date of payment. --><!ELEMENT currency2Flow                       (%MxML_Flow;)>                            <!ATTLIST currency2Flow  type NMTOKEN  #FIXED 'flow' ><!-- represents the description of one leg of a trade in case it is composed of more than one leg: forex swap for instance. --><!ELEMENT fxLeg                               (%MxML_FxLeg;)>                           <!ATTLIST fxLeg  type NMTOKEN  #FIXED 'fxLeg' ><!-- represents the spot forward product definition. --><!ELEMENT fxSpotForward                       (%MxML_FxLeg;)>                           <!ATTLIST fxSpotForward  type NMTOKEN  #FIXED 'fxLeg' ><!-- represents the forex swap product definition. --><!ELEMENT forexSwap                           (%MxML_FxLegs;)>                          <!ATTLIST forexSwap  type NMTOKEN  #FIXED 'fxLegs' ><!-- represents the payment flow origin currency. --><!ELEMENT flowOriginCurrency                  (#PCDATA)>                                <!ATTLIST flowOriginCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the flag that indicates that a flow is to be converted , or not, from its origin currency to a final currency. --><!ELEMENT flowConversion                      (#PCDATA)>                                <!ATTLIST flowConversion  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the flag that indicates whether the nostro settlement instructions are inherited from the party conventions or customized at the trade level. --><!ELEMENT specificNostro                      (#PCDATA)>                                <!ATTLIST specificNostro  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the flag that indicates whether the vostro settlement instructions are inherited from the party conventions or customized at the trade level. --><!ELEMENT specificVostro                      (#PCDATA)>                                <!ATTLIST specificVostro  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!-- represents the internal reference number of the nostro settlement instruction. --><!ELEMENT nostroReferenceId                   (#PCDATA)>                                <!ATTLIST nostroReferenceId  type NMTOKEN  #FIXED 'decimal' ><!-- represents the internal reference number of the vostro settlement instruction. --><!ELEMENT vostroReferenceId                   (#PCDATA)>                                <!ATTLIST vostroReferenceId  type NMTOKEN  #FIXED 'decimal' ><!-- represents the flow setttlement method flag, specific to FX trades only (spot-forward and swaps). It is mandatory when the party wants to use different cash instructions based upon settlement method (ND or CLS, as defined in MUREX). --><!ELEMENT flowSettlementMethod                (#PCDATA)>                                <!ATTLIST flowSettlementMethod  type                 NMTOKEN  #FIXED 'string'                                  flowSettlementMethod CDATA    #IMPLIED ><!-- represents the sign of the payment flow: Debit or Credit. --><!ELEMENT flowSign                            (#PCDATA)>                                <!ATTLIST flowSign  type           NMTOKEN  #FIXED 'string'                      flowSignScheme CDATA    #IMPLIED ><!ELEMENT basketLabel                         (#PCDATA)>                                <!ATTLIST basketLabel  type NMTOKEN  #FIXED 'string' > <!-- represents the payment flow currency. In case of currency conversion it corresponds to the final currency. --><!ELEMENT flowCurrency                        (#PCDATA)>                                <!ATTLIST flowCurrency  type NMTOKEN  #FIXED 'string' ><!ELEMENT callCurrency                        (#PCDATA)>                                <!ATTLIST callCurrency  type NMTOKEN  #FIXED 'string' ><!ELEMENT putCurrency                         (#PCDATA)>                                <!ATTLIST putCurrency  type NMTOKEN  #FIXED 'string' ><!--represents the nostro settlement instructions user definable fields.  --><!ELEMENT nostroInstructions                  (%MxML_UserDefinedFields;)>               <!ATTLIST nostroInstructions  type NMTOKEN  #FIXED 'UserDefinedFields' ><!--represents the vostro settlement instructions user definable fields.  --><!ELEMENT vostroInstructions                  (%MxML_UserDefinedFields;)>               <!ATTLIST vostroInstructions  type NMTOKEN  #FIXED 'UserDefinedFields' ><!-- represents the details of the party settlement instructions: flow conversion flag (if any), origin currency, nostro reference number, vostro reference number, and specific vostro flag. --> <!ELEMENT settlementInstructionDescription    (%MxML_SettlementInstructionDescription;)><!ATTLIST settlementInstructionDescription  type NMTOKEN  #FIXED 'settlementInstructionDescription' ><!-- represents the party's settlement instructions key definition: it includes the party reference, payment flow currency, and the flow sign.  --><!ELEMENT settlementInstructionKey            (%MxML_SettlementInstructionKey;)>        <!ATTLIST settlementInstructionKey  type NMTOKEN  #FIXED 'settlementInstructionKey' ><!-- represents the party settlement instructions information.  --><!ELEMENT settlementInstruction               (%MxML_SettlementInstruction;)>           <!ATTLIST settlementInstruction  type NMTOKEN  #FIXED 'settlementInstruction' ><!-- represents the settlement instructions component. --><!ELEMENT settlementInstructions              (%MxML_SettlementInstructions;)>          <!ATTLIST settlementInstructions  type NMTOKEN  #FIXED 'settlementInstructions' ><!-- represents the decription of the cap of the security option. --><!ELEMENT capClause                           (%MxML_CapClause;)>                       <!ATTLIST capClause  type NMTOKEN  #FIXED 'capClause' ><!ELEMENT fxClause                            (%MxML_FxClause;)>                        <!ATTLIST fxClause  type NMTOKEN  #FIXED 'fxClause' ><!ELEMENT fxRule                              (#PCDATA)>                                <!ATTLIST fxRule  type NMTOKEN  #FIXED 'string' ><!ELEMENT fxSpot                              (%MxML_FxFixedRate;)>                     <!ATTLIST fxSpot  type NMTOKEN  #FIXED 'fxRate' ><!-- represents the cap value of the security option. --><!ELEMENT capValue                            (#PCDATA)>                                <!ATTLIST capValue  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT parity                              (#PCDATA)>                                <!ATTLIST parity  type NMTOKEN  #FIXED 'decimal' ><!-- tells whether there is a cap in a security option or not. --><!ELEMENT capped                              (#PCDATA)>                                <!ATTLIST capped  type            NMTOKEN  #FIXED 'string'                    trueFalseScheme CDATA    #IMPLIED > <!-- represents the final amount (a premium in general) to be exchanged after a currencies conversion and is described by the initial and the final amounts,  and currencies, the parties, and  the date. --> <!ELEMENT convertedFlow                       (%MxML_ConvertedFlow;)>                   <!ATTLIST convertedFlow  type NMTOKEN  #FIXED 'convertedFlow' ><!ELEMENT textBlockLine                       (#PCDATA)>                                <!ATTLIST textBlockLine  type NMTOKEN  #FIXED 'string' ><!-- represents the Cut Off time. --><!ELEMENT cutOff                              (#PCDATA)>                                <!ATTLIST cutOff  type NMTOKEN  #FIXED 'string' ><!ELEMENT maturityLabel                       (#PCDATA)>                                <!ATTLIST maturityLabel  type NMTOKEN  #FIXED 'string' ><!-- Represents the value of the start level for a ladder option. --><!ELEMENT stepsStart                          (#PCDATA)>                                <!ATTLIST stepsStart  type NMTOKEN  #FIXED 'decimal' ><!-- Represents the value of the end level for a ladder option. --><!ELEMENT stepsEnd                            (#PCDATA)>                                <!ATTLIST stepsEnd  type NMTOKEN  #FIXED 'decimal' ><!-- Represents the difference between two consecurtive levels. It can be an absolute or a percentage number. --><!ELEMENT stepsIncrement                      (#PCDATA)>                                <!ATTLIST stepsIncrement  type NMTOKEN  #FIXED 'decimal' ><!-- Represents the number of levels for a ladder option. --><!ELEMENT stepsNumber                         (#PCDATA)>                                <!ATTLIST stepsNumber  type NMTOKEN  #FIXED 'integer' ><!-- represents the strike of an fx option, described by the quotation mode and the value. --><!ELEMENT fxStrike                            (%MxML_FxRate;)>                          <!ATTLIST fxStrike  type NMTOKEN  #FIXED 'fxRate' ><!ELEMENT capFloorFxStrike                    (%MxML_FxRate;)>                          <!ATTLIST capFloorFxStrike  type NMTOKEN  #FIXED 'fxRate' ><!-- represents the foreign exchange option product definition. --><!ELEMENT fxOption                            (%MxML_FxOption;)>                        <!ATTLIST fxOption  type NMTOKEN  #FIXED 'fxOption' ><!ELEMENT underlyingFxOption                  (%MxML_FxOption;)>                        <!ATTLIST underlyingFxOption  type NMTOKEN  #FIXED 'fxOption' ><!ELEMENT underlyingFxUpperBarrierOption      (%MxML_FxOption;)>                        <!ATTLIST underlyingFxUpperBarrierOption  type NMTOKEN  #FIXED 'fxOption' ><!ELEMENT underlyingFxLowerBarrierOption      (%MxML_FxOption;)>                        <!ATTLIST underlyingFxLowerBarrierOption  type NMTOKEN  #FIXED 'fxOption' ><!ELEMENT underlyingFxOptions                 (%MxML_FxOptions;)>                       <!ATTLIST underlyingFxOptions  type NMTOKEN  #FIXED 'fxOptions' ><!--represents the description of  the call leg of a trade: currency, amount, and date of payment. --><!ELEMENT callCurrencyAmount                  (%MxML_DatedCurrencyAmount;)>             <!ATTLIST callCurrencyAmount  type NMTOKEN  #FIXED 'datedCurrencyAmount' ><!--represents the description of  the put leg of a trade: currency, amount, and date of payment. --><!ELEMENT putCurrencyAmount                   (%MxML_DatedCurrencyAmount;)>             <!ATTLIST putCurrencyAmount  type NMTOKEN  #FIXED 'datedCurrencyAmount' ><!-- represents the data from which the payout is calculated: the Call or the put amount , the currency and the date of the payment. --><!ELEMENT digitalPaymentAmount                (%MxML_DatedCurrencyAmount;)>             <!ATTLIST digitalPaymentAmount  type NMTOKEN  #FIXED 'datedCurrencyAmount' ><!ELEMENT commonCurrencyAmount                (%MxML_DatedCurrencyAmount;)>             <!ATTLIST commonCurrencyAmount  type NMTOKEN  #FIXED 'datedCurrencyAmount' ><!-- represents the description of a barrier. --><!ELEMENT barrierRate                         (%MxML_BarrierRate;)>                     <!ATTLIST barrierRate  type NMTOKEN  #FIXED 'barrierRate' ><!-- represents the upper barrier rate of a barrier option. --><!ELEMENT upperBarrierRate                    (%MxML_BarrierRate;)>                     <!ATTLIST upperBarrierRate  type NMTOKEN  #FIXED 'barrierRate' ><!-- represents the lower barrier rate of a barrier option. --><!ELEMENT lowerBarrierRate                    (%MxML_BarrierRate;)>                     <!ATTLIST lowerBarrierRate  type NMTOKEN  #FIXED 'barrierRate' ><!ELEMENT underlyingVanillaOptions            (%MxML_FxVanillaOptions;)>                <!ATTLIST underlyingVanillaOptions  type NMTOKEN  #FIXED 'fxVanillaOptions' ><!ELEMENT fxVanillaOptions                    (%MxML_FxVanillaOptions;)>                <!ATTLIST fxVanillaOptions  type NMTOKEN  #FIXED 'fxVanillaOptions' ><!ELEMENT fxDigitalOptions                    (%MxML_FxDigitalOptions;)>                <!ATTLIST fxDigitalOptions  type NMTOKEN  #FIXED 'fxDigitalOptions' ><!ELEMENT percentage                          (#PCDATA)>                                <!ATTLIST percentage  type NMTOKEN  #FIXED 'string' ><!ELEMENT percentageLevel                     (#PCDATA)>                                <!ATTLIST percentageLevel  type NMTOKEN  #FIXED 'decimal' ><!-- represents the flat amount of the trade: it is the underlying amount for an FX trade. --><!ELEMENT faceAmount                          (#PCDATA)>                                <!ATTLIST faceAmount  type NMTOKEN  #FIXED 'decimal' ><!-- represents the currency of the face amount: it is the underlying currency for an FX trade. --><!ELEMENT faceAmountCurrency                  (#PCDATA)>                                <!ATTLIST faceAmountCurrency  type NMTOKEN  #FIXED 'string' ><!ELEMENT faceAmountUnit                      (#PCDATA)>                                <!ATTLIST faceAmountUnit  type NMTOKEN  #FIXED 'string' ><!-- represents the currency of the payout. --><!ELEMENT payoutCurrency                      (#PCDATA)>                                <!ATTLIST payoutCurrency  type NMTOKEN  #FIXED 'string' ><!ELEMENT commonCurrency                      (#PCDATA)>                                <!ATTLIST commonCurrency  type NMTOKEN  #FIXED 'string' ><!-- represents the type of the touch rebate option: NoTouch, One touch... --><!ELEMENT touchRebateType                     (#PCDATA)>                                <!ATTLIST touchRebateType  type                   NMTOKEN  #FIXED 'string'                             touchRebateTypesScheme CDATA    #IMPLIED > <!ELEMENT accrualType                         (#PCDATA)>                                <!ATTLIST accrualType  type               NMTOKEN  #FIXED 'string'                          accrualTypesScheme CDATA    #IMPLIED ><!ELEMENT bestOfPayout                        (#PCDATA)>                                <!ATTLIST bestOfPayout  type               NMTOKEN  #FIXED 'string'                      bestOfPayoutScheme  CDATA    #IMPLIED ><!ELEMENT specificLevels                      (#PCDATA)>                                <!ATTLIST specificLevels  type            NMTOKEN  #FIXED 'string'                             trueFalseScheme CDATA    #IMPLIED ><!-- represents the definition of the standard option: the basic characteristics, the call and put currencies, and the strike. --><!ELEMENT fxOptionConditions                  (%MxML_FxOptionConditions;)>              <!ATTLIST fxOptionConditions  type NMTOKEN  #FIXED 'fxOptionConditions' ><!-- represents the currency's definition of a quanto option. --><!ELEMENT quantoConversionRate                (%MxML_FxFixedRate;)>                     <!ATTLIST quantoConversionRate  type NMTOKEN  #FIXED 'fxFixedRate' ><!-- represents the fx vanilla option product definition. --><!ELEMENT fxVanillaOption                     (%MxML_FxVanillaOption;)>                 <!ATTLIST fxVanillaOption  type NMTOKEN  #FIXED 'fxVanillaOption' ><!-- represents the fx digital option product definition. --><!ELEMENT fxDigitalOption                     (%MxML_FxDigitalOption;)>                 <!ATTLIST fxDigitalOption  type NMTOKEN  #FIXED 'fxDigitalOption' ><!-- represents the fx touch rebate option product definition. --><!ELEMENT fxTouchRebateOption                 (%MxML_FxTouchRebateOption;)>             <!ATTLIST fxTouchRebateOption  type NMTOKEN  #FIXED 'fxTouchRebateOption' ><!ELEMENT fxFixings                           (%MxML_FxFixings;)>                       <!ATTLIST fxFixings  type NMTOKEN  #FIXED 'fxFixings' ><!-- represents the fx touch rebate strip option product definition. --><!ELEMENT fxTouchRebateStrip                  (%MxML_FxTouchRebateStrip;)>              <!ATTLIST fxTouchRebateStrip  type NMTOKEN  #FIXED 'fxTouchRebateStrip' ><!-- represents the fx compound option product definition. --><!ELEMENT fxCompoundOption                    (%MxML_FxCompoundOption;)>                <!ATTLIST fxCompoundOption  type NMTOKEN  #FIXED 'fxCompoundOption' ><!-- represents the fx strategy option product definition. --><!ELEMENT fxStrategyOption                    (%MxML_FxStrategyOption;)>                <!ATTLIST fxStrategyOption  type NMTOKEN  #FIXED 'fxStrategyOption' ><!-- represents the fx basket option product definition. --><!ELEMENT fxBasketOption                      (%MxML_FxBasketOption;)>                  <!ATTLIST fxBasketOption  type NMTOKEN  #FIXED 'fxBasketOption' ><!-- represents the fx best of options product definition. --><!ELEMENT fxBestOfOption                      (%MxML_FxBestOfOption;)>                  <!ATTLIST fxBestOfOption  type NMTOKEN  #FIXED 'fxBestOfOption' ><!-- represents the fx barrier option product definition. --><!ELEMENT fxBarrierOption                     (%MxML_FxBarrierOption;)>                 <!ATTLIST fxBarrierOption  type NMTOKEN  #FIXED 'fxBarrierOption' ><!-- represents the fx Knock in on Knock out option product definition. --><!ELEMENT fxKikoOption                        (%MxML_FxKikoOption;)>                    <!ATTLIST fxKikoOption  type NMTOKEN  #FIXED 'fxKikoOption' ><!-- represents the fx average option with floating strike product definition. --><!ELEMENT fxFloatingStrikeOption              (%MxML_FxFloatingStrikeOption;)>          <!ATTLIST fxFloatingStrikeOption  type NMTOKEN  #FIXED 'fxFloatingStrikeOption' ><!-- represents the fx average option with fixed strike product definition. --><!ELEMENT fxFixedStrikeOption                 (%MxML_FxFixedStrikeOption;)>             <!ATTLIST fxFixedStrikeOption  type NMTOKEN  #FIXED 'fxFixedStrikeOption' ><!-- represents the fx Asian option product definition. --><!ELEMENT fxAsianOption                       (%MxML_FxAsianOption;)>                   <!ATTLIST fxAsianOption  type NMTOKEN  #FIXED 'fxAsianOption' ><!-- represents the fx LookBack option product definition. --><!ELEMENT fxLookBackOption                    (%MxML_FxLookBackOption;)>                <!ATTLIST fxLookBackOption  type NMTOKEN  #FIXED 'fxLookBackOption' ><!-- represents the fx Accrual option product definition. --><!ELEMENT fxAccrualOption                     (%MxML_FxAccrualOption;)>                 <!ATTLIST fxAccrualOption  type NMTOKEN  #FIXED 'fxAccrualOption' ><!ELEMENT fxAccrualVanillaOption              (%MxML_FxAccrualVanillaOption;)>          <!ATTLIST fxAccrualVanillaOption  type NMTOKEN  #FIXED 'fxAccrualVanillaOption' ><!ELEMENT fxAccrualDigitalOption              (%MxML_FxAccrualDigitalOption;)>          <!ATTLIST fxAccrualDigitalOption  type NMTOKEN  #FIXED 'fxAccrualDigitalOption' ><!ELEMENT fxGenericOption                     (%MxML_FxGenericOption;)>                 <!ATTLIST fxGenericOption  type NMTOKEN  #FIXED 'fxGenericOption' ><!-- represents the fixing formula type, whether it the values are inherited or customized by the user. --><!ELEMENT averageFormulaNature                (#PCDATA)>                                <!ATTLIST averageFormulaNature  type                       NMTOKEN  #FIXED 'string'                                  averageFormulaNatureScheme CDATA    #IMPLIED ><!-- represents the label of the fx warrant. --><!ELEMENT fxWarrantLabel                      (#PCDATA)>                                <!ATTLIST fxWarrantLabel  type NMTOKEN  #FIXED 'string' ><!-- represents the fx option defined on warrant definition. --><!ELEMENT fxWarrant                           (%MxML_FxWarrant;)>                       <!ATTLIST fxWarrant  type NMTOKEN  #FIXED 'fxWarrant' ><!ELEMENT fxRiskInstrument                    (%MxML_FxRiskInstrument;)>                <!ATTLIST fxRiskInstrument  type NMTOKEN  #FIXED 'fxRiskInstrument' ><!ELEMENT fxRiskInstruments                   (%MxML_FxRiskInstruments;)>               <!ATTLIST fxRiskInstruments  type NMTOKEN  #FIXED 'fxRiskInstruments' ><!ELEMENT fxFlexibleTrade                     (%MxML_FxFlexibleTrade;)>                 <!ATTLIST fxFlexibleTrade  type NMTOKEN  #FIXED 'fxFlexibleTrade' ><!ELEMENT specificCharacteristics             (%MxML_OptionBlockSpecificCharacteristics;)><!ATTLIST specificCharacteristics  type NMTOKEN  #FIXED 'optionBlockSpecificCharacteristics' ><!ELEMENT flexFormula                         (#PCDATA)>                                <!ATTLIST flexFormula  type NMTOKEN  #FIXED 'string' ><!ELEMENT plInstrument                        (#PCDATA)>                                <!ATTLIST plInstrument  type NMTOKEN  #FIXED 'string' ><!ELEMENT digital                             (#PCDATA)>                                <!ATTLIST digital  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED > <!ELEMENT contingent                          (#PCDATA)>                                <!ATTLIST contingent  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!ELEMENT fxAccrualFractions                  (%MxML_FxAccrualFractions;)>              <!ATTLIST fxAccrualFractions  type NMTOKEN  #FIXED 'fxAccrualFractions' ><!-- represents the details of the payout of a digital option: amount in percentage, face amount and currency. --><!ELEMENT fxDigitalOptionPaymentExpression    (%MxML_FxDigitalOptionPaymentExpression;)><!ATTLIST fxDigitalOptionPaymentExpression  type NMTOKEN  #FIXED 'fxDigitalOptionPaymentExpression' ><!ELEMENT aboveFraction                       (#PCDATA)>                                <!ATTLIST aboveFraction  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT belowFraction                       (#PCDATA)>                                <!ATTLIST belowFraction  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT insideFraction                      (#PCDATA)>                                <!ATTLIST insideFraction  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT customizedBarrier                   (#PCDATA)>                                <!ATTLIST customizedBarrier  type            NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!ELEMENT trades                              (%MxML_Trades;)>                          <!ATTLIST trades  type NMTOKEN  #FIXED 'trades' ><!-- represents the description of the customizations done on a deal. --><!ELEMENT customizations                      (%MxML_Customizations;)>                  <!ATTLIST customizations type NMTOKEN  #FIXED 'customizations' ><!-- represents the description of a customization done on a deal. --><!ELEMENT customization                       (%MxML_Customization;)>                   <!ATTLIST customization type NMTOKEN  #FIXED 'customization' ><!-- represents the item that has been customized. --><!ELEMENT customizedObject                    (#PCDATA)>                                <!ATTLIST customizedObject    type NMTOKEN  #FIXED 'string'                               customizedObjectScheme CDATA    #IMPLIED ><!ELEMENT customizationForm                   (#PCDATA)>                                <!ATTLIST customizationForm   type NMTOKEN  #FIXED 'string'                               customizationFormScheme CDATA    #IMPLIED ><!-- It's a number that represents the period where an optimization has occured. For example, if we have 4 calculation periods and if we customize the last one, the value of this tag will be 0. If we customize the second one, the value will be 3. It's a backward numbering. However, when we customize the first fixing, the value of this tag is 0. --><!ELEMENT customizationBackwardOffset         (#PCDATA)>                                <!ATTLIST customizationBackwardOffset type NMTOKEN  #FIXED 'integer' ><!ELEMENT userDefinedFields                   (%MxML_UserDefinedFields;)>               <!ATTLIST userDefinedFields type NMTOKEN  #FIXED 'userDefinedFiels' ><!ELEMENT fullName                            (#PCDATA)>                                <!ATTLIST fullName  type NMTOKEN  #FIXED 'string' ><!ELEMENT financialDefinition                 (%MxML_SecurityFinancialDefinition;)>     <!ATTLIST financialDefinition type NMTOKEN  #FIXED 'securityFinancialDefinition' ><!ELEMENT tradingConventions                  (%MxML_SecurityTradingConventions;)>      <!ATTLIST tradingConventions type NMTOKEN  #FIXED 'securityTradingConventions' ><!ELEMENT issuingConditions                   (%MxML_IssuingConditions;)>               <!ATTLIST issuingConditions type NMTOKEN  #FIXED 'issuingConditions' ><!ELEMENT rics                                (%MxML_SecurityRics;)>                    <!ATTLIST rics type NMTOKEN  #FIXED 'securityRics' ><!ELEMENT ric                                 (#PCDATA)>                                <!ATTLIST ric type NMTOKEN  #FIXED 'string'><!ELEMENT classifications                     (%MxML_Classifications;)>                 <!ATTLIST classifications type NMTOKEN #FIXED 'classifications'><!ELEMENT classification                      (#PCDATA)>                                <!ATTLIST classification type NMTOKEN  #FIXED 'string'><!ELEMENT tradingClauses                      (%MxML_SecurityTradingClauses;)>          <!ATTLIST tradingClauses type NMTOKEN  #FIXED 'securityTradingClauses' ><!ELEMENT quotations                          (%MxML_SecurityQuotations;)>              <!ATTLIST quotations type NMTOKEN  #FIXED 'securityQuotations' ><!ELEMENT settlementConditions                (%MxML_SecuritySettlementConditions;)>    <!ATTLIST settlementConditions type NMTOKEN  #FIXED 'securitySettlementConditions'><!ELEMENT lotSize                             (#PCDATA)>                                <!ATTLIST lotSize type NMTOKEN  #FIXED 'decimal'><!ELEMENT nominalAmount                       (#PCDATA)>                                <!ATTLIST nominalAmount type NMTOKEN  #FIXED 'decimal'><!ELEMENT firstSettlementDate                 (#PCDATA)>                                <!ATTLIST firstSettlementDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT archivingGroup                      (#PCDATA)>                                <!ATTLIST archivingGroup type NMTOKEN  #FIXED 'string'><!ELEMENT mainQuotation                       (%MxML_SecurityQuotation;)>               <!ATTLIST mainQuotation type NMTOKEN  #FIXED 'securityQuotation' ><!ELEMENT secondaryQuotation                  (%MxML_SecurityQuotation;)>               <!ATTLIST secondaryQuotation type NMTOKEN  #FIXED 'securityQuotation' ><!ELEMENT priceFactor                         (#PCDATA)>                                <!ATTLIST priceFactor type NMTOKEN  #FIXED 'decimal'><!ELEMENT tickSize                            (#PCDATA)>                                <!ATTLIST tickSize type NMTOKEN  #FIXED 'decimal'><!ELEMENT priceTolerance                      (#PCDATA)>                                <!ATTLIST priceTolerance type NMTOKEN  #FIXED 'decimal'><!ELEMENT priceIsAPercentage                  (#PCDATA)>                                <!ATTLIST priceIsAPercentage type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED > <!ELEMENT settlementLagsLabel                 (#PCDATA)>                                <!ATTLIST settlementLagsLabel type NMTOKEN  #FIXED 'string' ><!ELEMENT settlementConditionsLabel           (#PCDATA)>                                <!ATTLIST settlementConditionsLabel type NMTOKEN  #FIXED 'string' ><!ELEMENT quotationsLabel                     (#PCDATA)>                                <!ATTLIST quotationsLabel type NMTOKEN  #FIXED 'string' ><!ELEMENT tradingClausesLabel                 (#PCDATA)>                                <!ATTLIST tradingClausesLabel type NMTOKEN  #FIXED 'string' ><!ELEMENT securityPriceQuotation              (%MxML_SecurityPriceQuotation;)>          <!ATTLIST securityPriceQuotation type NMTOKEN  #FIXED 'securityPriceQuotation'> <!ELEMENT securityYieldQuotation              (%MxML_SecurityYieldQuotation;)>          <!ATTLIST securityYieldQuotation type NMTOKEN  #FIXED 'securityYieldQuotation'> <!ELEMENT notation                            (#PCDATA)>                                <!ATTLIST notation type NMTOKEN  #FIXED 'string' notationScheme CDATA #IMPLIED > <!ELEMENT securityPriceNature                 (#PCDATA)>                                <!ATTLIST securityPriceNature type NMTOKEN  #FIXED 'string' securityPriceNatureScheme CDATA #IMPLIED > <!ELEMENT securityYieldNature                 (#PCDATA)>                                <!ATTLIST securityYieldNature type NMTOKEN  #FIXED 'string' securityYieldNatureScheme CDATA #IMPLIED > <!ELEMENT settlementLags                      (%MxML_SecuritySettlementLags;)>          <!ATTLIST settlementLags type NMTOKEN  #FIXED 'securitySettlementLags'> <!ELEMENT paymentDateShifter                  (%MxML_DateShifter;)>                     <!ATTLIST paymentDateShifter  type NMTOKEN  #FIXED 'dateShifter' ><!ELEMENT couponDividendDateShifter           (%MxML_DateShifter;)>                     <!ATTLIST couponDividendDateShifter type NMTOKEN  #FIXED 'dateShifter'><!ELEMENT exDividendRule                      (%MxML_ExDividendRule;)>                  <!ATTLIST exDividendRule  type NMTOKEN  #FIXED 'exDividendRule'><!ELEMENT exDividendShiftReference            (#PCDATA)>                                <!ATTLIST exDividendShiftReference type NMTOKEN  #FIXED 'string' exDividendShiftReferenceScheme CDATA #IMPLIED > <!ELEMENT forwardSettlement                   (#PCDATA)>                                <!ATTLIST forwardSettlement type NMTOKEN  #FIXED 'string' forwardSettlementScheme CDATA #IMPLIED > <!ELEMENT margining                           (#PCDATA)>                                <!ATTLIST margining type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED > <!ELEMENT issuingParty                        (%MxML_Party;)>                           <!ATTLIST issuingParty type NMTOKEN  #FIXED 'party'> <!ELEMENT leadManager                         (#PCDATA)>                                <!ATTLIST leadManager type NMTOKEN  #FIXED 'string'> <!ELEMENT issueDate                           (#PCDATA)>                                <!ATTLIST issueDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT numberIssued                        (#PCDATA)>                                <!ATTLIST numberIssued type NMTOKEN  #FIXED 'decimal' ><!ELEMENT numberOutstanding                   (#PCDATA)>                                <!ATTLIST numberOutstanding type NMTOKEN  #FIXED 'decimal' ><!ELEMENT callable                            (%MxML_BondOptionClauses;)>               <!ATTLIST callable type NMTOKEN  #FIXED 'bondOptionClauses' ><!ELEMENT puttable                            (%MxML_BondOptionClauses;)>               <!ATTLIST puttable type NMTOKEN  #FIXED 'bondOptionClauses' ><!ELEMENT bondOptionClause                    (%MxML_BondOptionClause;)>                <!ATTLIST bondOptionClause type NMTOKEN  #FIXED 'bondOptionClause' ><!ELEMENT couponPaymentOnExercizeDate         (#PCDATA)>                                <!ATTLIST couponPaymentOnExercizeDate type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED ><!ELEMENT optionDate                          (#PCDATA)>                                <!ATTLIST optionDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT optionStartDate                     (#PCDATA)>                                <!ATTLIST optionStartDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT optionEndDate                       (#PCDATA)>                                <!ATTLIST optionEndDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT strike1                             (#PCDATA)>                                <!ATTLIST strike1  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT strike2                             (#PCDATA)>                                <!ATTLIST strike2  type NMTOKEN  #FIXED 'decimal' ><!ELEMENT barrierRate1                        (%MxML_BarrierRate;)>                     <!ATTLIST barrierRate1  type NMTOKEN  #FIXED 'barrierRate' ><!ELEMENT barrierRate2                        (%MxML_BarrierRate;)>                     <!ATTLIST barrierRate2  type NMTOKEN  #FIXED 'barrierRate' ><!ELEMENT gracePeriod                         (#PCDATA)>                                <!ATTLIST gracePeriod type NMTOKEN  #FIXED 'integer' ><!ELEMENT accretion                           (#PCDATA)>                                <!ATTLIST accretion type NMTOKEN  #FIXED 'string'  trueFalseScheme CDATA #IMPLIED ><!ELEMENT bondDefinition                      (%MxML_Bond;)>                            <!ATTLIST bondDefinition type NMTOKEN  #FIXED 'bond' ><!ELEMENT securityBasketDefinition            (%MxML_SecurityBasket;)>                  <!ATTLIST securityBasketDefinition type NMTOKEN  #FIXED 'securityBasket' ><!ELEMENT securityCoupleDefinition            (%MxML_SecurityCouple;)>                  <!ATTLIST securityCoupleDefinition type NMTOKEN  #FIXED 'securityCouple' ><!ELEMENT equityFundDefinition                (%MxML_Fund;)>                            <!ATTLIST equityFundDefinition type NMTOKEN  #FIXED 'equityFund' ><!ELEMENT equityIndexDefinition               (%MxML_EquityIndex;)>                     <!ATTLIST equityIndexDefinition type NMTOKEN  #FIXED 'equityIndex' ><!ELEMENT equityDefinition                    (%MxML_Equity;)>                          <!ATTLIST equityDefinition type NMTOKEN  #FIXED 'equity' ><!ELEMENT streams                             (%MxML_Streams;)>                         <!ATTLIST streams type NMTOKEN  #FIXED 'streams' ><!ELEMENT securityBasketNature                (#PCDATA)>                                <!ATTLIST securityBasketNature type NMTOKEN  #FIXED 'string' securityBasketNatureScheme CDATA #IMPLIED ><!ELEMENT securityBasketElementsNature        (#PCDATA)>                                <!ATTLIST securityBasketElementsNature type NMTOKEN  #FIXED 'string' securityElementsNatureScheme CDATA #IMPLIED ><!ELEMENT securityBasketPriceFormula          (#PCDATA)>                                <!ATTLIST securityBasketPriceFormula type NMTOKEN  #FIXED 'string' securityBasketPriceFormulaScheme CDATA #IMPLIED ><!ELEMENT securityBasketPriceComponents       (%MxML_SecurityBasketPriceComponents;)>   <!ATTLIST securityBasketPriceComponents type NMTOKEN  #FIXED 'securityBasketPriceComponents'><!ELEMENT theoreticalValuation                (#PCDATA)>                                <!ATTLIST theoreticalValuation type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED ><!ELEMENT securityBasketVolatilityNature      (#PCDATA)>                                <!ATTLIST securityBasketVolatilityNature type NMTOKEN  #FIXED 'string' securityBasketVolatilityNatureScheme CDATA #IMPLIED ><!ELEMENT securityBasketComponents            (%MxML_SecurityBasketComponents;)>        <!ATTLIST securityBasketComponents type NMTOKEN  #FIXED 'securityBasketComponents' ><!ELEMENT securityBasketComponent             (%MxML_SecurityBasketComponent;)>         <!ATTLIST securityBasketComponent type NMTOKEN  #FIXED 'securityBasketComponent' ><!ELEMENT adjustmentFactor                    (#PCDATA)>                                <!ATTLIST adjustmentFactor type NMTOKEN  #FIXED 'decimal' ><!ELEMENT initialPrice                        (#PCDATA)>                                <!ATTLIST initialPrice type NMTOKEN  #FIXED 'decimal' ><!ELEMENT initialCapitalization               (#PCDATA)>                                <!ATTLIST initialCapitalization type NMTOKEN  #FIXED 'decimal' ><!ELEMENT securityCoupleFormula               (#PCDATA)>                                <!ATTLIST securityCoupleFormula type NMTOKEN  #FIXED 'string' securityCoupleFormulaScheme CDATA #IMPLIED ><!ELEMENT securityCoupleElementsNature        (#PCDATA)>                                <!ATTLIST securityCoupleElementsNature type NMTOKEN  #FIXED 'string' securityElementsNatureScheme CDATA #IMPLIED ><!ELEMENT securityBasketId                    (%MxML_SecurityID;)>                      <!ATTLIST securityBasketId  type NMTOKEN  #FIXED 'securityID' ><!ELEMENT dividendsTreatment                  (#PCDATA)>                                <!ATTLIST dividendsTreatment type NMTOKEN  #FIXED 'string' dividendsTreatmentScheme CDATA #IMPLIED ><!ELEMENT indexPriceFactor                    (#PCDATA)>                                <!ATTLIST indexPriceFactor type NMTOKEN  #FIXED 'decimal' ><!ELEMENT weight                              (#PCDATA)>                                <!ATTLIST weight type NMTOKEN  #FIXED 'decimal' ><!ELEMENT comingSoon                          (#PCDATA)>                                <!ATTLIST comingSoon type NMTOKEN  #FIXED 'string' ><!ELEMENT adrDefinition                       (%MxML_Adr;)>                             <!ATTLIST adrDefinition type NMTOKEN  #FIXED 'adr' ><!ELEMENT participation                       (#PCDATA)>                                <!ATTLIST participation type NMTOKEN  #FIXED 'decimal' ><!ELEMENT referenceNominal                    (#PCDATA)>                                <!ATTLIST referenceNominal type NMTOKEN  #FIXED 'decimal' ><!ELEMENT conversionClause                    (%MxML_ConversionClause;)>                <!ATTLIST conversionClause  type NMTOKEN  #FIXED 'conversionClause' ><!ELEMENT couponPaymentOnConversionDate       (#PCDATA)>                                <!ATTLIST couponPaymentOnConversionDate type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!ELEMENT preferred                           (#PCDATA)>                                <!ATTLIST preferred type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED ><!ELEMENT rhoDate                             (#PCDATA)>                                <!ATTLIST rhoDate  type NMTOKEN  #FIXED 'date' ><!ELEMENT mandatoryConversion                 (#PCDATA)>                                <!ATTLIST mandatoryConversion type NMTOKEN #FIXED 'string' trueFalseScheme CDATA #IMPLIED ><!ELEMENT newIssues                           (%MxML_DeliverableIssues;)>               <!ATTLIST newIssues type NMTOKEN  #FIXED 'deliverableIssues'><!ELEMENT outstandingIssues                   (%MxML_DeliverableIssues;)>               <!ATTLIST outstandingIssues type NMTOKEN  #FIXED 'deliverableIssues'><!ELEMENT deliveryConditions                  (%MxML_ConversionDeliveryConditions;)>    <!ATTLIST deliveryConditions type NMTOKEN  #FIXED 'conversionDeliveryConditions'><!ELEMENT bondDelivery                        (#PCDATA)>                                <!ATTLIST bondDelivery type NMTOKEN #FIXED 'string' trueFalseScheme CDATA #IMPLIED ><!ELEMENT firstFeeRate                        (#PCDATA)>                                <!ATTLIST firstFeeRate type NMTOKEN  #FIXED 'decimal' ><!ELEMENT secondFeeRate                       (#PCDATA)>                                <!ATTLIST secondFeeRate type NMTOKEN  #FIXED 'decimal' ><!ELEMENT deliverableQuantity                 (%MxML_DeliverableQuantity;)>             <!ATTLIST deliverableQuantity type NMTOKEN  #FIXED 'deliverableQuantity'><!ELEMENT interpolatedDeliverableQuantity     (%MxML_InterpolatedDeliverableQuantity;)> <!ATTLIST interpolatedDeliverableQuantity type NMTOKEN  #FIXED 'interpolatedDeliverableQuantity'><!ELEMENT spot                                (#PCDATA)>                                <!ATTLIST spot type NMTOKEN  #FIXED 'decimal' ><!ELEMENT spot1                               (#PCDATA)>                                <!ATTLIST spot1 type NMTOKEN  #FIXED 'decimal' ><!ELEMENT spot2                               (#PCDATA)>                                <!ATTLIST spot2 type NMTOKEN  #FIXED 'decimal' ><!ELEMENT quantityAtStartDateSpot1            (#PCDATA)>                                <!ATTLIST quantityAtStartDateSpot1 type NMTOKEN  #FIXED 'decimal' ><!ELEMENT quantityAtEndDateSpot1              (#PCDATA)>                                <!ATTLIST quantityAtEndDateSpot1 type NMTOKEN  #FIXED 'decimal' ><!ELEMENT quantityAtEndDateSpot2              (#PCDATA)>                                <!ATTLIST quantityAtEndDateSpot2 type NMTOKEN  #FIXED 'decimal' ><!ELEMENT securityIndexed                     (%MxML_SecurityIndexed;)>                 <!ATTLIST securityIndexed type NMTOKEN  #FIXED 'securityIndexed'><!ELEMENT convertible                         (%MxML_ConversionClauses;)>               <!ATTLIST convertible type NMTOKEN  #FIXED 'conversionClauses'><!ELEMENT underlyingPortfolio                 (#PCDATA)>                                <!ATTLIST underlyingPortfolio type NMTOKEN  #FIXED 'string'><!ELEMENT unitNumber                          (#PCDATA)>                                <!ATTLIST unitNumber type NMTOKEN  #FIXED 'decimal'><!ELEMENT adjustmentCoefficientBySecurity     (#PCDATA)>                                <!ATTLIST adjustmentCoefficientBySecurity type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT repaidDividendProportion            (#PCDATA)>                                <!ATTLIST repaidDividendProportion type NMTOKEN  #FIXED 'decimal'><!ELEMENT publicationStyle                    (#PCDATA)>                                <!ATTLIST publicationStyle type NMTOKEN  #FIXED 'string' publicationStyleScheme CDATA #IMPLIED ><!ELEMENT warrantDefinition                   (%MxML_Warrant;)>                         <!ATTLIST warrantDefinition type NMTOKEN  #FIXED 'warrant'><!ELEMENT creditClause                        (%MxML_CreditClause;)>                    <!ATTLIST creditClause type NMTOKEN  #FIXED 'creditClause'><!ELEMENT generalTerms                        (%MxML_GeneralTerms;)>                    <!ATTLIST generalTerms type NMTOKEN  #FIXED 'generalTerms'><!ELEMENT creditTerms                         (%MxML_CreditTerms;)>                     <!ATTLIST creditTerms type NMTOKEN  #FIXED 'creditTerms'><!ELEMENT settlementTerms                     (%MxML_SettlementTerms;)>                 <!ATTLIST settlementTerms type NMTOKEN  #FIXED 'settlementTerms'><!ELEMENT referenceObligations                (%MxML_ReferenceObligations;)>            <!ATTLIST referenceObligations type NMTOKEN  #FIXED 'referenceObligations'><!ELEMENT deliverableObligations              (%MxML_DeliverableObligations;)>          <!ATTLIST deliverableObligations type NMTOKEN  #FIXED 'deliverableObligations'><!ELEMENT agentName                           (#PCDATA)>                                <!ATTLIST agentName  type NMTOKEN  #FIXED 'string' ><!ELEMENT agentCity                           (#PCDATA)>                                <!ATTLIST agentCity  type NMTOKEN  #FIXED 'string' ><!ELEMENT referenceEntities                   (%MxML_CreditEntities;)>                  <!ATTLIST referenceEntities type NMTOKEN  #FIXED 'creditEntities'><!ELEMENT seniority                           (#PCDATA)>                                <!ATTLIST seniority type NMTOKEN  #FIXED 'string' ><!ELEMENT otherReferenceBonds                 (%MxML_SecurityIDs;)>                     <!ATTLIST otherReferenceBonds type NMTOKEN  #FIXED 'securityIds'><!ELEMENT payoutUponDefault                   (%MxML_PayoutUponDefault;)>               <!ATTLIST payoutUponDefault type NMTOKEN  #FIXED 'payoutUponDefault'><!ELEMENT calculationAgent                    (%MxML_CalculationAgent;)>                <!ATTLIST calculationAgent type NMTOKEN  #FIXED 'calculationAgent'><!ELEMENT referenceBond                       (%MxML_SecurityID;)>                      <!ATTLIST referenceBond type NMTOKEN  #FIXED 'securityId'><!ELEMENT creditEntity                        (%MxML_CreditEntity;)>                    <!ATTLIST creditEntity type NMTOKEN  #FIXED 'creditEntity'><!ELEMENT protectionForm                      (#PCDATA)>                                <!ATTLIST protectionForm type NMTOKEN  #FIXED 'string' protectionFormScheme CDATA #IMPLIED><!ELEMENT referencePrice                      (#PCDATA)>                                <!ATTLIST referencePrice type NMTOKEN  #FIXED 'decimal'><!ELEMENT digitalAmount                       (#PCDATA)>                                <!ATTLIST digitalAmount type NMTOKEN  #FIXED 'decimal'><!ELEMENT protectionPaymentUponDefault        (#PCDATA)>                                <!ATTLIST protectionPaymentUponDefault type NMTOKEN  #FIXED 'string' protectionPaymentUponDefaultScheme CDATA #IMPLIED><!ELEMENT premiumPaymentUponDefault           (#PCDATA)>                                <!ATTLIST premiumPaymentUponDefault type NMTOKEN  #FIXED 'string' premiumPaymentUponDefaultScheme CDATA #IMPLIED><!ELEMENT notifyingParty                      (#PCDATA)>                                <!ATTLIST notifyingParty type NMTOKEN  #FIXED 'string' notifyingPartyScheme CDATA #IMPLIED><!ELEMENT creditEventNotice                   (%MxML_CreditEventNotice;)>               <!ATTLIST creditEventNotice type NMTOKEN  #FIXED 'creditEventNotice'><!ELEMENT noticeOfIntendedPhysicalSettlement  (#PCDATA)>                                <!ATTLIST noticeOfIntendedPhysicalSettlement type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT noticeOfPubliclyAvailableInfo       (%MxML_NoticeOfPublicInfo;)>              <!ATTLIST noticeOfPubliclyAvailableInfo type NMTOKEN  #FIXED 'noticeOfPublicInfo'><!ELEMENT publicSource                        (#PCDATA)>                                <!ATTLIST publicSource type NMTOKEN  #FIXED 'string' ><!ELEMENT publicSources                       (%MxML_PublicSources;)>                   <!ATTLIST publicSources type NMTOKEN  #FIXED 'publicSources'><!ELEMENT specifiedNumber                     (#PCDATA)>                                <!ATTLIST specifiedNumber type NMTOKEN  #FIXED 'integer'><!ELEMENT maturityLimitation                  (#PCDATA)>                                <!ATTLIST maturityLimitation type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT paymentRequirement                  (%MxML_Amount;)>                          <!ATTLIST paymentRequirement type NMTOKEN  #FIXED 'amount'><!ELEMENT defaultRequirement                  (%MxML_Amount;)>                          <!ATTLIST defaultRequirement type NMTOKEN  #FIXED 'amount'><!ELEMENT gracePeriodExtension                (%MxML_Period;)>                          <!ATTLIST gracePeriodExtension type NMTOKEN  #FIXED 'period'><!ELEMENT ratingAgency                        (#PCDATA)>                                <!ATTLIST ratingAgency type NMTOKEN  #FIXED 'string' ><!ELEMENT rating                              (#PCDATA)>                                <!ATTLIST rating type NMTOKEN  #FIXED 'string' ><!ELEMENT bankruptcy                          (#PCDATA)>                                <!ATTLIST bankruptcy type NMTOKEN  #FIXED 'string' ><!ELEMENT failureToPay                        (%MxML_FailureToPay;)>                    <!ATTLIST failureToPay type NMTOKEN  #FIXED 'failureToPay'><!ELEMENT obligationDefault                   (#PCDATA)>                                <!ATTLIST obligationDefault type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT obligationAcceleration              (#PCDATA)>                                <!ATTLIST obligationAcceleration type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT repudiationOrMoratorium             (#PCDATA)>                                <!ATTLIST repudiationOrMoratorium type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT restructuring                       (%MxML_Restructuring;)>                   <!ATTLIST restructuring type NMTOKEN  #FIXED 'restructuring'><!ELEMENT restructuringSupplement             (%MxML_RestructuringSupplement;)>         <!ATTLIST restructuringSupplement type NMTOKEN  #FIXED 'restructuringSupplement'><!ELEMENT downgrade                           (%MxML_Downgrade;)>                       <!ATTLIST downgrade type NMTOKEN  #FIXED 'downgrade'><!ELEMENT userDefinedCreditEvent              (%MxML_UserDefinedCreditEvent;)>          <!ATTLIST userDefinedCreditEvent type NMTOKEN  #FIXED 'userDefinedCreditEvent'><!ELEMENT creditEvent                         (%MxML_CreditEvent;)>                     <!ATTLIST creditEvent type NMTOKEN  #FIXED 'creditEvent'><!ELEMENT creditEvents                        (%MxML_CreditEvents;)>                    <!ATTLIST creditEvents type NMTOKEN  #FIXED 'creditEvents'><!ELEMENT creditEventLabel                    (#PCDATA)>                                <!ATTLIST creditEventLabel type NMTOKEN  #FIXED 'string' ><!ELEMENT conditionsToPayment                 (%MxML_ConditionsToPayment;)>             <!ATTLIST conditionsToPayment type NMTOKEN  #FIXED 'conditionsToPayment'><!ELEMENT protectionSettlementMode            (#PCDATA)>                                <!ATTLIST protectionSettlementMode type NMTOKEN  #FIXED 'string' protectionSettlementModeScheme CDATA #IMPLIED><!ELEMENT cashSettlementTerms                 (%MxML_CashSettlementTerms;)>             <!ATTLIST cashSettlementTerms type NMTOKEN  #FIXED 'cashSettlementTerms'><!ELEMENT physicalSettlementTerms             (%MxML_PhysicalSettlementTerms;)>         <!ATTLIST physicalSettlementTerms type NMTOKEN  #FIXED 'physicalSettlementTerms'><!ELEMENT valuationLag                        (%MxML_Period;)>                          <!ATTLIST valuationLag type NMTOKEN  #FIXED 'period'><!ELEMENT valuationStep                       (%MxML_Period;)>                          <!ATTLIST valuationStep type NMTOKEN  #FIXED 'period'><!ELEMENT numberOfValuationDates              (#PCDATA)>                                <!ATTLIST numberOfValuationDates type NMTOKEN  #FIXED 'integer'><!ELEMENT dealer                              (#PCDATA)>                                <!ATTLIST dealer type NMTOKEN  #FIXED 'string' ><!ELEMENT valuationDate                       (%MxML_ValuationDate;)>                   <!ATTLIST valuationDate type NMTOKEN  #FIXED 'valuationDate'><!ELEMENT valuationTime                       (#PCDATA)>                                <!ATTLIST valuationTime  type NMTOKEN  #FIXED 'time' ><!ELEMENT valuationCity                       (#PCDATA)>                                <!ATTLIST valuationCity  type NMTOKEN  #FIXED 'string' ><!ELEMENT quotationMethod                     (#PCDATA)>                                <!ATTLIST quotationMethod type NMTOKEN  #FIXED 'string' quotationMethodScheme CDATA #IMPLIED><!ELEMENT quotationAmount                     (%MxML_Amount;)>                          <!ATTLIST quotationAmount type NMTOKEN  #FIXED 'amount'><!ELEMENT minimumQuotationAmount              (%MxML_Amount;)>                          <!ATTLIST minimumQuotationAmount type NMTOKEN  #FIXED 'amount'><!ELEMENT dealers                             (%MxML_Dealers;)>                         <!ATTLIST dealers type NMTOKEN  #FIXED 'dealers'><!ELEMENT excludeAccruedInterest              (#PCDATA)>                                <!ATTLIST excludeAccruedInterest type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT valuationMethod                     (#PCDATA)>                                <!ATTLIST valuationMethod type NMTOKEN  #FIXED 'string' validationMethodScheme CDATA #IMPLIED><!ELEMENT bondValuation                       (%MxML_BondValuation;)>                   <!ATTLIST bondValuation type NMTOKEN  #FIXED 'bondValuation'><!ELEMENT protectionSettlementCurrency        (#PCDATA)>                                <!ATTLIST protectionSettlementCurrency type NMTOKEN  #FIXED 'string' protectionSettlementCurrencyScheme CDATA #IMPLIED><!ELEMENT settlementLag                       (%MxML_Period;)>                          <!ATTLIST settlementLag type NMTOKEN  #FIXED 'period'><!ELEMENT cappedSettlementLag                 (%MxML_Period;)>                          <!ATTLIST cappedSettlementLag type NMTOKEN  #FIXED 'period'><!ELEMENT pariPassuRanking                    (#PCDATA)>                                <!ATTLIST pariPassuRanking type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT standardSpecifiedCurrencies         (#PCDATA)>                                <!ATTLIST standardSpecifiedCurrencies type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT specifiedCurrencies                 (%MxML_Currencies;)>                      <!ATTLIST specifiedCurrencies type NMTOKEN  #FIXED 'currencies'><!ELEMENT notSovereignLender                  (#PCDATA)>                                <!ATTLIST notSovereignLender type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT notDomesticCurrency                 (#PCDATA)>                                <!ATTLIST notDomesticCurrency type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT domesticCurrency                    (#PCDATA)>                                <!ATTLIST domesticCurrency type NMTOKEN  #FIXED 'string' ><!ELEMENT notDomesticLaw                      (#PCDATA)>                                <!ATTLIST notDomesticLaw type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT listed                              (#PCDATA)>                                <!ATTLIST listed type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT notContingent                       (#PCDATA)>                                <!ATTLIST notContingent type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT notDomesticIssuance                 (#PCDATA)>                                <!ATTLIST notDomesticIssuance type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT notContingentSupplement             (#PCDATA)>                                <!ATTLIST notContingentSupplement type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT assignableLoan                      (#PCDATA)>                                <!ATTLIST assignableLoan type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT consentRequirementLoan              (#PCDATA)>                                <!ATTLIST consentRequirementLoan type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT directLoanParticipation             (#PCDATA)>                                <!ATTLIST directLoanParticipation type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT indirectLoanParticipation           (#PCDATA)>                                <!ATTLIST indirectLoanParticipation type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT qualifyingParticipationSeller       (#PCDATA)>                                <!ATTLIST qualifyingParticipationSeller type NMTOKEN  #FIXED 'string'  qualifyingParticipationSellerScheme CDATA #IMPLIED><!ELEMENT transferable                        (#PCDATA)>                                <!ATTLIST transferable type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT maximumMaturity                     (#PCDATA)>                                <!ATTLIST maximumMaturity type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT acceleratedOrMatured                (#PCDATA)>                                <!ATTLIST acceleratedOrMatured type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT notBearer                           (#PCDATA)>                                <!ATTLIST notBearer type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT otherObligations                    (%MxML_SecurityIDs;)>                     <!ATTLIST otherObligations type NMTOKEN  #FIXED 'securityIds'><!ELEMENT excludedObligations                 (%MxML_SecurityIDs;)>                     <!ATTLIST excludedObligations type NMTOKEN  #FIXED 'securityIds'><!ELEMENT otherObligationsRelatedComment      (#PCDATA)>                                <!ATTLIST otherObligationsRelatedComment type NMTOKEN  #FIXED 'string' ><!ELEMENT excludedObligationsRelatedComment   (#PCDATA)>                                <!ATTLIST excludedObligationsRelatedComment type NMTOKEN  #FIXED 'string'><!ELEMENT referenceObligationsCategory        (#PCDATA)>                                <!ATTLIST referenceObligationsCategory type NMTOKEN  #FIXED 'string' obligationsCategoryScheme CDATA #IMPLIED><!ELEMENT specifiedObligations                (%MxML_SpecifiedObligations;)>            <!ATTLIST specifiedObligations type NMTOKEN  #FIXED 'specifiedObligations'><!ELEMENT deliverableObligationsCategory      (#PCDATA)>                                <!ATTLIST deliverableObligationsCategory type NMTOKEN  #FIXED 'string' obligationsCategoryScheme CDATA #IMPLIED><!ELEMENT partialSettlementOfLoans            (#PCDATA)>                                <!ATTLIST partialSettlementOfLoans type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT partialSettlementOfAssignableLoans  (#PCDATA)>                                <!ATTLIST partialSettlementOfAssignableLoans type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT partialSettlementOfParticipations   (#PCDATA)>                                <!ATTLIST partialSettlementOfParticipations type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT escrow                              (#PCDATA)>                                <!ATTLIST escrow type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT disputeResolution                   (#PCDATA)>                                <!ATTLIST disputeResolution type NMTOKEN  #FIXED 'string' disputeResolutionScheme CDATA #IMPLIED><!ELEMENT referenceObligationsCharacteristics (%MxML_ReferenceObligationsCharacteristics;)>    <!ATTLIST referenceObligationsCharacteristics type NMTOKEN  #FIXED 'referenceObligationsCharacteristics'><!ELEMENT deliverableObligationsCharacteristics (%MxML_DeliverableObligationsCharacteristics;)> <!ATTLIST deliverableObligationsCharacteristics type NMTOKEN  #FIXED 'deliverableObligationsCharacteristics'><!ELEMENT adrFormula                          (#PCDATA)>                                <!ATTLIST adrFormula type NMTOKEN  #FIXED 'string' adrFormulaScheme CDATA #IMPLIED><!ELEMENT securityCoupleComponent1            (%MxML_SecurityCoupleComponent;)>         <!ATTLIST securityCoupleComponent1 type NMTOKEN  #FIXED 'securityCoupleComponent'><!ELEMENT securityCoupleComponent2            (%MxML_SecurityCoupleComponent;)>         <!ATTLIST securityCoupleComponent2 type NMTOKEN  #FIXED 'securityCoupleComponent'><!ELEMENT futures                             (%MxML_Futures;)>                         <!ATTLIST futures type NMTOKEN  #FIXED 'futures'><!ELEMENT future                              (%MxML_Future;)>                          <!ATTLIST future type NMTOKEN  #FIXED 'future'><!ELEMENT maturitySetLabel                    (#PCDATA)>                                <!ATTLIST maturitySetLabel type NMTOKEN  #FIXED 'string'><!ELEMENT settlementMethod                    (#PCDATA)>                                <!ATTLIST settlementMethod type NMTOKEN  #FIXED 'string' settlementMethodScheme CDATA #IMPLIED><!ELEMENT equityFutureDefinition              (%MxML_EquityFutureDefinition;)>          <!ATTLIST equityFutureDefinition type NMTOKEN  #FIXED 'equityFutureDefinition'><!ELEMENT interestRateFutureDefinition        (%MxML_InterestRateFutureDefinition;)>    <!ATTLIST interestRateFutureDefinition type NMTOKEN  #FIXED 'interestRateFutureDefinition'><!ELEMENT bondFutureDefinition                (%MxML_BondFutureDefinition;)>            <!ATTLIST bondFutureDefinition type NMTOKEN  #FIXED 'bondFutureDefinition'><!ELEMENT maturitySet                         (%MxML_MaturitySet;)>                     <!ATTLIST maturitySet type NMTOKEN  #FIXED 'maturitySet'><!ELEMENT marginingMaturitySet                (%MxML_MaturitySet;)>                     <!ATTLIST marginingMaturitySet type NMTOKEN  #FIXED 'maturitySet'><!ELEMENT marginingFormula                    (#PCDATA)>                                <!ATTLIST marginingFormula type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED ><!ELEMENT treeStructureLabel                  (#PCDATA)>                                <!ATTLIST treeStructureLabel type NMTOKEN  #FIXED 'string'><!ELEMENT treeStructureId                     (#PCDATA)>                                <!ATTLIST treeStructureId type NMTOKEN  #FIXED 'decimal'><!ELEMENT treeLabel                           (#PCDATA)>                                <!ATTLIST treeLabel type NMTOKEN  #FIXED 'string'><!ELEMENT decisionTree                        (%MxML_DecisionTree;)>                    <!ATTLIST decisionTree type NMTOKEN  #FIXED 'decisionTree'><!ELEMENT rules                               (%MxML_Rules;)>                           <!ATTLIST rules type NMTOKEN  #FIXED 'rules'><!ELEMENT rule                                (%MxML_Rule;)>                            <!ATTLIST rule type NMTOKEN  #FIXED 'rule'><!ELEMENT criterias                           (%MxML_Criterias;)>                       <!ATTLIST criterias type NMTOKEN  #FIXED 'criterias'><!ELEMENT results                             (%MxML_Results;)>                         <!ATTLIST results type NMTOKEN  #FIXED 'results'><!ELEMENT criteria                            (%MxML_UserDefinedField;)>                <!ATTLIST criteria type NMTOKEN  #FIXED 'userDefinedField'><!ELEMENT result                              (%MxML_UserDefinedField;)>                <!ATTLIST result   type NMTOKEN  #FIXED 'userDefinedField'><!ELEMENT decisionTrees                       (%MxML_DecisionTrees;)>                   <!ATTLIST decisionTrees type NMTOKEN  #FIXED 'decisionTrees'><!ELEMENT bondPriceExpression                 (#PCDATA)>                                <!ATTLIST bondPriceExpression type NMTOKEN  #FIXED 'string' securityPriceExpressionScheme CDATA #IMPLIED ><!ELEMENT bondPriceData                       (%MxML_BondPriceData;)>                   <!ATTLIST bondPriceData type NMTOKEN  #FIXED 'bondPriceData'><!ELEMENT salesMargin                         (#PCDATA)>                                <!ATTLIST salesMargin type NMTOKEN  #FIXED 'decimal'><!ELEMENT cleanPrice                          (#PCDATA)>                                <!ATTLIST cleanPrice type NMTOKEN  #FIXED 'decimal'><!ELEMENT dirtyPrice                          (#PCDATA)>                                <!ATTLIST dirtyPrice type NMTOKEN  #FIXED 'decimal'><!ELEMENT accruedCoupon                       (#PCDATA)>                                <!ATTLIST accruedCoupon type NMTOKEN  #FIXED 'decimal'><!ELEMENT yield                               (#PCDATA)>                                <!ATTLIST yield type NMTOKEN  #FIXED 'decimal'><!ELEMENT customaryS8_5                       (#PCDATA)>                                <!ATTLIST customaryS8_5 type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA #IMPLIED><!ELEMENT doubleBarrierPeriod                 (#PCDATA)>                                <!ATTLIST doubleBarrierPeriod type NMTOKEN  #FIXED 'string' doubleBarrierPeriodScheme CDATA #IMPLIED><!ELEMENT inputDataKey                        (#PCDATA)>                                <!ATTLIST inputDataKey   type NMTOKEN  #FIXED 'string' ><!ELEMENT inputDataLabel                      (#PCDATA)>                                <!ATTLIST inputDataLabel type NMTOKEN  #FIXED 'string' ><!ELEMENT inputDataItem                       (%MxML_InputDataItem;)>                   <!ATTLIST inputDataItem  type NMTOKEN  #FIXED 'inputDataItem' ><!ELEMENT inputData                           (%MxML_InputData;)>                       <!ATTLIST inputData      type NMTOKEN  #FIXED 'inputData' ><!ELEMENT inputDataValue                      (%MxML_InputDataValue;)>                  <!ATTLIST inputDataValue type NMTOKEN  #FIXED 'inputDataValue' ><!ELEMENT forwardDelivery                     (#PCDATA)>                                <!ATTLIST forwardDelivery type NMTOKEN  #FIXED 'string' trueFalseScheme CDATA    #IMPLIED >